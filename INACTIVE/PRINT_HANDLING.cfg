#.................................................................................................................
# -SuperSlicer's start print gcode should contain the following:  
#   PRINT_START BED_TEMP=[first_layer_bed_temperature] EXTRUDER_TEMP=[first_layer_temperature]  
# -Cura's start print gcode should contain the following:  
#   PRINT_START BED_TEMP={material_bed_temperature_layer_0} EXTRUDER_TEMP={material_print_temperature_layer_0}
#   !! The following optional parameters can be specified. If not specified, the values set in printer.cfg will be used.
#    -Optionally can specify EXTRUDER_READY temperature, just below extruding temperature. The goal is to get the
#     nozzle hot enough to almost start oozing. For example, if using 240 for normal extruding, something such as
#     EXTRUDER_READY=210 would be sufficient.
#    -Optionally can specify ENCLOSURE_TEMP temperature, as ENCLOSURE_TEMP=40
#    -Optionally can specify Minutes to Soak, as SOAK=15
# -SuperSlicer's & Cura's end print gcode should contain the following:
#   Use PRINT_END for the slicer ending script
#.................................................................................................................
# Required variable(s) to be set. Add the following to your global variable dictionary block as:
#
#[gcode_macro globalvariables]
#variable_defaultTempNozzle: 240        # The default Nozzle Extruding temperature if none is specified
#variable_defaultWarmNozzle: 160        # The default Nozzle Warming temperature if none is specified
#variable_defaultReadyNozzle: 210       # The default Nozzle Ready temperature if none is specified
#variable_defaultEnclosure: 40          # The default Enclosure temperature if none is specified
#variable_defaultTempBed: 110           # The default Bed temperature if none is specified
#variable_PurgeRetract: 0.1             # After completing purgeline, how much retraction to perform (Not normally needed)
#variable_EndRetract: 2.0               # After print has completed, how much retraction to perform
#variable_QGLbeforeSoakPrint: True      # (True/False) Perfrom QGL before applying heat soak for PRINT
#variable_PrePrintSoakMinutes: 15       # Minutes to heat-soak prior to printing
#variable_PostPrintCool: 1              # Post-Print cooling to prevent nozzle string, minutes of cooling
#variable_PostPrintParkCool: 2          # Once parks, minutes of cooling
#gcode:
#.................................................................................................................
# Required external macro(s) used by this macro set.
#
# _HEAT_WAIT
# _COOL_WAIT
# G32 (in MACRO-G32.cfg)
# G3201 (in MACRO-G3201.cfg)
# CONFIG-NO_ENCLOSURE_CONTROL.cfg / CONFIG-ENCLOSURE_CONTROL.cfg for M141 command
# CURRENT_HIGH
# CURRENT_NORMAL
# PARK_UpperRight
# PARK_Center
#.................................................................................................................

[gcode_macro PRINT_START]
#
# -SuperSlicer's start print gcode should contain the following:
# print_start EXTRUDER={first_layer_temperature[initial_extruder] + extruder_temperature_offset[initial_extruder]} BED=[first_layer_bed_temperature] CHAMBER=[chamber_temperature] PRINT_MIN={first_layer_print_min[0]},{first_layer_print_min[1]} PRINT_MAX={first_layer_print_max[0]},{first_layer_print_max[1]}
#
description: Performs all needed moves prior to printing
gcode:
    CLEAR_PAUSE
    BED_MESH_CLEAR
    M220 S100
    M221 S100
    #SET_LED LED=nozzle RED=.2 GREEN=.2 BLUE=1
	STATUS_PRINTING
    {% set X_MID = printer.configfile.config["stepper_x"]["position_max"]|float / 2.0 %}
    {% set Y_MID = printer.configfile.config["stepper_y"]["position_max"]|float / 2.0 %}
    {% set defaultTN = printer["gcode_macro globalvariables"].defaulttempnozzle|float %}
    {% set defaultWN = printer["gcode_macro globalvariables"].defaultwarmnozzle|float %}
    {% set defaultRN = printer["gcode_macro globalvariables"].defaultreadynozzle|float %}
    {% set defaultSOAK = printer["gcode_macro globalvariables"].preprintsoakminutes|float %}
    {% set defaultENCLOSURE = printer["gcode_macro globalvariables"].defaultenclosure|float %}
    {% set purgeRetract = printer["gcode_macro globalvariables"].purgeretract|float %}
    {% set defaultTB = printer["gcode_macro globalvariables"].defaulttempbed|float %}
    {% set BED_TEMP = params.BED_TEMP|default(defaultTB)|float %}
    SET_GCODE_VARIABLE MACRO=_WAIT_Variable VARIABLE=ready VALUE={params.EXTRUDER_READY|default(defaultRN)|float}
    SET_GCODE_VARIABLE MACRO=_WAIT_Variable VARIABLE=temp VALUE={params.EXTRUDER_TEMP|default(defaultTN)|float}

    {% set ENCLOSURE_TEMP = params.ENCLOSURE_TEMP|default(defaultENCLOSURE)|float %}
    {% set SOAK = params.SOAK|default(defaultSOAK) %}
    M118 gCode file passed the following to PRINT_START:
    M118 { rawparams }

    # Bring bed to full temperature, only warm hotend
    M140 S{BED_TEMP}
    M104 S{defaultWN}
    M141 S{ENCLOSURE_TEMP}
    G90
    G21
    M83
    G92 E0.0
    # Reset the G-Code Z offset
    SET_GCODE_OFFSET Z=0.0
    M117 Performing initial homing.
        {% if printer["gcode_macro globalvariables"].qglbeforesoakprint|default() == true %}
            G32
            # Move the nozzle
            PARK_Center
          {% else %}
            G28
            # Not moving the probe if QGL was not peroformed
        {% endif %}
    M117 Bringing bed to temperature.
	STATUS_HEATING
    #SET_LED LED=nozzle INDEX=2 RED=1 GREEN=0 BLUE=0
    #SET_LED LED=nozzle INDEX=1 RED=.5 GREEN=.5 BLUE=.5
    M190 S{BED_TEMP}
    _WAIT_Start MINUTES={SOAK}


[gcode_macro _PRINT_START2]
description: Part 2 - Performs all needed moves prior to printing
gcode:
    RESUME_BASE
    {% set EXTRUDER_READY = printer["gcode_macro _WAIT_Variable"].ready|int %}
    {% set EXTRUDER_TEMP = printer["gcode_macro _WAIT_Variable"].temp|int %}
    #SET_LED LED=nozzle RED=.5 GREEN=0 BLUE=.5
	STATUS_LEVELING
    M117 Performing hot level.
    CURRENT_HIGH
    M400
    M104 S{EXTRUDER_READY}
    G3201
    M104 S{EXTRUDER_TEMP}
    G1 X0 Y20 F4000
    G1 Z0.5
    M117 Bringing nozzle to temperature.
    #SET_LED LED=nozzle INDEX=2 RED=1 GREEN=0 BLUE=0
    #SET_LED LED=nozzle INDEX=1 RED=.5 GREEN=.5 BLUE=.5
	STATUS_HEATING
    M109 S{EXTRUDER_TEMP}
    #SET_LED LED=nozzle RED=1 GREEN=0 BLUE=0
	# enable the filament sensor
	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1	
    _FILAMENT_READY
    M117 Commencing print.
    M118 Commencing print.
    #SET_LED LED=nozzle RED=.5 GREEN=.5 BLUE=.5
	STATUS_PRINTING


#.................................................................................................................
[gcode_macro PRINT_END]
# Use PRINT_END for the slicer ending script
description: Performs all needed actions upon completion of printing
gcode:
    SET_VELOCITY_LIMIT ACCEL={printer["gcode_macro globalvariables"].nplimitaccel|float} ACCEL_TO_DECEL={printer["gcode_macro globalvariables"].nplimitdecel|float}
    {% set EndRetract = printer["gcode_macro globalvariables"].endretract|float %}
    {% set Z_MAX = printer.configfile.config["stepper_z"]["position_max"]|float -1 %}  
    {% set X_MAX = printer.configfile.config["stepper_x"]["position_max"]|float -1 %}
    {% set Z_POS = printer.toolhead.position.z + 10 %}
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
	# disables the filament sensor
	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-{EndRetract} F3600        ; retract filament
    TURN_OFF_HEATERS
    CURRENT_NORMAL
    G91
    G0 Z5 F1000
    G90
    M400
    _COOL_WAIT MINUTES={printer["gcode_macro globalvariables"].postprintcool|float}
    PARK_UpperRight
    M18 X Y E
    M107                           ; turn off fan
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
    _COOL_WAIT MINUTES={printer["gcode_macro globalvariables"].postprintparkcool|float}
    #SET_LED LED=nozzle RED=.2 GREEN=.5 BLUE=.2
	STATUS_READY
    M117 Finished printing, check nozzle clear.
    M118 Finished printing, check nozzle clear.



#.................................................................................................................
[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    {% set x = params.X|default(0) %}        #edit to your park position
    {% set y = params.Y|default(20) %}       #edit to your park position
    {% set z = params.Z|default(10)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
      {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    PAUSE_BASE
	STATUS_READY
	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
        G1 E-{e} F2100
      {% else %}
        {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}    
        G1 Z{z_safe}
        G90
        G1 X{x} Y{y} F4000
      {% else %}
        {action_respond_info("Printer not homed")}
    {% endif %}



#.................................................................................................................
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    {% set e = params.E|default(1) %} #edit to your retract length
	#### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
        {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
      {%else %}
        {% set get_params = "" %}
    {% endif %}
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
        G1 E{e} F2100
      {% else %}
        {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}
	STATUS_PRINTING


#.................................................................................................................
[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    SET_VELOCITY_LIMIT ACCEL={printer["gcode_macro globalvariables"].nplimitaccel|float} ACCEL_TO_DECEL={printer["gcode_macro globalvariables"].nplimitdecel|float}
    {% set EndRetract = printer["gcode_macro globalvariables"].endretract|float %}
    {% set Z_MAX = printer.configfile.config["stepper_z"]["position_max"]|float -1 %}
    {% set X_MAX = printer.configfile.config["stepper_x"]["position_max"]|float -1 %}
    {% set Z_POS = printer.toolhead.position.z + 10 %}
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-{EndRetract} F3600        ; retract filament
    CLEAR_PAUSE
    TURN_OFF_HEATERS
	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
    CANCEL_PRINT_BASE
    CURRENT_NORMAL
    M106 S250
    G90
    PARK_UpperRight
    M18 X Y E
    M107                           ; turn off fan
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
    _COOL_WAIT MINUTES={printer["gcode_macro globalvariables"].postprintparkcool|float}
    #SET_LED LED=nozzle RED=.2 GREEN=.5 BLUE=.2
	STATUS_READY
    M117 Cancelled print, check nozzle clear.
    M118 Cancelled print, check nozzle clear.
 
