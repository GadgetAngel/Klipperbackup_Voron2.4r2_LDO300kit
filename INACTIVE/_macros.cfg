#####################################################################
#   Macros Begin
#####################################################################
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
# VORON 2.4/300mm/24v/BTT Octopus Pro/CW2/E3D REVO Voron /0.4 nozzle/Euclid Probe/Sexbolt Z-Endstop  
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-


#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#  Macro settings 
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

[gcode_macro configvars]
#------------------------------------------------- EUCLID PROBE -------------------------------------------------- 
variable_EuclidX: 47                   # X Position directly over probe
variable_EuclidY: 356.5                # Y Position directly over probe
variable_EuclidSwipeX: 100             # X Position, swipe to the side to free probe of dock
variable_EuclidSafeDeployZ: 25         # Z Safe height for deployment approach
variable_EuclidSafeStowZ: 30           # Z Safe height following stowing the probe (break mag pull)
variable_EuclidDeployZ: 2.5            # Lower to just above probe, no physical contact
variable_EuclidStowZ: 2.0              # Lower to exact postion for dock entry/exit

#------------------------------------------------ Z COMPENSATION ------------------------------------------------- 
variable_EuclidZCompensation: 9.44     # Z0 Compensation based off probe height, used in G3201. 0 to disable.
                                       # G3201 Description and usage below, ~line 110

variable_ProbeBoundingBox: 20          # Bounding box size to take probe samples, this is used for X & Y
variable_DoApplyMesh: True             # Apply mesh prior to probe sampling, for Z Compensation
variable_MeshToApply: "HOTMESH"        # The saved mesh to apply, mesh name must be enclosed with "". The bundled HOTMESH
                                       # macro will save it's results as "HOTMESH"
                                       # *!* To perform a fresh in-situation mesh calibration, instead of loading a saved
                                       # mesh, use "INSITU" for MeshToApply. This will be applied before Z Comp probing.
                                       # *!* To completely skip applying mesh, use "NONE" for MeshToApply

variable_ZprobeSpeed: 5.0              # Probing speed for Z Measurements
variable_ZprobeSamples: 7              # Samples probed per position, yeilding as calculated median. Keep this number odd e.g. 3,5,7...
variable_ZprobeTolerance: 0.050        # Sample Tolerance per Z Point
variable_ZprobeAbortTolerance: 1.0     # Tolerance to apply the Measured Z-0 Point or throw an error to check things
variable_ZprobeRetract: 1.5            # Retract from each probing for a D2F-5 1.2 should be good                                       

#----------------------------------------------- PRESSURE ADVANCE ------------------------------------------------ 
variable_PressureAdvance: 0.055        # Pressure Advance
variable_PressureAdvanceST: 0.030      # Pressure Advance Smooth Time

#------------------------------------------------- RETRACTIONS --------------------------------------------------- 
variable_PurgeRetract: 0.1             # After completing purgeline, how much retraction to perform (Not normally needed)
variable_EndRetract: 2.0               # After print has completed, how much retraction to perform

#---------------------------------------------- HEATSOAK & COOLING -----------------------------------------------
variable_QGLbeforeSoakMesh: True       # (True/False) Perfrom QGL before applying heat soak for HOTMESH 
variable_QGLbeforeSoakPrint: True      # (True/False) Perfrom QGL before applying heat soak for PRINT
variable_HotmeshSoakMinutes: 15        # Minutes to heat-soak prior to running mesh
variable_PrePrintSoakMinutes: 15       # Minutes to heat-soak prior to printing
variable_InsituMeshSoakMinutes: 01     # Minutes to heat-soak prior to performing an insitu mesh (in addition to PrePrintSoak)
variable_PostPrintCool: 1              # Post-Print cooling to prevent nozzle string, minutes of cooling
variable_PostPrintParkCool: 2          # Once parks, minutes of cooling

#------------------------------------------- PRINTING MOTOR CURRENTS --------------------------------------------- 
variable_PrintCurrentXY: 1.1           # Steppermotor current to be used while printing
variable_PrintCurrentZ: 0.8            # Steppermotor current to be used while printing

#--------------------------------------------- DEFAULT TEMPERATURES ---------------------------------------------- 
variable_defaultTempNozzle: 240        # The default Nozzle Extruding temperature if none is specified
variable_defaultWarmNozzle: 160        # The default Nozzle Warming temperature if none is specified
variable_defaultTempBed: 110           # The default Bed temperature if none is specified
gcode:
#                          !  !  !  !  Klipper Configuration starts ~line 180  !  !  !  !  


#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#  NOTES & INFORMATION
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

# PRINT_START will home and the level the gantry*, perform a heat soak, then G3201, and lastly bring the hotend
# to temperature and execute a purge line from the front left across X-axis to check/verify easily. The purge
# line extrusion rate will be calculated by using the [nozzle_diameter] value. (*if value is True above)
#
# PRINT_END will raise by 10mm when the print has completed, then performs a cooling period by turning the fan
# fully on and then parks the toolhead at the top, front-right position. The parked Z position will be at least
# 75% of the max axis height or at the printed object's Z height + 10 - whichever is taller - this allows for
# easy visual inspection of the toolhead/nozzle (and a reminder to do so) and removal of any debris. Additionally
# to note, during PRINT_END or PRINT_START, the toolhead is placed back at Y20 to allow room for the fan(s) to
# pull air without being blocked by being pressed up against the doors. 
#  
# NOTE: This configuration utilizes the Euclid probe with the dock mounted on the bed rail. For fetching and
# docking the probe, use M401 and M402 as they have safety checks to prevent crashes! 
# The following STL files were used:  
# https://github.com/nionio6915/Euclid_Probe/blob/main/stls/Voron/Voron2.4BedMountV3.stl
# https://github.com/nionio6915/Euclid_Probe/blob/main/stls/Mount%20Adapters/Omron/OmronFotekM2_V3.stl
#
# My Github (This file)                     https://github.com/rkolbi/voron2.4/blob/main/printer.cfg
# RepRap G-code Wiki                        https://reprap.org/wiki/G-code
# Klipper Documentation (Main):             https://www.klipper3d.org/Overview.html
# Klipper Configuration Reference:          https://www.klipper3d.org/Config_Reference.html
# Klipper G-Code & Additional Commands:     https://www.klipper3d.org/G-Codes.html
# Klipper Github:                           https://github.com/Klipper3d
# Klipper Reddit:                           https://www.reddit.com/r/klippers/
# Jinja2 Syntax & Semantics: https://jinja.palletsprojects.com/en/2.10.x/templates/
# Voron Documentation:                      https://docs.vorondesign.com/build/
# Voron Github:                             https://github.com/VoronDesign
# Voron Reddit:                             https://www.reddit.com/r/VORONDesign/
# Euclid Probe:                             https://euclidprobe.github.io/
# Bondtech LGX:                             https://www.bondtech.se/product/lgx-large-gears-extruder/
# Bontech CHT Nozzle:                       https://www.bondtech.se/product/bondtech-cht-coated-brass-nozzle/
# MandalaRoseWorks Kinematic Mounts: https://mandalaroseworks.com/products/matched-height-kinematic-kit
# whoppingchard's kinematic bed mounts- Github page: https://github.com/tanaes/whopping_Voron_mods/tree/main/kinematic_bed
# whoppingchard's Voron v2 Kinematic Bed Mount by Lightweight Labware:  https://dfh.fm/products/voron-v2-kinetic-bed-mounts-by-whoppingpochard?_pos=2&_sid=9da341c04&_ss=r                                    
# MandalaRoseWorks Ultraflat Mag Bed: https://mandalaroseworks.com/products/voron-350-ultraflat-bed
# whoppingchard's Ultra-Flat Aluminum Bed by Lightweight Labware :https://dfh.fm/products/ultra-flat-aluminum-bed?_pos=2&_sid=921b5b6dd&_ss=r

# Thanks to Daniel0815 for testing & assistance on Z compensation.

#.................................................................................................................
# Slicer Setup
#
# SuperSlicer's start print gcode should only contain the following:
#   PRINT_START BED_TEMP=[first_layer_bed_temperature] EXTRUDER_TEMP=[first_layer_temperature]
#
# SuperSlicer's end print gcode should contain the following:
#   Use PRINT_END for the slicer ending script



#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
# Bundled Macros withing this configuration:

#.................................................................................................................
# G3201 - No additional options / Usage: G3201
#   Homes the toolhead, performs quad gantry leveling, homes Z, and then probes five bed center points. The five
#   probing resultant median values are then averaged and compared to [variable_euclidZCompensation]. If the difference
#   between the probe findings and this variable is within [ZprobeAbortTolerance], then it will applied to the current
#   Z height which is defined as NEW_CURRENT_Z and then set with SET_KINEMATIC_POSITION.
#  *If [variable_euclidZCompensation] is set to 0, compensation will not be applied. Additionally, once
#   the Z-axis is homed, any existing compensation from G3201 will be discarded.
#  -To figure the ZCompensation value, do the following: Check nozzle clean and free of debris, same for bed.
#   Set [variable_euclidZCompensation] to 0 to disable G3201 from applying changes. Then dial-in your Z height as
#   set forth in the procedures found here: https://docs.vorondesign.com/build/startup/. Once you are satisfied with
#   your Z height, run G3201 from console. When it is done, note what it states as 'Current Average is:' - place
#   that yeilded value in the top-panel settings for [variable_euclidZCompensation]. Perform a first-layer print test
#   and adjust this setting up/down as required. Increasing this value will set the nozzle closer to the bed. For
#   example, if you were using a value of 9.4 and wanted a little more 'squish', try 9.44.
 
#.................................................................................................................
# G32 - No additional options / Usage: G32
#   Homes the toolhead, performs quad gantry leveling, and homes again.

#.................................................................................................................
# M401 - No additional options / # Usage: M401
#   Attach the Euclid probe to the toolhead.

#.................................................................................................................
# M402 - No additional options / Usage: M402
#   Remove the Euclid probe from the toolhead by placing it in the dock.

#.................................................................................................................
# HOTMESH - Optional parameters: BED_TEMP / Usage: HOTMESH, HOTMESH BED_TEMP=110
#   Perform a heat soak, followed by a bed mesh. If no BED_TEMP is specified, [defaultTempBed] will be used.

#.................................................................................................................
# LOAD_FILAMENT - Optional parameters: TEMP / Usage: LOAD_FILAMENT, LOAD_FILAMENT TEMP=240
#   It brings the toolhead to the front, heats up (if not already hot), and extrudes 150mm of filament.
#   If no TEMP is specified, [defaultTempNozzle] will be used.

#.................................................................................................................
# UNLOAD_FILAMENT - Optional parameters: TEMP / Usage: UNLOAD_FILAMENT, UNLOAD_FILAMENT TEMP=240
#   It brings the toolhead to the front, heats up (if not already hot), and retracts 200mm of filament.
#   If no TEMP is specified, [defaultTempNozzle] will be used.

#.................................................................................................................
# NZL_PID - Optional parameters: BED_TEMP, NZL_TEMP / Usage: NZL_PID, NZL_PID NZL_TEMP=240 BED_TEMP=100
#   It performs bed heat soak and then nozzle PID tune. If no parameters are specified, BED_TEMP will be
#   [defaultTempBed], and NZL_TEMP will be [defaultTempNozzle].

#.................................................................................................................
# BED_PID - Optional parameters: BED_TEMP / Usage: BED_PID, BED_PID BED_TEMP=110
#   It performs bed PID tune. If no parameters are specified, BED_TEMP will be [defaultTempBed].

#.................................................................................................................
# PA_CAL - Optional parameters: BED, EXTRUDER, PA_START, PA_STEP, NZL
# Usage: PA_CAL BED=100 EXTRUDER=240 PA_START=0.03 PA_STEP=0.002 NZL=0.4
#   It performs a quick and simple line pressure advance test. First prints a line with the currently
#   set PA, move 30mm and then prints 20 line segments, 5mm apart, starting with PA_START, increasing each
#   line by PA_STEP. If no parameters are specified, PA_CAL will use the following:
#   PA_CAL BED=[defaultTempBed] EXTRUDER=[defaultTempNozzle] PA_START=0.0 PA_STEP=0.005 NZL=(as per printer.cfg)



#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#  Klipper Settings
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

#  __________________________________________________________________________
#  |   X0 Y306           X30 Y306       X100 Y306                           |
#  | * Dock on Gantry   * Dock Side    * Dock Preflight                     |
#  |                                                                        |
#  | * Dock Exit Position                                                   | 
#  |   X0 Y266                                                               |
#  |                                                                        |
#  |                                                                        |
#  | * Dock Re-entry staging  position                                      |
#  |   X0 Y236                                                               |
#  |                                                                        |
#  |                                * Probe Ready Position                  |
#  |                                  X150 Y150                             |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |________________________________________________________________________| 
#
# Above is example 300x300 bed to coorelate with macros and movements below.
# This example is for a fixed dock, moving gantry/carraige and fixed bed system. 
# For moving gantry sytem like Voron 2.4, there are some subltle things to change.
# We have attempetd indicate those in the comments throughout the example code.   
# Z elevation is shown in movements to ensure adequate Z elevation to avoid crashes. 
# With the coupling magnets +/- 2mm of the nozzle the probe trigger height is on the
# ordeer of 12mm, so 15mm is used as a safe height.
 
#...................................................................................................
[gcode_macro M600]
# M600 (Filament Change) Alias
# This allows your pause to work natively with slicers that insert M600 for color changes. This just calls the pause macro (below).
gcode:
    #LCDRGB R=0 G=1 B=0  ; Turn LCD green
    PAUSE                ; Pause

	
#...................................................................................................
[delayed_gcode DISABLEFILAMENTSENSOR]   
initial_duration: 1
gcode:
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0

	
#...................................................................................................
[delayed_gcode prerun]
initial_duration: 1
gcode:
    QUERY_PROBE
    M117 Printer online.
	status_off
    {% for s in range(0, 30) %}
		STATUS_PRERUN
        STATUS_PRERUN_MIDDLE
        G4 P100
        STATUS_PRERUN_MIDDLE
        STATUS_PRERUN
        G4 P50
    {% endfor %}
    STATUS_PRERUN_DONE

#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#  MACROS required for the base configuration
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

#...................................................................................................
[gcode_macro _PARK_TOOLHEAD]
gcode:
    {% set Z_MAX = printer.configfile.config["stepper_z"]["position_max"]|float -1 %}  
    {% set X_MAX = printer.configfile.config["stepper_x"]["position_max"]|float -1 %}
    {% set Z_POS = printer.toolhead.position.z + 10 %}

    M118 Parking toolhead.
    G90
    # park nozzle at top (at least 75% or Z max or Z + 10) front-right but allow room for hotend fan to pull air
    G0 X{X_MAX} Y20 Z{ [(Z_MAX*0.75), [Z_POS, Z_MAX]|min]|max } F3600 


#...................................................................................................
[gcode_macro CURRENT_HIGH]
description: Raises stepper current for printing routine.
# Setting are for Moons' MS17HD6P420I-04, Rated current @ 2A, Maximum current in RMS = 1.4
# but also consider stepper driver and cooling
# my stepper motors are:
#
# "B" or X motors: LDO-42STH48-2004MAH(VRN) [0.9 degree] URL: https://caribou3d.com/en/annex-k3/896-09-stepper-motor-ldo-42sth48-2004mahanxs80.html
# "A" or Y motors: LDO-42STH48-2004MAH(VRN) [0.9 degree] URL: https://caribou3d.com/en/annex-k3/896-09-stepper-motor-ldo-42sth48-2004mahanxs80.html
# Z motors (4): LDO-42STH48-2004AC(VRN) [1.8 degree] URL: https://github.com/LDOMotors/ldo-stepper-datasheets/blob/master/nema17(42mm_frame)/LDO-42STH48-2004AC%20RevA.pdf
# 
# Currnet ratings for "B" or X motor: 2 Amps
# Current ratings for "A" or Y motor: 2 Amps
# Current ratings for Z motors: 2 Amps
# Since my motors match the Moons' motor's Rated current I will leave this the same found at
#       https://github.com/nionio6915/Euclid_Probe/blob/main/Firmware_Examples/Klipper/user_contrib/voron/Voron2.4_rkolbi.cfg
#
gcode:
    M117 Increased motor currents. #    <----------------<----------------<----------------<----------------<----------------<---<Stepper Print Currents<<<
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT=1.1
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT=1.1
    SET_TMC_CURRENT STEPPER=stepper_z CURRENT=0.8
    SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT=0.8
    SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT=0.8
    SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT=0.8


#...................................................................................................
[gcode_macro CURRENT_NORMAL]
description: Lowers stepper current for NON-printing routines, as set in [tmc2209 stepper_XX] above.
gcode:
    M117 Decreased motor currents.
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={ printer.configfile.config["tmc2209 stepper_x"]["run_current"] }
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={ printer.configfile.config["tmc2209 stepper_y"]["run_current"] }
    SET_TMC_CURRENT STEPPER=stepper_z CURRENT={ printer.configfile.config["tmc2209 stepper_z"]["run_current"] }
    SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT={ printer.configfile.config["tmc2209 stepper_z1"]["run_current"] }
    SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT={ printer.configfile.config["tmc2209 stepper_z2"]["run_current"] }
    SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT={ printer.configfile.config["tmc2209 stepper_z3"]["run_current"] } 


#...................................................................................................
[gcode_macro _HEAT_WAIT]
gcode:
    {% set MINUTES = params.MINUTES|default(12)|int %}
    {% for i in range(0, MINUTES) %}
        M117 Warming... {MINUTES-i} minute remaining.
        {% for s in range(0, 60) %}
#            SET_LED LED=nozzle INDEX=1 RED=.5 GREEN=0 BLUE=0
#            SET_LED LED=nozzle INDEX=2 RED=0 GREEN=0 BLUE=.5
#            G4 P500
#            SET_LED LED=nozzle INDEX=1 RED=0 GREEN=0 BLUE=.5
#            SET_LED LED=nozzle INDEX=2 RED=.5 GREEN=0 BLUE=0
#            G4 P500
			STATUS_HEATING
            G4 P800
			STATUS_BUSY
            G4 P200
        {% endfor %}
    {% endfor %}


#...................................................................................................
[gcode_macro _COOL_WAIT]
gcode:
    M106 S250
    {% set MINUTES = params.MINUTES|default(1)|int %}
    {% for i in range(0, MINUTES) %}
        M117 Cooling... {MINUTES-i} minute remaining.
        {% for s in range(0, 60) %}
#            SET_LED LED=nozzle INDEX=1 RED=0 GREEN=0 BLUE=0
#            SET_LED LED=nozzle INDEX=2 RED=0 GREEN=0 BLUE=.5
#            G4 P500
#            SET_LED LED=nozzle INDEX=1 RED=0 GREEN=0 BLUE=.5
#            SET_LED LED=nozzle INDEX=2 RED=0 GREEN=0 BLUE=0
#            G4 P500
			STATUS_COOLING
            G4 P800
			STATUS_BUSY
            G4 P200
		{% endfor %}
    {% endfor %}
    M107


#...................................................................................................
[gcode_macro HOTMESH]
gcode:
    CLEAR_PAUSE
    {% if printer.idle_timeout.state == "Printing" or printer.pause_resume.is_paused %}
        {action_respond_info("Cannot do that while printing")}
    {% else %}
        {% set BED_TEMP = params.BED_TEMP|default(100)|float %}
#        SET_LED LED=nozzle RED=.2 GREEN=.2 BLUE=1
		STATUS_MESHING
        # Bring bed to full temperature, only warm hotend
        M140 S{BED_TEMP}
        M104 S160 
        G90 
        # Reset the G-Code Z offset
        SET_GCODE_OFFSET Z=0.0
        M117 Performing initial homing.
		STATUS_HOMING
        G32
		STATUS_MESHING
        # Move the nozzle
        G1 X0 Y20 Z25 F3000
        M117 Bringing bed to temperature.
        M190 S{BED_TEMP}
        _HEAT_WAIT MINUTES=20 #    <----------------<----------------<----------------<----------------<----------------<--------<Hotmesh Heatsoak Minutes<<<
#        SET_LED LED=nozzle RED=.5 GREEN=0 BLUE=.5
        M117 Performing hot level.
        CURRENT_HIGH
        M400
        BED_MESH_CLEAR
		STATUS_HOMING
        G28
		STATUS_MESHING
        QUERY_PROBE
        {% if printer.probe.last_query %}
            M118 Fetching Euclid Probe.
            _PROBE_DEPLOY
        {% endif %}
        QUAD_GANTRY_LEVEL_ORIGINIAL
		STATUS_HOMING
        G28
		STATUS_MESHING
        M117 Performing heated bed mesh calibration.
        BED_MESH_PROFILE REMOVE=HOTMESH
        BED_MESH_CALIBRATE_ORIGINIAL PRINT_MIN={params.PRINT_MIN} PRINT_MAX={params.PRINT_MAX}
        BED_MESH_PROFILE SAVE=HOTMESH
        BED_MESH_OUTPUT PGP=1
        M118 Bed mesh calibration completed.
        TURN_OFF_HEATERS
        CURRENT_NORMAL
        M402
        _PARK_TOOLHEAD
        M18 X Y E
#        SET_LED LED=nozzle RED=.2 GREEN=.5 BLUE=.2
		STATUS_READY
        M117 Finished mesh.
        SAVE_CONFIG
    {% endif %}

#...................................................................................................   
#[gcode_macro PRINT_START]
##   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
#gcode:
#    G32                            ; home all axes
#    G90                            ; absolute positioning
#    G1 Z20 F3000                   ; move nozzle away from bed
#	# enable the filament sensor
#	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1

#...................................................................................................
[gcode_macro PRINT_START]
#
# Print start statement for SuperSlicer: 
# print_start EXTRUDER={first_layer_temperature[initial_extruder] + extruder_temperature_offset[initial_extruder]} BED=[first_layer_bed_temperature] CHAMBER=[chamber_temperature] PRINT_MIN={first_layer_print_min[0]},{first_layer_print_min[1]} PRINT_MAX={first_layer_print_max[0]},{first_layer_print_max[1]}
#
gcode:
    CLEAR_PAUSE
    BED_MESH_CLEAR
#    SET_LED LED=nozzle RED=.2 GREEN=.2 BLUE=1
	STATUS_PRINTING
    {% set BED_TEMP = params.BED_TEMP|default(80)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(230)|float %}
    {% set NZLD = printer.configfile.config["extruder"]["nozzle_diameter"]|float %}  
    # Bring bed to full temperature, only warm hotend
    M140 S{BED_TEMP}
    M104 S160
    G90
    # Reset the G-Code Z offset
    SET_GCODE_OFFSET Z=0.0
    M117 Performing initial homing.
    G32
    # Move the nozzle
    G1 X0 Y20 Z25 F3000
    M117 Bringing bed to temperature.
    #SET_LED LED=nozzle INDEX=2 RED=1 GREEN=0 BLUE=0
    #SET_LED LED=nozzle INDEX=1 RED=.5 GREEN=.5 BLUE=.5
	STATUS_HEATING
    M190 S{BED_TEMP}
    _HEAT_WAIT MINUTES=15 #    <----------------<----------------<----------------<----------------<----------------<------------<Pre-Print Heatsoak Minutes<<<
    #SET_LED LED=nozzle RED=.5 GREEN=0 BLUE=.5
	STATUS_LEVELING    
	M117 Performing hot level.
    CURRENT_HIGH
    M400
    G3200
    M104 S{EXTRUDER_TEMP}
    G1 X0 Y20 F5000.0
    G1 Z0.5
    M117 Bringing nozzle to temperature.
#    SET_LED LED=nozzle INDEX=2 RED=1 GREEN=0 BLUE=0
#    SET_LED LED=nozzle INDEX=1 RED=.5 GREEN=.5 BLUE=.5
	STATUS_HEATING
    M109 S{EXTRUDER_TEMP}
	# enable the filament sensor
	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1
    M117 Purging the extruder.
#    SET_LED LED=nozzle RED=1 GREEN=0 BLUE=0
	STATUS_BUSY
    # Purge line start
    G1 X0 Y19.8 Z0.3 F1500.0
    G1 E{(12.5 * NZLD)} F3600
    M400    
    G1 X0 Y0 Z0.3 F1500.0
    G1 X130 Y0.0 Z0.3 F1500.0 E{(37.5 * NZLD)}
    G1 X130 Y0.3 Z0.3 F5000.0
    G1 X010 Y0.3 Z0.3 F1500.0 E{(75.0 * NZLD)}
    M400
    G92 E0
    # Purge line completed
    G1 Z5.0 F3000
    M117 Printing gcode file.
#    SET_LED LED=nozzle RED=.5 GREEN=.5 BLUE=.5
	STATUS_BUSY

#...................................................................................................
#[gcode_macro PRINT_END]
##   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
#gcode:
#    # safe anti-stringing move coords
#    {% set th = printer.toolhead %}
#    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
#    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
#    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
#    
#    SAVE_GCODE_STATE NAME=STATE_PRINT_END
#	
#	# disables the filament sensor
#	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
#    
#    M400                           ; wait for buffer to clear
#    G92 E0                         ; zero the extruder
#    G1 E-5.0 F1800                 ; retract filament
#    
#    TURN_OFF_HEATERS
#    
#    G90                                      ; absolute positioning
#    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
#    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
#    M107                                     ; turn off fan
#    
#    BED_MESH_CLEAR
#    RESTORE_GCODE_STATE NAME=STATE_PRINT_END


#...................................................................................................
[gcode_macro PRINT_END]
# Use PRINT_END for the slicer ending script
gcode:
    {% set Z_MAX = printer.configfile.config["stepper_z"]["position_max"]|float -1 %}  
    {% set X_MAX = printer.configfile.config["stepper_x"]["position_max"]|float -1 %}
    {% set Z_POS = printer.toolhead.position.z + 10 %}
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
	# disables the filament sensor
	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-2.0 F3600                 ; retract filament
    TURN_OFF_HEATERS
    CURRENT_NORMAL
    G91
    G0 Z5
    G90
    M400
    _COOL_WAIT MINUTES=1
    _PARK_TOOLHEAD
    M18 X Y E
    M107                           ; turn off fan
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
    _COOL_WAIT MINUTES=2 #    <----------------<----------------<----------------<----------------<----------------<-------------<Post-Print Cooldown Minutes<<<
    #SET_LED LED=nozzle RED=.2 GREEN=.5 BLUE=.2
	STATUS_READY
    M117 Finished printing, check nozzle clear.
    M118 Finished printing, check nozzle clear.

#...................................................................................................
[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    # Parameters
    {% set z = params.Z|default(10)|int %}                                                   ; z hop amount
    
    {% if printer['pause_resume'].is_paused|int == 0 %}
		STATUS_READY
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro
                                
        SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0                                  ; disable filament sensor       
        SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume                
        PAUSE_BASE                                                                           ; pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
            G91                                                                              ; relative positioning
            G1 Z{z} F900                                                                     ; raise Z up by z hop amount
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                  ; absolute positioning
        G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F6000   ; park toolhead at front center
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error) 
        M104 S0                                                                              ; turn off hotend
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set timeout to 12 hours
    {% endif %}

#...................................................................................................
#[gcode_macro PAUSE]
#description: Pause the actual running print
#rename_existing: PAUSE_BASE
#gcode:
#    ##### set defaults #####
#	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0                                  ; disable filament sensor       
#    {% set x = params.X|default(0) %}      #edit to your park position
#    {% set y = params.Y|default(0) %}      #edit to your park position
#    {% set z = params.Z|default(10)|float %} #edit to your park position
#    {% set e = params.E|default(1) %}        #edit to your retract length
#    ##### calculate save lift position #####
#    {% set max_z = printer.toolhead.axis_maximum.z|float %}
#    {% set act_z = printer.toolhead.position.z|float %}
#    {% set lift_z = z|abs %}
#    {% if act_z < (max_z - lift_z) %}
#        {% set z_safe = lift_z %}
#    {% else %}
#        {% set z_safe = max_z - act_z %}
#    {% endif %}
#    ##### end of definitions #####
#    PAUSE_BASE
#    G91
#    {% if printer.extruder.can_extrude|lower == 'true' %}
#        G1 E-{e} F2100
#    {% else %}
#        {action_respond_info("Extruder not hot enough")}
#    {% endif %}
#    {% if "xyz" in printer.toolhead.homed_axes %}    
#        G1 Z{z_safe}
#        G90
#        G1 X{x} Y{y} F6000
#    {% else %}
#        {action_respond_info("Printer not homed")}
#    {% endif %}


#...................................................................................................
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    # Parameters
    {% set e = params.E|default(2.5)|int %}                                          #edit to your retract length ; hotend prime amount (in mm)
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
        {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
        {% set get_params = "" %}
    {% endif %}
    
    {% if printer['pause_resume'].is_paused|int == 1 %}
        SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1                          ; enable filament sensor
        #RESETRGB                                                                    ; reset LCD color
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                        ; wait for hotend to heat back up
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                     ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)  
        G91                                                                          ; relative positioning
        M83                                                                          ; relative extruder positioning
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}                                                
            G1 Z{zhop * -1} E{e} F900                                                ; prime nozzle by E, lower Z back down
        {% else %}                      
            G1 Z{zhop * -1} F900                                                     ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
        {% endif %}                             
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                          ; restore position
        BASE_RESUME {get_params}  											         ; resume print
		STATUS_PRINTING
    {% endif %}


#...................................................................................................
#[gcode_macro RESUME]
#description: Resume the actual running print
#rename_existing: RESUME_BASE
#gcode:
#    ##### set defaults #####
#    {% set e = params.E|default(1) %} #edit to your retract length
#    #### get VELOCITY parameter if specified ####
#    {% if 'VELOCITY' in params|upper %}
#        {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
#    {%else %}
#        {% set get_params = "" %}
#    {% endif %}
#    ##### end of definitions #####
#    G91
#    {% if printer.extruder.can_extrude|lower == 'true' %}
#        G1 E{e} F2100
#    {% else %}
#        {action_respond_info("Extruder not hot enough")}
#    {% endif %}  
#    RESUME_BASE {get_params}


#...................................................................................................
#[gcode_macro CANCEL_PRINT]
#description: Cancel the actual running print
#rename_existing: BASE_CANCEL_PRINT
#gcode:
#    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value
#    CLEAR_PAUSE
#    SDCARD_RESET_FILE
#    PRINT_END
#    BASE_CANCEL_PRINT
	
	
#...................................................................................................
[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    {% set Z_MAX = printer.configfile.config["stepper_z"]["position_max"]|float -1 %}
    {% set X_MAX = printer.configfile.config["stepper_x"]["position_max"]|float -1 %}
    {% set Z_POS = printer.toolhead.position.z + 10 %}
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
	SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-2.0 F3600                 ; retract filament
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    TURN_OFF_HEATERS
	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0                          ; disable filament sensor
    CANCEL_PRINT_BASE
    CURRENT_NORMAL
    M106 S250
    G90
    _PARK_TOOLHEAD
    M18 X Y E
    M107                           ; turn off fan
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
    _COOL_WAIT MINUTES=3 #    <----------------<----------------<----------------<----------------<----------------<-------------<Cancelled Print Cooldown Minutes<<<
    #SET_LED LED=nozzle RED=.2 GREEN=.5 BLUE=.2
	STATUS_READY
    M117 Cancelled print, check nozzle clear.
    M118 Cancelled print, check nozzle clear.
    

#...................................................................................................
[gcode_macro LOAD_FILAMENT]
gcode:
    {% set X_MID = printer.configfile.config["stepper_x"]["position_max"]|float / 2.0 %}
    {% if printer.idle_timeout.state == "Printing" or printer.pause_resume.is_paused %}
        {% if printer.idle_timeout.state == "Printing" and printer.pause_resume.is_paused %}
           SAVE_GCODE_STATE NAME=HLF_state
            M83                       ; relative positioning on extruder    
            G0 X{X_MID} Y20 F3500     ; move to area where can easily load filament  
            G0 E50 F400               ; prime extruder
            G0 E50 F400               ; prime extruder
            G0 E50 F200               ; prime extruder
            G1 E-0.5 F1800            ; .5mm retraction
            G92 E0                    ; reset extruder
            M400
            RESTORE_GCODE_STATE NAME=HLF_state
        {% else %}
            {action_respond_info("Pause print first.")}
        {% endif %}
    {% else %}
        {% if printer.toolhead.homed_axes != "xyz" %}
            M117 Performing required homing.
			STATUS_HOMING
            G28
			STATUS_BUSY
        {% endif %}
        {% set TEMP = params.TEMP|default(235)|float %}
        M117 Heating nozzle to LOAD filamnet.
        G90                       ; absolute positioning
        G0 X{X_MID} Y20 F3500     ; move to area where can easily load filament  
        M109 S{TEMP}              ; set hotend temperature and wait
        M83                       ; relative positioning on extruder    
        G0 E50 F400               ; prime extruder
        G0 E50 F400               ; prime extruder
        G0 E50 F200               ; prime extruder
        G1 E-0.5 F1800            ; .5mm retraction
        G92 E0                    ; reset extruder
        M400
	_PARK_TOOLHEAD
        M18 X Y E
        TURN_OFF_HEATERS
        M117 Finished filament load.
		STATUS_READY
    {% endif %}


#...................................................................................................
[gcode_macro UNLOAD_FILAMENT]
gcode:
    {% set X_MID = printer.configfile.config["stepper_x"]["position_max"]|float / 2.0 %}
    {% if printer.idle_timeout.state == "Printing" or printer.pause_resume.is_paused %}
        {% if printer.idle_timeout.state == "Printing" and printer.pause_resume.is_paused %}
            SAVE_GCODE_STATE NAME=HUF_state
            M83                       ; relative positioning on extruder    
            G0 X{X_MID} Y20 F3500     ; move to area where can easily load filament  
            G0 E-50 F1000             ; retract additional filament to move out of melt zone
            G0 E-50 F1000             ; retract additional filament to move out of melt zone
            G0 E-50 F1000             ; retract additional filament to move out of melt zone
            G0 E-50 F1000             ; retract additional filament to move out of melt zone
            G92 E0                    ; reset extruder
            M400
            RESTORE_GCODE_STATE NAME=HUF_state
        {% else %}
            {action_respond_info("Pause print first.")}
        {% endif %}
    {% else %}
        {% if printer.toolhead.homed_axes != "xyz" %}
            M117 Performing required homing.
			STATUS_HOMING
            G28
			STATUS_BUSY
        {% endif %}
        {% set TEMP = params.TEMP|default(235)|float %}
        M117 Heating nozzle to UNLOAD filamnet.
        G90                       ; absolute positioning
        G0 X{X_MID} Y20 F3500     ; move to area where can easily load filament  
        M109 S{TEMP}              ; set hotend temperature and wait    
        M83                       ; relative positioning on extruder
        G0 E-50 F1000             ; retract additional filament to move out of melt zone
        G0 E-50 F1000             ; retract additional filament to move out of melt zone
        G0 E-50 F1000             ; retract additional filament to move out of melt zone
        G0 E-50 F1000             ; retract additional filament to move out of melt zone
        G92 E0                    ; reset extruder
        M400
	_PARK_TOOLHEAD
        M18 X Y E
        TURN_OFF_HEATERS
        M117 Finished filament unload.
		STATUS_READY
    {% endif %}


#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#  Additional MACROS, creature comforts / non-essential but helpful
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

#...................................................................................................
[gcode_macro NZL_PID]
# Usage: NZL_PID BED_TEMP=95 NZL_TEMP=238
gcode:
    {% if printer.idle_timeout.state == "Printing" or printer.pause_resume.is_paused %}
        {action_respond_info("Cannot do that while printing")}
    {% else %}
        {% set BED_TEMP = params.BED_TEMP|default(100)|float %}
        {% set NZL_TEMP = params.NZL_TEMP|default(235)|float %}
        {% set X_MID = printer.configfile.config["stepper_x"]["position_max"]|float / 2.0 %}
        {% set Y_MID = printer.configfile.config["stepper_y"]["position_max"]|float / 2.0 %}
        {% set Z_MAX = printer.configfile.config["stepper_z"]["position_max"]|float -1 %}
        {% set X_MAX = printer.configfile.config["stepper_x"]["position_max"]|float -1 %}
        #SET_LED LED=nozzle RED=.5 GREEN=.5 BLUE=0
		STATUS_HOMING
        G90
        M117 Performing initial homing.
        G32
        G1 Z5 Y{Y_MID} X{X_MID} F3000
        M117 Bringing bed to temperature.
        M190 S{BED_TEMP}
        _HEAT_WAIT MINUTES=12 #    <----------------<----------------<----------------<----------------<----------------<--------<Pre Nozzle-PID Heatsoak Minutes<<<
#        SET_LED LED=nozzle RED=.5 GREEN=.5 BLUE=0
		STATUS_BUSY
        M106 S64
        M117 Starting PID calibration.
        PID_CALIBRATE HEATER=extruder TARGET={NZL_TEMP}
        M117 Finished PID calibration.
        TURN_OFF_HEATERS
        CURRENT_NORMAL
        G90
        _PARK_TOOLHEAD
        M18 X Y E
#        SET_LED LED=nozzle RED=.2 GREEN=.5 BLUE=.2
	_COOL_WAIT MINUTES=3
		STATUS_READY
        SAVE_CONFIG
    {% endif %}


#...................................................................................................
[gcode_macro BED_PID]
# Usage: BED_PID BED_TEMP=95
gcode:
    {% if printer.idle_timeout.state == "Printing" or printer.pause_resume.is_paused %}
        {action_respond_info("Cannot do that while printing")}
    {% else %}
        {% set BED_TEMP = params.BED_TEMP|default(100)|float %}
        {% set X_MID = printer.configfile.config["stepper_x"]["position_max"]|float / 2.0 %}
        {% set Y_MID = printer.configfile.config["stepper_y"]["position_max"]|float / 2.0 %}
        {% set Z_MAX = printer.configfile.config["stepper_z"]["position_max"]|float -1 %}
        {% set X_MAX = printer.configfile.config["stepper_x"]["position_max"]|float -1 %}
#        SET_LED LED=nozzle RED=.5 GREEN=.5 BLUE=0
		STATUS_HOMING
        G90
        M117 Performing initial homing.
        G32
        G1 Z5 Y{Y_MID} X{X_MID} F3000
        M106 S64
        M117 Starting PID calibration.
        PID_CALIBRATE HEATER=heater_bed TARGET={BED_TEMP}
        M117 Finished PID calibration. 
        TURN_OFF_HEATERS
        CURRENT_NORMAL
        _PARK_TOOLHEAD
        M18 X Y E
#        SET_LED LED=nozzle RED=.2 GREEN=.5 BLUE=.2
		STATUS_BUSY
        _COOL_WAIT MINUTES=1
		STATUS_READY
        SAVE_CONFIG
    {% endif %}


#...................................................................................................
[gcode_macro PA_CAL]
description: Tune Pressure Advance
gcode:
    {% if printer.idle_timeout.state == "Printing" or printer.pause_resume.is_paused %}
        {action_respond_info("Cannot do that while printing")}
	
    {% else %}
        {% set BED = params.BED|default(99)|float %}
        {% set EXTRUDER = params.EXTRUDER|default(239)|float %}
        {% set PA_START = params.PA_START|default(0.0)|float %}
        {% set PA_STEP = params.PA_STEP|default(0.005)|float %}
        {% set NZL_CFG = printer.configfile.config["extruder"]["nozzle_diameter"]|float %}
        {% set NZL = params.NZL|default(NZL_CFG)|float %}
        {% set E20 = (0.1147475 * NZL) * 20|float %}
        {% set E40 = (0.1147475 * NZL) * 40|float %}
        {% set X_MID = printer.configfile.config["stepper_x"]["position_max"]|float / 2.0 %}
        {% set Y_MID = printer.configfile.config["stepper_y"]["position_max"]|float / 2.0 %}

        PRINT_START BED_TEMP={BED} EXTRUDER_TEMP={EXTRUDER}
		
        G21 ; Millimeter units
        G90 ; Absolute XYZ
        M83 ; Relative E
        SET_VELOCITY_LIMIT ACCEL=3000 ACCEL_TO_DECEL=1500
        G92 E0
        M106 S0 
		
        G1 X{(X_MID-40)} Y{(Y_MID-65)} F30000          ; move to start position
        G1 Z0.25 F300                                  ; move to layer height
        G1 E0.75 F1800                                 ; un-retract
        G1 X{(X_MID-20)} Y{(Y_MID-65)} E{E20} F300     ; print line part one
        G1 X{(X_MID+20)} Y{(Y_MID-65)} E{E40} F9000    ; print line part two
        G1 X{(X_MID+40)} Y{(Y_MID-65)} E{E20} F300     ; print line part three
        G1 E-0.75 F1800                                ; retract
        G1 Z1 F300                                     ; Move above layer height  
		
        {% for i in range(0, 20) %}
            SET_PRESSURE_ADVANCE ADVANCE={PA_START + (i * PA_STEP)} ; set Pressure Advance
            M117 Testing Pressure Advance at: {PA_START + (i * PA_STEP)}
            G1 X{(X_MID-40)} Y{(Y_MID-35)+(5*i)} F30000           ; move to start position
            G1 Z0.25 F300                                         ; move to layer height
            G1 E0.75 F1800                                        ; un-retract
            G1 X{(X_MID-20)} Y{(Y_MID-35)+(5*i)} E{E20} F300      ; print line part one
            G1 X{(X_MID+20)} Y{(Y_MID-35)+(5*i)} E{E40} F9000     ; print line part two
            G1 X{(X_MID+40)} Y{(Y_MID-35)+(5*i)} E{E20} F300      ; print line part three
            G1 E-0.75 F1800                                       ; retract
            G1 Z1 F300                                            ; Move above layer height  
        {% endfor %}
	
	M117 Find best line and multiply it by ({PA_START} + (line * {PA_STEP}) ) to find your PA setting.
	M118 Find best line and multiply it by ({PA_START} + (line * {PA_STEP}) ) to find your PA setting.

        PRINT_END
		
    {% endif %}
	
[gcode_macro DUMP_VARIABLES]
# This dumps all current Klipper variables to the g-code terminal.
# This helps to find Klipper system variables for use in macros. 
# A filter for both name and value can be applied.
#
# URL: https://github.com/AndrewEllis93/Print-Tuning-Guide/blob/main/articles/useful_macros.md#dump-variables
gcode:
    {% set filter_name = params.NAME|default('')|string|lower %}
    {% set filter_value = params.VALUE|default('')|string|lower %}
    {% set show_cfg = params.SHOW_CFG|default(0)|int %}
    
    {% set out = [] %}

    {% for key1 in printer %}
        {% for key2 in printer[key1] %}
            {% if (show_cfg or not (key1|lower == 'configfile' and key2|lower in ['config', 'settings'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}
                {% set dummy = out.append("printer['%s'].%s = %s" % (key1, key2, printer[key1][key2])) %}
            {% endif %}
        {% else %}
            {% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}
                {% set dummy = out.append("printer['%s'] = %s" % (key1, printer[key1])) %}
            {% endif %}
        {% endfor %}
    {% endfor %}
    
    {action_respond_info(out|join("\n"))}
	

[gcode_macro GET_VARIABLE]
# This returns value and type of a single variable to the g-code terminal. 
# Keys and indexes can be chained to access nested dictionaries and lists.
# URL: https://github.com/AndrewEllis93/Print-Tuning-Guide/blob/main/articles/useful_macros.md#get-variable
gcode:
    {% set names = (params.NAME).split('.')|list %}
    {% set join = (params.JOIN)|default(1)|int %}
    
    {% set _dummy0 = namespace( break = 0 ) %}
    {% set _dummy1 = namespace( out = printer[names|first] ) %}
    
    {% for name in names if _dummy0.break == 0 %}
        {% if loop.index > 1 %}
            {% if name in _dummy1.out %}
                {% set _dummy1.out = _dummy1.out[name] %}
            {% elif name[0] in '0123456789' and _dummy1.out is iterable and _dummy1.out is not string and _dummy1.out is not mapping and _dummy1.out|length > name[0]|int %}
                {% set _dummy1.out = _dummy1.out[name|int] %}
            {% else %}
                {% set _dummy0.break = loop.index0 %}
            {% endif %}
        {% endif %}
    {% endfor %}
    
    {% if _dummy1.out is boolean %}
        { action_respond_info('Type: boolean') }
    {% elif _dummy1.out is float %}
        { action_respond_info('Type: float') }
    {% elif _dummy1.out is integer %}
        { action_respond_info('Type: integer') }
    {% elif _dummy1.out is mapping %}
        { action_respond_info('Type: mapping') }
    {% elif _dummy1.out is string %}
        { action_respond_info('Type: string') }
    {% elif _dummy1.out is iterable %}
        { action_respond_info('Type: iterable') }
    {% elif _dummy1.out is none %}
        { action_respond_info('Type: none') }
    {% elif _dummy1.out is undefined %}
        { action_respond_info('Type: undefined') }
    {% elif _dummy1.out is callable %}
        { action_respond_info('Type: callable') }
    {% else %}
        { action_respond_info('Type: unknown') }
    {% endif %}
    
    {% if join and _dummy1.out is iterable and _dummy1.out is not string and _dummy1.out is not mapping %}
        { action_respond_info('%s' % _dummy1.out|join("\n")) }
    {% else %}
        { action_respond_info('%s' % _dummy1.out) }
    {% endif %}
    
    {% if _dummy0.break != 0 %}
        { action_respond_info('"printer.%s" does not contain "%s"!' % (names[0:_dummy0.break]|join('.'), names[_dummy0.break])) }
    {% endif %}


[force_move]
enable_force_move: True

[gcode_macro FAKE_POSITION]
gcode:
    SET_KINEMATIC_POSITION X=30 Y=30 Z=30

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
	
#####################################################################
#   Macros End
#####################################################################