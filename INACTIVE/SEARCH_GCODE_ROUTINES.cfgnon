#.................................................................................................................
# Full credit to this macro belongs to 'Mental', this origin can be found at the following forum link:
#   https://github.com/richardjm/voronpi-klipper-backup/blob/master/macros.d/dump_parameters.cfg
#
# Credit for enabling to find a user defined string inside the GCODE macros (gcode_macro or delayed_gcode) goes to GadgetAngel
#.................................................................................................................
# SEARCH_GCODE_ROUTINES / Usage: SEARCH_GCODE_ROUTINES NAME=m190
#
# This Macro lists all your user defined g-code macros that use a command that you specify in the parmeter NAME
#
# If you want a list all your user_define G-Code macros just run the command without arguments: SEARCH_GCODE_ROUTINES
#
#.................................................................................................................
# Required variable(s) to be set. Add the following to your global variable dictionary block as:
#
# ---NONE---
#.................................................................................................................
# Required external macro(s) used by this macro set.
#
# ---NONE---
#.................................................................................................................

[gcode_macro SEARCH_GCODE_ROUTINES]
# This Macro lists all your user defined g-code macros that use a command that you specify in NAME=
#
# use : SEARCH_GCODE_ROUTINES NAME=m190
#
# if you want a list all your user_define G-Code macros just run the command without arguments: SEARCH_GCODE_ROUTINES
#
# URL: https://github.com/AndrewEllis93/Print-Tuning-Guide/blob/main/articles/useful_macros.md#dump-variables

#printer['configfile'].config = {'gcode_macro CURRENT_NORMAL': {'gcode': '\n_general_Debug msg="CURRENT_NORMAL - entering"}}
gcode:
    {% set filter_name = params.NAME|default(' ')|string|lower %}
    
    {% set out = [] %}
    {% set ns = namespace(num=0, delayed_num=0) %}
    {% set string3 = "gcode_macro " %}
    {% set string3_2 = "delayed_gcode" %}
    {% set string4 = "gcode" %}
    {% set gcodetxt1 = "G-CODE_________name" %}
    {% set gcodetxt2 = "DELAYED_G-CODE_name" %}
    
    {% for key1 in printer %}
        {% for key2 in printer[key1] %}            
            {% if ( (key1|lower == 'configfile') and (key2|lower in ['config']) ) %}
                    {% if printer[key1][key2].items() %}
                        {% for key3, value3 in printer[key1][key2].items() %}
                            #comment : key3 = gcode_macro print_end; value3 = {'gcode': '\n_general_debug msg="
                            {% if string3 in key3 or string3_2 in key3%}
                                    {% for key4, value4 in value3.items() %}
                                         # comment : key4 = gcode; value4={% set message = params.msg %}
                                        {% if ((string4 in key4) and ((filter_name|lower) in (value4|lower))) %}
                                              {% if string3 in key3 %}
                                                  {% set ns.num = ns.num + 1 %}
                                                  {% set dummy4 = out.append('%19s[%d]: %s' % ( (gcodetxt1.rjust(19," ")), ns.num, key3[12:]|upper) ) %}
                                              {% elif string3_2 in key3 %}
                                                  {% set ns.delayed_num = ns.delayed_num + 1 %}
                                                  {% set dummy4 = out.append("%19s[%d]: %s" % ( gcodetxt2, ns.delayed_num, key3[14:]|upper) ) %}
                                              {% endif %}
                                        {% else %}
                                        {% endif %} 
                                    {% endfor %}
                            {% endif %}
                        {% endfor %}
                    {% endif %}
           {% endif %}
        {% endfor %}
    {% endfor %}  
    {action_respond_info("Found a TOTAL of %d occurrances for %s command in USER MACROS." % ((ns.num + ns.delayed_num), filter_name|upper)) }
    {action_respond_info("Found %d occurrances in G-Code macros & Found %d occurrances in DELAYED G-Code macros." % (ns.num, ns.delayed_num)) }
    {action_respond_info("The following list of G-Code macros contains the command:")}
    {action_respond_info(out|join("\n"))}


