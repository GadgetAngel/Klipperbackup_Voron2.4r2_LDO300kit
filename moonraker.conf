#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#  Moonraker Definitions
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

[server]
host: 0.0.0.0
port: 7125
ssl_port: 7130
klippy_uds_address: /tmp/klippy_uds
max_upload_size: 1024
#
#  By default the certificate path resolves to $HOME/printer_data/certs/moonraker.cert and 
#  the key path resolves to $HOME/printer_data/certs/moonraker.key. 
#  Both files may be symbolic links.
#
#  Moonraker's command line options are now specified in an environment file, 
#  making it possible to change these options without modifying the service file and 
#  reloading the systemd daemon. 
#  The default location of the environment file is ~/printer_data/systemd/moonraker.env
#  Verbose logging is enabled by the '-v' command line option.
#  while the -g (--debug) option enables debug features, including access to 
#  debug endpoints and the repo debug feature in update_manager
#
#  Resources:
#    https://moonraker.readthedocs.io/en/latest/installation/#installing-moonraker
#    https://moonraker.readthedocs.io/en/latest/user_changes/#october-14th-2022
#    https://moonraker.readthedocs.io/en/latest/api_changes/#march-4th-2022

[file_manager]
queue_gcode_uploads: False
#   When set to True the file manager will add uploads to the job_queue when
#   the `start_print` flag has been set. The default if False.
enable_object_processing: True
#   When set to True gcode files will be run through a "preprocessor"
#   during metdata extraction if object tags are detected.  This preprocessor
#   replaces object tags with G-Code commands compatible with Klipper's
#   "cancel object" functionality.  Note that this process is file I/O intensive,
#   it is not recommended for usage on low resource SBCs such as a Pi Zero.
#   The default is False.
enable_inotify_warnings: True
#   When set to True Moonraker will generate warnings when inotify attempts
#   to add a duplicate watch or when inotify encounters an error.  On some
#   file systems inotify may not work as expected, this gives users the
#   option to suppress warnings when necessary.  The default is True.


[data_store]
temperature_store_size: 1200
gcode_store_size: 1000

[job_queue]
load_on_startup: False
#   When set to true the job queue will attempt to load the next
#   pending job when Klipper reports as "Ready".  If the queue has
#   been paused it will automatically resume.  Note that neither
#   the job_transition_delay nor the job_transition_gcode are
#   applied in this case.  The default is False.
automatic_transition: False
#   When set to True the queue will automatically transition to
#   the next job in the queue after the current job is complete.
#   This is useful for belt printers and other machines with the
#   ability to automate clearing of the build area.  When False
#   the queue will be paused after each job is loaded, requiring
#   that users manually resume to load the next print.  The default
#   is False.
#job_transition_delay:
#   The amount of time to delay after completion of a job before
#   loading the next job on the queue.  The default is no delay.
#job_transition_gcode:
#   A gcode to execute after the completion of a job before the next
#   job is loaded.  If a "job_transition_delay" has been configured
#   this gcode will run after the delay.  The default is no gcode.

[announcements]
subscriptions:
    mainsail

[authorization]
trusted_clients:
    192.168.1.0/24
    FE80::/10
    ::1/128
    127.0.0.1
cors_domains:
  *://192.168.1.172
  *://192.168.1.172/LDO300Kit
  *://192.168.1.172:86
  *://192,168.1.154:7991
  *://192,168.1.154:7992
  *.local
  *://my.mainsail.xyz
  *://app.fluidd.xyz
 
[octoprint_compat]
enable_ufp: True

[history]

[include CONFIG-POWER_DEVICES.conf]

[update_manager]
enable_auto_refresh: True
refresh_interval: 24  #in hours
enable_system_updates: True
enable_packagekit: True
channel: dev

#[update_manager timelapse]
#type: git_repo
#primary_branch: main
#path: ~/moonraker-timelapse
#origin: https://github.com/mainsail-crew/moonraker-timelapse.git
#managed_services: klipper moonraker

[update_manager client mainsail]
type: web
repo: mainsail-crew/mainsail
path: ~/mainsail

[update_manager fluidd]
type: web
channel: stable
repo: fluidd-core/fluidd
path: ~/fluidd

[update_manager KlipperScreen]
type: git_repo
path: /home/pi/KlipperScreen
origin: https://github.com/jordanruthe/KlipperScreen.git
env: /home/pi/.KlipperScreen-env/bin/python
requirements: scripts/KlipperScreen-requirements.txt
install_script: scripts/KlipperScreen-install.sh
managed_services: KlipperScreen

[update_manager led_effect]
type: git_repo
path: ~/klipper-led_effect
origin: https://github.com/julianschill/klipper-led_effect.git
channel: dev
#https://github.com/julianschill/klipper-led_effect/tree/develop
#primary_branch: develop
is_system_service: False

[update_manager CanBoot]
type: git_repo
origin: https://github.com/Arksine/CanBoot.git
path: ~/CanBoot
is_system_service: False

[update_manager client z_calibration]
type: git_repo
path: ~/klipper_z_calibration
origin: https://github.com/protoloft/klipper_z_calibration.git
install_script: install.sh
managed_services: klipper

[update_manager crowsnest]
# [update_manager webcamd]
type: git_repo
path: ~/crowsnest
origin: https://github.com/mainsail-crew/crowsnest.git
install_script: tools/install.sh

[update_manager kiauh]
type: git_repo
path: ~/kiauh
origin: https://github.com/th33xitus/kiauh.git
is_system_service: False

# [update_manager timelapse]
# type: git_repo
# primary_branch: main
# path: ~/moonraker-timelapse
# origin: https://github.com/mainsail-crew/moonraker-timelapse.git

[update_manager extended_template]
type: git_repo
primary_branch: main
path: ~/klipper_extras
origin: https://github.com/droans/klipper_extras.git
env: ~/klippy-env/bin/python
requirements: extended_macro/requirements.txt
install_script: install.sh
is_system_service: False
managed_services: klipper

[mqtt]
address: 192.168.1.172
port: 1883
username: {secrets.mqtt_credentials.username}
password: {secrets.mqtt_credentials.password}
mqtt_protocol: v3.1.1
#   The protocol to use when connecting to the Broker.  May be v3.1,
#   v3.1.1, and v5.  The default is v3.1.1
enable_moonraker_api: True
#   If set to true the MQTT client will subscribe to API topic, ie:
#     {instance_name}/moonraker/api/request
#   This can be set to False if the user does not wish to allow API
#   requests over MQTT.  The default is True. 
instance_name: printer/ldo300kit
#   An identifier used to create unique API topics for each instance of
#   Moonraker on network.  This name cannot contain wildcards (+ or #).
#   For example, if the instance name is set to printer/ldo300kit, Moonraker
#   will subscribe to the following topic for API requests:
#     printer/ldo300kit/moonraker/api/request
#   Responses will be published to the following topic:
#     printer/ldo300kit/moonraker/api/response
#   The default is the machine's hostname.
#status_objects:
default_qos: 0
#api_qos:
#   The QOS level to use for the API topics. If not provided, the
#   value specified by "default_qos" will be used.

[include CONFIG-WLED_DEVICES.conf]

[secrets]
# Secrets file by default is located in ~/printer_data/moonraker.secrets
# I used a JSON file structure for my user_name and password
# Here is an example file of a "moonraker.secrets" file's contents:
#{
#    "mqtt_credentials": {
#        "username": "mqtt_user",
#        "password": "my_mqtt_password"
#    },
#    "home_assistant": {
#      "token": "long_token_string"
#    }
#}

#    NOTIFIER******
#    Enables the notification service. Multiple "notifiers" may be configured, 
#    each with their own section, ie: [notifier my_discord_server], [notifier my_phone].
#
#    All notifiers require an url for a service to be set up. 
#    Moonraker uses Apprise internally. 
#    You can find the available services and their corresponding urls here:
#         https://github.com/caronc/apprise/wiki.
#
#[notifier telegram]
#url: tgram://{bottoken}/{ChatID}
#   The url for your notifier. This URL accepts Jinja2 templates, so you can use [secrets] if you want.
#events: *
#   The events this notifier should trigger to. '*' means all events.
#   You can use multiple events, comma separated.
#   Valid events:
#      started
#      complete
#      error
#      cancelled
#      paused
#      resumed
#body: "Your printer status has changed to {event_name}"
#   The body of the notification. This option accepts Jinja2 templates.
#   You can use {event_name} to print the current event trigger name. And {event_args} for
#   the arguments that came with it. When using the notify functionality in a macro context, you can
#   use {event_message} to print out your message.
#title:
#   The optional title of the notification. Just as the body, this option accepts Jinja2 templates.
#attach:
#   An optional attachment. Can be an url of a webcam for example. Note: this isn't available for all
#   notification services. You can check if it's supported on the Apprise Wiki. Be aware that links in
#   your internal network can only be viewed within your network.


#   MOONRAKER-TIMELAPSE****
#   Don't forget to include timelapse.cfg to your printer.cfg
#   Uncomment to enable moonraker-timelapse
#   Resources:
#      https://github.com/mainsail-crew/moonraker-timelapse
#      https://github.com/mainsail-crew/moonraker-timelapse/blob/main/docs/installation.md
#      https://github.com/mainsail-crew/moonraker-timelapse/blob/main/docs/configuration.md
#
#   The following basic configuration is default to most images and don't need
#   to be changed in most scenarios. Only uncomment and change it if your
#   Image differ from standart installations. In most common scenarios 
#   a User only need [timelapse] in there configuration.
#
#[timelapse]
#output_path: ~/timelapse/
#   Directory where the generated video will be saved
#frame_path: /tmp/timelapse/
#   Directory where the temporary frames are saved
#ffmpeg_binary_path: /usr/bin/ffmpeg
#   Directory where ffmpeg is installed

[update_manager gcode_shell_command]
type: git_repo
path: ~/voron-klipper-extensions
origin: https://github.com/voidtrance/voron-klipper-extensions.git
install_script: ./../voron-klipper-extensions.sh
managed_services: klipper

[update_manager j2filter_macro]
type: git_repo
path: ~/j2filter_macro
origin: https://github.com/GadgetAngel/j2filter_macro.git
env: ~/klippy-env/bin/python
requirements: requirements.txt
install_script: install-j2filter.sh
is_system_service: False
managed_services: klipper

[update_manager z_v2settling_probe]
type: git_repo
path: ~/voron2_settling_probe
origin: https://github.com/GadgetAngel/voron2_settling_probe.git
install_script: install-v2settling_probe.sh
is_system_service: False
managed_services: klipper
    
