#.................................................................................................................
# _PROBE_ACTION - optional parameters:RESPOND{0,1}; required parameters: ACTION{'attach','dock','get_status','check_dock','check_attach'}; ID{0,1} 0=invalid ID;
#
#          / Usage:
#                   _PROBE_ACTION ACTION='attach'
#                   _PROBE_ACTION ACTION='attach' ID=1
#                   _PROBE_ACTION ACTION='attach' RESPOND=0
#                   _PROBE_ACTION ACTION='attach' RESPOND=1
#                   _PROBE_ACTION ACTION='attach' RESPOND=0 ID=1
#                   _PROBE_ACTION ACTION='attach' RESPOND=1 ID=1
#                   _PROBE_ACTION ACTION='dock'
#                   _PROBE_ACTION ACTION='dock' ID=1
#                   _PROBE_ACTION ACTION='dock' RESPOND=0
#                   _PROBE_ACTION ACTION='dock' RESPOND=1
#                   _PROBE_ACTION ACTION='dock' RESPOND=0 ID=1
#                   _PROBE_ACTION ACTION='dock' RESPOND=1 ID=1
#                   _PROBE_ACTION ACTION='get_status'
#                   _PROBE_ACTION ACTION='get_status' ID=1
#                   _PROBE_ACTION ACTION='get_status' RESPOND=0
#                   _PROBE_ACTION ACTION='get_status' RESPOND=1
#                   _PROBE_ACTION ACTION='get_status' RESPOND=0 ID=1
#                   _PROBE_ACTION ACTION='get_status' RESPOND=1 ID=1
#                   _PROBE_ACTION ACTION='check_dock'
#                   _PROBE_ACTION ACTION='check_dock' ID=1
#                   _PROBE_ACTION ACTION='check_dock' RESPOND=0
#                   _PROBE_ACTION ACTION='check_dock' RESPOND=1
#                   _PROBE_ACTION ACTION='check_dock' RESPOND=0 ID=1
#                   _PROBE_ACTION ACTION='check_dock' RESPOND=1 ID=1
#                   _PROBE_ACTION ACTION='check_attach'
#                   _PROBE_ACTION ACTION='check_attach' ID=1
#                   _PROBE_ACTION ACTION='check_attach' RESPOND=0
#                   _PROBE_ACTION ACTION='check_attach' RESPOND=1
#                   _PROBE_ACTION ACTION='check_attach' RESPOND=0 ID=1
#                   _PROBE_ACTION ACTION='check_attach' RESPOND=1 ID=1
#
#  Perform MagProbe action
#
#.................................................................................................................
# Required variable(s) to be set. Add the following to your global variable dictionary block as:
#
# [gcode_macro _GLOBAL_VARS]
#  variable_query_probe.id
#  variable__probe_action
#  variable__check_state
#  variable__probe_action.man_state
#  variable__check_state.error_id
#
# [gcode_macro _USER_VARIABLE]
#  variable_respond.probe_action
#  variable_mag_probe
#  variable_mag_probe.state
#  variable_use_default_probe
#  variable_use_settling_probe
#
#.................................................................................................................
# Required external macro(s) used by this macro.
#
# _Mag_Probe_Debug
# _DOCK_PROBE
# _ATTACH_PROBE
# _CHECK_STATE
# _GLOBAL_VARS
# _USER_VARIABLE
#
#.................................................................................................................

#.................................................................................................................
#
## URL Resources: https://github.com/zellneralex/klipper_config/blob/master/magprobe.cfg#L48
#      
## Used the same names as in <https://github.com/KevinOConnor/klipper/pull/4328>
## to make the switch easier after the PR is merged
#
#.................................................................................................................

[gcode_macro _PROBE_ACTION]
description : Helper: Mag Probe; Perform MagProbe action
# QUERY_PROBE must run direct before _PROBE_ACTION
# that relation is insured by the caller id
gcode:
  _Mag_Probe_Debug msg="_PROBE_ACTION - entering"
  {% set user = printer['gcode_macro _USER_VARIABLE'] %}
  {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
  {% set _probe_action = global._probe_action %}
  {% set mag_probe = user.mag_probe %}
  {% set _check_state = global._check_state %}
  {% set man_state = _probe_action.man_state %}
  
  {% set action    = params.ACTION|default('undefined')|lower %}
  {% set id        = params.ID|default(0)|int %}
  {% set probe_id  = global.query_probe.id|default(0)|int %}
  {% set probe = 'attached' if printer.probe.last_query|int == 0 and user.use_default_probe
            else 'docked'   if printer.probe.last_query|int == 1 and user.use_default_probe 
            else 'attached' if printer.settling_probe.last_query|int == 0 and user.use_settling_probe
            else 'docked'   if printer.settling_probe.last_query|int == 1 and user.use_settling_probe %}
  #{% set error_id = 1 if printer.probe.last_query|lower == 'false'
  {% set error_id = 1 if printer.probe.last_query|lower == 'false' and user.use_default_probe
               else 2 if id == 0 or id != probe_id
               else 3 if action is not in ['attach','dock','check_attach','check_dock','get_status']
               else 4 if action == 'check_dock'   and probe != 'docked'
               else 5 if action == 'check_attach' and probe != 'attached' 
               else 0 %}
  {% set error_id = 1 if printer.settling_probe.last_query|lower == 'false' and user.use_settling_probe
               else 2 if id == 0 or id != probe_id
               else 3 if action is not in ['attach','dock','check_attach','check_dock','get_status']
               else 4 if action == 'check_dock'   and probe != 'docked'
               else 5 if action == 'check_attach' and probe != 'attached' 
               else 0 %}
  {% set state = 'error'   if error_id  != 0
            else man_state if man_state != 'unknown'
            else probe %}
  {% if params.RESPOND|default(user.respond.probe_action)|int == 1 %}
    {% set txt = [] %}
    {% if man_state != 'unknown' %}{% set _dummy = txt.append("State was set to %s by SET_PROBE_STATUS" % man_state)%}{% endif %}
    {% if action == 'attach' and state == 'docked'   %}{% set _dummy = txt.append("Attach Probe")%}{% endif %}
    {% if action == 'attach' and state == 'attached' %}{% set _dummy = txt.append("Already attached")%}{% endif %}
    {% if action == 'dock'   and state == 'attached' %}{% set _dummy = txt.append("Dock Probe")%}{% endif %}
    {% if action == 'dock'   and state == 'docked'   %}{% set _dummy = txt.append("Already docked")%}{% endif %}
    {% if action == 'get_status' %}{% set _dummy = txt.append("Status: %s" % state)%}{% endif %}
    {% if txt|length > 0 %} {action_respond_info("MagProbe: %s" % txt|join("\n"))} {% endif %}
  {% endif %}
  {% if action == 'attach' and state == 'docked'   %} _ATTACH_PROBE {% endif %}
  {% if action == 'dock'   and state == 'attached' %} _DOCK_PROBE   {% endif %}
  
  {% set _dummy = _probe_action.update({'man_state': 'unknown' }) %}        
  SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=_probe_action VALUE="{_probe_action}"
  
  {% set _dummy = mag_probe.update({'state': state }) %}
  SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=mag_probe VALUE="{mag_probe}"
  
  {% set _dummy = _check_state.update({'error_id': error_id }) %}        
  SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=_check_state VALUE="{_check_state}"
  
  _CHECK_STATE
  _Mag_Probe_Debug msg="_PROBE_ACTION - exiting"
