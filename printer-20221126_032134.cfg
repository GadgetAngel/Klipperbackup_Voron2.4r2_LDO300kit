# This file contains common pin mappings for the BigTreeTech Octopus Pro V1.0
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference
#
# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.
#
# See docs/Config_Reference.md for a description of parameters.
#
## Voron Design VORON2 250/300/350mm BigTreeTech OctoPus V1 TMC2209 UART config
#
## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] section in ebb36-canbus-v1.2.cfg and [heater_bed] section - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
## Z Endstop Switch location            [safe_z_home] section
## Homing end position                  [gcode_macro G32] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## Probe points                         [quad_gantry_level] section
## Min & Max gantry corner postions     [quad_gantry_level] section
## PID tune                             [extruder] section in ebb36-canbus-v1.2.cfg and [heater_bed] section
## Probe pin                            [probe] section
## Fine tune E steps                    [extruder] section in ebb36-canbus-v1.2.cfg
#
#https://www.klipper3d.org/Config_checks.html
#
#Klipper G-Code commands:
#https://www.klipper3d.org/G-Codes.html
#
#####################################################################
#   LDO 300mm Build IP addresses 
#####################################################################
#0. LDO 300 kit Control Page: http://192.168.1.154:7990/resetrp2040.html
#Klipper (raspberry pi) : http://192.168.1.154
#
#1. Tasmota Power Strip:
#Tasmota 4 locations on Power strip: http://192.168.1.148/
#    1. S1 - Raspberry_Pi_PWR
#	 2. S2 - USB_HUB_PWR
#	 3. S3 - WLED_ESP_PWR
#	 4. S4 - WLED_ESP2_PWR
#    sonoff_7: http://192.168.1.166 - WLED_RGB_LEDs_15Amp_PSU
#    sonoff_8: http://192.168.1.167 - WLED2_RGB2_LEDs_10Amp_PSU
#   WLED : http://192.168.1.160
#   WLED2 : http://192.168.1.161
#
#  PID tune the heater_bed for ABS:
#     PID_CALIBRATE HEATER=heater_bed TARGET=110
#
#  PID tune the hot-end for ABS:
#     NZL_PID NZL_TEMP=240 BED_TEMP=110
#
# USB camera options:
# $sudo v4l2-ctl -L
# $sudo v4l2-ctl -d /dev/video0 --set-ctrl=focus_absolute=180
#
# NGIX and PHP-fpm7.4 configuration:
#    sudo nano /etc/nginx/nginx.conf
#	nano /etc/nginx/sites-available/resetrp2040.local.conf
#    /usr/bin/python3 /home/pi/resetrp2040/reset_rp2040.py
#	sudo nginx -t && sudo service php7.4-fpm restart && sudo service nginx restart
#	http://192.168.1.154:7990/off.php 
#   http://192.168.1.154:7990/on.php 
#   http://192.168.1.154:7990/reset.php
#   http://192.168.1.154:7990/info.php
#   http://192.168.1.154:7990/resetrp2040.html
#	nano /home/pi/resetrp2040/off.php
#	nano /home/pi/resetrp2040/on.php
#	nano /home/pi/resetrp2040/reset.php
#	see what permissions are on a directory: ls -l /home/pi/resetrp2040
#	see which ports are being used on your raspberry pi: sudo netstat -lptn
#	To run a program on startup: $sudo nano /etc/rc.local
#								 $sudo python /home/pi/rp2040/reset_rp2040.py & > /home/pi/rp2040/log.txt 2>&1
#To make a file executable: chmod +x reset_rp2040.py
#To deactivate all effects we can use the GCode command STOP_LED_EFFECTS
#https://github.com/julianschill/klipper-led_effect
#
#1. WLED:
#	192.168.1.160/wled-WLED
#	MAC Address	24:4c:ab:33:95:3c
#	Current Allocation	DHCP Allocation
#
#	http://wled-ldo300-2.local
#	or
#	http://192.168.1.160
#
#2. LDO300kit Klipper install on Raspberry Pi running Fluidd : infor: http://192.168.1.154/
#  RESET RP2040 Chip on TinyFAN PCB: http://192.168.1.154:7990/resetrp2040.html
#
#   $lsblk
#   sda1 is Bootable hard drive
#   sdb1 is TinyFan PCB board
#
#	$ls /dev/serial/by-id/*
#   $lsblk
#   sda1 is Bootable hard drive 
#   sdb1 is TinyFan PCB board - /dev/serial/by-id/usb-Klipper_rp2040_E66178C1275A4629-if00

#    $sudo uhubctl
#    The commands to turn on/off/toggle the USB ports and keep the Ethernet jack powered are:
#	 $sudo uhubctl -l 1-1 -p 4 -a on
#	 $sudo uhubctl -l 1-1 -p 4 -a off
#	 $sudo uhubctl -l 1-1 -p 4 -a toggle
#
#   For the TinyFAN PCB RP2040 programming:
#	sudo mount /dev/sdb1 /mnt
#	sudo cp /home/pi/klipper/out/klipper.uf2 /mnt
#	sudo umount /mnt
#
#	E3D Revo Voron:
#	S/N: 190122-0142
#
#	24V|40W|104NT-4
#
#	#=======================================================#
#	Moonraker has been set up!
#	#=======================================================#
#
#		● Instance 1: 192.168.1.154:7125
#
#	#=======================================================#
#	MJPG-Streamer has been set up!
#	#=======================================================#
#
#		● Webcam URL: http://192.168.1.154:8080/?action=stream
#		● Webcam URL: http://192.168.1.154/webcam/?action=stream
#
#
#	##### On which port should PrettyGCode run? (Default: 7136)
#	###### Port: 7136
#
#		● Accessible via: http://192.168.1.154:7136
#		[✓ OK] PrettyGCode for Klipper installed!
#		
#3. EBB36: https://github.com/maz0r/klipper_canbus/blob/main/toolhead/ebb36-42_v1.1.md#generate-the-canboot-firmware-file
#
#		canbus_uuid=befe3bd16119
#
#		To find canbus UUID, but if Klipper service is running this will not give you a Can bus UUID:
#		$~/klippy-env/bin/python ~/klipper/scripts/canbus_query.py can0
#		or
#		$~/CanBoot/scripts/flash_can.py -i can0 -q
#		 canbus_uuid=befe3bd16119
#		 		 
#		To flash new Klipper firmware usign CANboot bootloader:
#		Make sure Klipper service is stopped: sudo service klipper stop
#		$python3 ~/CanBoot/scripts/flash_can.py -i can0 -f ~/klipper/out/klipper.bin -u befe3bd16119
#		$sudo service klipper start
#		
#		if you can not get a canbus UUID back, you must use DFU bootloader (located in protected memory) to reflash CANboot bootloader.
#		See https://github.com/maz0r/klipper_canbus/blob/main/toolhead/ebb36-42_v1.1.md
#		
#4. Octopus Pro STM32F446 processor: ls /dev/serial/by-id
#
#		usb-Klipper_stm32f446xx_0F003E00095053424E363420-if00
#
#       Firmware Flashing: https://docs.vorondesign.com/build/software/octopus_klipper.html#build-firmware-image
#		
#5. Tasmota 4 locations on Power strip: http://192.168.1.148/
#    S1 - Raspberry Pi
#	 S2 - USB_HUB_PWR
#	 S3 - WLED_ESP_PWR
#	 S4 - WLED_ESP2_PWR
#
#  KIAUH: https://github.com/th33xitus/kiauh
#       ./kiauh/kiauh.sh
#
#####################################################################
#
#
#                               X->--------------------------------- 
#                                  |X0 Y306   X150 Y306           *| Home Y/X (X306,Y306)            
#                                  |Dock(GM)  Dock Side            | 
#                                  |                               |X150       Y306
#                                  | X0 Y266                       |X0         Y306
#                                  | Dock Exit Position            |X150       Y306
#                                  |                               | 
#                                  |                               |X150       Y306
#                                  |                               |X0         Y306                  
#                                  |                               |X0         Y266 
#                                  |             Home              |
#                                  |            Z X150 Y150        |^
#                                  |                               ||
#                                  ---------------------------------Y
#                                               Front
#
#
#####################################################################
#-------------------------------------------------- MAIN MCU ----------------------------------------------------
[mcu]
# Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_0F003E00095053424E363420-if00
baud: 250000
restart_method: command

[mcu EBBCan]
canbus_uuid: befe3bd16119

[mcu rpi]
## Install Rapberry Pi as seondary MCU
## URL: https://www.klipper3d.org/RPi_microcontroller.html#install-the-rc-script
serial: /tmp/klipper_host_mcu

[mcu tinyfan]
#serial: /dev/serial/by-id/usb-Klipper_rp2040_XXXXXXXXXXXX
#serial: /dev/serial/by-id/usb-Klipper_rp2040_E66178C1275A4629-if00
serial: /dev/serial/by-id/usb-Klipper_rp2040_E66138935F916E28-if00
baud: 250000 #115200 or 250000 no change in time; still takes 6 minutes for data to appear #2400 smallest baud rate - still took 6 min before reporting data
restart_method: command

#-------------------------------------------- LOAD ALL ACTIVE CFGs ----------------------------------------------
# Loads all configuration files from the [ACTIVE] directory.
[include ACTIVE/CONFIG/*.cfg]
[include ACTIVE/MACRO/*.cfg]
[include ACTIVE/MACRO/KLICKY/*.cfg]
[include ACTIVE/UTILITY/*.cfg]
[include ACTIVE/MACRO/KLIPPER_STARTUP_MACROS/*.cfg]


#--------------------------------------------- FILAMENT OVERRIDES ----------------------------------------------- 
# Uncomment one of the following statements to set Klipper's configurations for the filament in use. Filament
# profiles are located in the FILAMENTS directory.
[include FILAMENTS/ABS04.cfg]
#[include FILAMENTS/PETG04.cfg]                               

#---------------------------------------------- GENERAL SETTINGS ------------------------------------------------ 
# All non-filament specific settings follow.  

[gcode_macro globalvariables]
#-------------------------------------------- NON-PRINT ACCEL LIMITS ---------------------------------------------
variable_NPLimitAccel: 3000 #3500      # Accel velocity limit
variable_NPLimitDecel: 1500            # Decel velocity limit

#------------------------------------------- PRINTING MOTOR CURRENTS --------------------------------------------- 
variable_PrintCurrentXY: 1.1           # Steppermotor current to be used while printing
variable_PrintCurrentZ: 0.8            # Steppermotor current to be used while printing

#--------------------------------------------------- PARKING ------------------------------------------------------
variable_ParkHeightPercentage: 0.50    # The percentage of Z height to park the nozzle, expressed as 0.2 to 1.0
                                       # If the printed object is taller then the expressed Z-axis percent height,
                                       # the toolhead will then park 10mm above the object.  

#------------------------------------------------ ADXL HeatSoak ---------------------------------------------------
variable_ADXLsoakMinutes: 30           # Minutes to heat-soak prior to ADXL measurements

#------------------------------------------------ General Debug ---------------------------------------------------
variable_debug: False

gcode:
    M118 Happy Printing!

#
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#  GLOBAL VARIABLES FOUND IN OTHER FILES - check out the other file to see current settings
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

#---------------------------------------------------------------------------------------------------------------- 
#---------------------------------------------------------------------------------------------------------------- 

# ##################################################### See file ~/klipper_config/ACTIVE/MACRO/KLICKY/VARIABLES-_USER_VARIABLES.cfg
# [gcode_macro _User_Variables]
#-------------------------------- EUCLID PROBE (using Klicky Probe Macros _User_Variables) -------------------------
# variable_verbose:             True    # Enable verbose output
# variable_debug:              False    # Enable Debug output
# variable_travel_speed:         200    # how fast all other travel moves will be performed when running these macros
# variable_move_accel:           1000   #1000 # how fast should the toolhead accelerate when moving
# variable_dock_speed:            50    # how fast should the toolhead move when docking the probe for the final movement
# variable_release_speed:         75    # how fast should the toolhead move to release the hold of the magnets after docking
# variable_z_drop_speed:          20    # how fast the z will lower when moving to the z location to clear the probe

# variable_safe_z:         	    25    # Minimum Z for attach/dock and homing functions
# variable_enable_z_hop:        True    # set this to false for beds that fall significantly under gravity (almost to Z max)

# variable_max_bed_y:            306    # maximum Bed size avoids doing a probe_accuracy outside the bed
# variable_max_bed_x:            300    # maximum Bed size avoids doing a probe_accuracy outside the bed

# variable_z_endstop_x:         202      
# variable_z_endstop_y:         301      

# variable_docklocation_x:      0 
# variable_docklocation_y:      306 
# variable_docklocation_z:      -128 

# variable_enable_dock_servo:  False    # Set to true if your klicky dock is servo-controlled
# variable_servo_name:        'NAME'    # The name of the dock servo defined in printer.cfg under [servo]
# variable_servo_deploy:          10    # This EXAMPLE is the value used to deploy the servo fully
# variable_servo_retract:         11    # This EXAMPLE is the value used to retract the servo fully (initial_angle in [servo] config)
# variable_servo_delay:          250    # This is a delay to wait the servo to reach the requested position, be carefull with high values

# Variable_dockmove_x:             0
# Variable_dockmove_y:           -40
# Variable_dockmove_z:             0

# Variable_attachmove_x:        -150
# Variable_attachmove_y:           0
# Variable_attachmove_z:           0

# variable_umbilical:          False    # should we untangle the umbilical
# variable_umbilical_x:           15    # X umbilical position
# variable_umbilical_y:           15    # Y umbilical position

# variable_park_toolhead:      False    # Enable toolhead parking
# variable_parkposition_x:       125
# variable_parkposition_y:       125
# variable_parkposition_z:        30

# variable_version:                1    # Helps users to update the necessary variables, do not update if the variables above are not updated

# Variable_attachmove2_x:          0    # intermediate toolhead movement to attach
# Variable_attachmove2_y:          0    # the probe on the dock
# Variable_attachmove2_z:          0    # (can be negative)

# variable_home_backoff_x:         0    # how many mm to move away from the X endstop after homing X
                                      # this is useful for the voron v0 to enable the toolhead to move out of the way to allow an unstricted Y homing
# variable_home_backoff_y:         0    # how many mm to move away from the Y endstop after homing Y

# variable_override_homing:       'X' # configures what axis to home first
                                      #  '' = default klicky behavior (tries to avoid the hitting the dock)
                                      # 'X' = forces X to home first
                                      # 'Y' = forces Y to home first
                                      
# variable_dock_on_zhome:       True    # docks the probe on Z Homing if not necessary (avoids hitting the bed on some printers)

#---------------------------------------------------------------------------------------------------------------- 
#---------------------------------------------------------------------------------------------------------------- 

# ##################################################### See file ~/klipper_config/ACTIVE/MACRO/KLICKY/VARIABLES-_PROBE_VARIABLES.cfg

# [gcode_macro _Probe_Variables]
# variable_probe_attached:            False
# variable_probe_state:               False
# variable_probe_lock:                False
# variable_z_endstop_x:               0
# variable_z_endstop_y:               0

#---------------------------------------------------------------------------------------------------------------- 
#---------------------------------------------------------------------------------------------------------------- 

# ##################################################### See file ~/klipper_config/FILAMENTS/ABS04.cfg
# [gcode_macro globalvariables]
#----------------------------------------------- PRINT ACCEL LIMITS ---------------------------------------------- 
# variable_LimitAccel: 3501              # ACCEL velocity limit
# variable_LimitDecel: 1751              # DECEL velocity limit

##---------------------------------------------- DEFAULT TEMPERATURES --------------------------------------------- 
# variable_defaultTempNozzle: 245        # NOZZLE EXTRUDING temperature if none is specified
# variable_defaultReadyNozzle: 210       # NOZZLE READY temperature if none is specified
# variable_defaultWarmNozzle: 160        # NOZZLE WARMING temperature if none is specified
# variable_defaultTempBed: 110           # BED temperature if none is specified
# variable_defaultEnclosure: 50 #40      # ENCLOSURE temperature if none is specified

##-----------------------------------------------------MESH ------------------------------------------------------- 
# variable_MeshToApply: "MESHJTM110"     # The saved mesh to apply, mesh name must be enclosed with "". The bundled HOTMESH
                                         # macro will save it's results as the value entered here.
                                         # *!* To perform a fresh in-situation mesh calibration, instead of loading a saved
                                         # mesh, use "INSITU" for MeshToApply. This will be applied before Z Comp probing.
                                         # *!* To completely skip applying mesh, use "NONE" for MeshToApply 
                                       
##--------------------------------------------- HEATSOAK & COOLING ------------------------------------------------
# variable_QGLbeforeSoakMesh: True       # (True/False) Perfrom QGL before applying heat soak for HOTMESH 
# variable_QGLbeforeSoakPrint: True      # (True/False) Perfrom QGL before applying heat soak for PRINT
# variable_HotmeshSoakMinutes: 30        # Minutes to heat-soak prior to running mesh
# variable_PrePrintSoakMinutes: 25       # Minutes to heat-soak prior to printing
# variable_InsituMeshSoakMinutes: 01     # Minutes to heat-soak prior to performing an insitu mesh (in addition to PrePrintSoak)
# variable_PostPrintCool: 1              # Post-Print cooling to prevent nozzle string, minutes of cooling
# variable_PostPrintParkCool: 2          # Once parks, minutes of cooling

##---------------------------------------------- OTHER RETRACTIONS ------------------------------------------------ 
# variable_purgeRetract: 0.3             # After completing purgeline, how much retraction to perform (Not normally needed)
# variable_EndRetract: 2.0               # After print has completed, how much retraction to perform

#---------------------------------------------------------------------------------------------------------------- 
#---------------------------------------------------------------------------------------------------------------- 

# ##################################################### See file ~/klipper_config/ACTIVE/MACRO/VARIABLES-BEDFANVARS.cfg
# [gcode_macro bedfanvars]
# variable_threshold: 110		 # If bed temp target is equal to or above this threshold, fans will be enabled. If temp is set to below this threshold, fans will be disabled.
# variable_fast: 0.4 	    	 # Fan speed once bed temp is reached  
# variable_slow: 0.2		     # Fan speed while bed is heating
# variable_offset: 4           # Fan is off when chamber temp < (defaultenclosure-offset), if temp is falling.
# variable_chamber_fast: 0.60  # fan speed to use when trying to keep chamber enclosure at defaultEnclosure temperature (set point chamber temperature)
# variable_flag: 0             # Bed heater reached target temp if this value > 0, Valid value: 0 (boot state), 2 (Target heater temp reached), 3 (chamber temp falling), 4 (chamber temp above defaultEnclosure temp)
# variable_lasttemp: 0.0       # previous chamber temperature reading

#---------------------------------------------------------------------------------------------------------------- 
#---------------------------------------------------------------------------------------------------------------- 

# ##################################################### See file ~/klipper_config/ACTIVE/MACRO/VARIABLES-_WAIT_VARIABLE.cfg
# [gcode_macro _WAIT_Variable]
# variable_count: 300
# variable_duration: 2
# variable_waiting: False
# variable_ready: 200
# variable_temp: 250
## Total wait minutes is (duration * count) / 60 
	
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#  extruder Setup
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

##  Connected to MOTOR_6
##  Heater - HE0
##  Thermistor - T0
## E motor for Stealthburner: LDO-36STH20-1004AHG(XH) [1.8degree] URL: https://cdn.shopify.com/s/files/1/0887/0138/files/HT-LDO-36STH20-1004AHGXH-RevA_1.pdf?v=1642628306
#
[extruder]
step_pin: EBBCan: PD0
dir_pin: !EBBCan: PD1
enable_pin: !EBBCan: PD2
##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
rotation_distance: 22.6789511   #Bondtech 5mm Drive Gears
##  Update Gear Ratio depending on your Extruder Type
##  Use 50:17 for Afterburner/Clockwork1 (BMG Gear Ratio)
##  Use 50:10 for Clockwork2
##  Use 80:20 for M4, M3.1
#gear_ratio: 50:17               #BMG Gear Ratio for CW1
gear_ratio: 50:10               #BMG Gear Ratio for CW2
microsteps: 32
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400 #    #    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< overridden by FILAMENT file.cfg  <<<
filament_diameter: 1.750
heater_pin: EBBCan: PB13
## I own a BTT EBB36 V1.2
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for NTC 100k 3950 thermistors
#   One of "EPCOS 100K B57560G104F", "ATC Semitec 104GT-2",
#   "ATC Semitec 104NT-4-R025H42G", "Generic 3950",
#   "Honeywell 100K 135-104LAG-J01", "NTC 100K MGB18-104F39050L32",
#   "SliceEngineering 450", or "TDK NTCG104LH104JT1"
sensor_type: ATC-Semitec-104NT-4-R025H42G
sensor_pin: EBBCan: PA3
min_temp: 10 #-273.15
max_temp: 270
max_power: 1.0
#min_extrude_temp: 170                                 #   <<<<<<<<<<<<<<<<<<<< overridden by FILAMENT_FilE.cfg  <<<
##  Try to keep pressure_advance below 1.0
#pressure_advance: 0.055                               #   <<<<<<<<<<<<<<<<<<<< overridden by FILAMENT_FilE.cfg  <<<
#pressure_advance_smooth_time: 0.030                   #   <<<<<<<<<<<<<<<<<<<< overridden by FILAMENT_FilE.cfg  <<<
#
## un-comment the next 4 lines when you want to do a PID Tune of the Hotend.  comment out the same lines in the FILAMENT_FILE.cfg file.  
##This way Klipper will perform the SAVE_CONFIG without error.
#control: pid                            # PID tuning  #   <<<<<<<<<<<<<<<<<<<< overridden by FILAMENT_FilE.cfg  <<<
#pid_kp = 38.469                         # PID tuning  #   <<<<<<<<<<<<<<<<<<<< overridden by FILAMENT_FilE.cfg  <<< 
#pid_ki = 5.575                          # PID tuning  #   <<<<<<<<<<<<<<<<<<<< overridden by FILAMENT_FilE.cfg  <<< 
#pid_kd = 66.361                         # PID tuning  #   <<<<<<<<<<<<<<<<<<<< overridden by FILAMENT_FilE.cfg  <<<


##  E0 on MOTOR6
##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 extruder]
uart_pin: EBBCan: PA15
interpolate: false
run_current: 0.55
#run_current: 0.650
sense_resistor: 0.110
stealthchop_threshold: 0
#stealthchop_threshold: 999999
	
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#  heater_bed Setup
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

[heater_bed]
## Kenoovo 280x280mm (600W) & Thermal Fuse (125c) URL: https://keenovo.store/products/keenovo-square-silicone-heater-3d-printer-build-plate-heatbed-heating-pad?variant=12592089268279
## Build plate is 10mm thick; Width 304.8mm (12 inches); Height: 304.8mm (12 inches)
## Heater Max = 30.48cm x 30.48cm = 929.0304 * 0.4Watts/cm2 = 371.61216, I own a 600Watt heater which means Max_Power = 371.61216 / 600 = 0.6193536 or 0.62
##  SSR Pin - BED_OUT
##  Thermistor - TB
heater_pin: PA1
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
sensor_type: Generic 3950
sensor_pin: PF3
##  Adjust Max Power so your heater doesn't warp your bed. Rule of thumb is 0.4 watts / cm^2 .
max_power: 0.6
min_temp: 0 #-273.15
#max_temp: 120                                          #   <<<<<<<<<<<<<<<<<<<< overridden by FILAMENT_FilE.cfg  <<<
##control: pid                            # PID tuning  #   <<<<<<<<<<<<<<<<<<<< overridden by FILAMENT_FilE.cfg  <<<
##pid_Kp: 13.628                          # No Overshoot#   <<<<<<<<<<<<<<<<<<<< overridden by FILAMENT_FilE.cfg  <<<
##pid_Ki: 0.450                           # No Overshoot#   <<<<<<<<<<<<<<<<<<<< overridden by FILAMENT_FilE.cfg  <<<
##pid_Kd: 272.531                         # No Overshoot#   <<<<<<<<<<<<<<<<<<<< overridden by FILAMENT_FilE.cfg  <<<
##To calculate the "No Overshoot" PID from the "classic PID" parameters - 
##divide the recommended Kp by 3, 
##divide Ki by 3, and 
##multiply Kd by 0.88
#
## un-comment the next 4 lines when you want to do a PID Tune of the heater_bed.  comment out the same lines in the FILAMENT_FILE.cfg file.  
##This way Klipper will perform the SAVE_CONFIG without error.
# pid_kp = 40.884                       # Classic PID
# pid_ki = 1.349                        # Classic PID
# pid_kd = 309.694                      # Classic PID
#
## comment out the pwm_cycle_time when you want to do a PID Tune of the heater_bed.
##This way Klipper will perform the SAVE_CONFIG without error.
pwm_cycle_time: 0.0166

#.................................................................................................................
# Settings for when using ADXL345 for resonance testing from BTT EBB26V1.2 Toolhead board
#
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#  ADXL345 Resonance Testing Setup
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#
# For Resonance Testing using BTT EBB36V1.2 to rPi via CAN bus cable.
# 
# rPi software setup:
#   https://www.klipper3d.org/Measuring_Resonances.html
#
#
# Open terminal,
# run CURRENT_HIGH, then G32, close doors, use masking tape if needed. Bring bed up to printing temp (110)
# and nozzle to 150. Once bed has reached temp, heat soak for 20 minutes.
# Perform SHAPER_CALIBRATE, and when done, SAVE_CONFIG to save found settings.
 
[adxl345]
cs_pin: EBBCan: PB12
spi_software_sclk_pin: EBBCan: PB10
spi_software_mosi_pin: EBBCan: PB11
spi_software_miso_pin: EBBCan: PB2
axes_map: x,y,z
 
#[resonance_tester]
#accel_chip: adxl345
#probe_points: 150, 150, 20

#[input_shaper]
#shaper_freq_x: 57.6
#shaper_type_x: zv
#shaper_freq_y: 41.4
#shaper_type_y: mzv

#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#  Probe Setup -  See file ~/klipper_config/FILAMENTS/ABS04.cfg (FILAMENT_FilE.cfg)
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

#[probe]
#---------------------------------------------------- Z-OFFSET --------------------------------------------------- 
#
## un-comment the next line when you want to do a PROBE_CALIBRATE command.  comment out the same line in the FILAMENT_FILE.cfg file.  
##This way Klipper will perform the SAVE_CONFIG without error.
#z_offset: 5.0                         # Z-Offset / First Layer (larger number = closer to bed surface)      #   <<<<<<<<<<<<<<<<<<<< overridden by FILAMENT_FilE.cfg  <<<



#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#  bed_mesh Setup
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#.................................................................................................................
[bed_mesh]
# URL: https://docs.vorondesign.com/tuning/secondary_printer_tuning.html#bed-mesh-legacy-trident-24
#speed: 300 #500  #    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  Bed-mesh Settings  <<<
speed: 500  #   for Thermal Profiling
horizontal_move_z: 10
mesh_min: 50.500, 48.00 ;the QGL points will be apart of the bed mesh points (50,25)
mesh_max: 250.500, 248.00 # 250.52, 248.02   ;the QGL points will be apart of the bed mesh points (250, 225)
##mesh_min: 30,30     ;for Thermal Profiling testing purposes
##mesh_max:  270,270  ;for Thermal Profiling testing purposes
fade_start: 1 #0.6
fade_end: 5 #10.0
move_check_distance: 3.0
split_delta_z: .010
#probe_count: 11,11
probe_count: 7,7
mesh_pps: 2,2
algorithm: bicubic
bicubic_tension: 0.2
relative_reference_index: 24  #60 #  <---- = ( (Probe_count X,/ * Probe_count /,X) - 1 ) / 2

#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#  For all other configuration for this printer See file ~/klipper_config/ACTIVE/CONFIG/VORON24_300.cfg
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default_THERAML_PROFILING_COLD]
#*# version = 1
#*# points =
#*# 	0.008750, 0.020000, 0.013750, 0.015000, 0.012500, 0.007500, 0.005000
#*# 	0.007500, 0.013750, 0.007500, 0.008750, 0.010000, 0.003750, 0.001250
#*# 	-0.000000, 0.006250, 0.003750, 0.003750, 0.006250, 0.003750, -0.003750
#*# 	-0.002500, 0.003750, -0.001250, 0.000000, 0.005000, 0.001250, -0.003750
#*# 	-0.001250, 0.002500, -0.002500, -0.002500, 0.000000, -0.006250, -0.011250
#*# 	0.003750, 0.006250, 0.000000, -0.001250, 0.000000, -0.003750, -0.006250
#*# 	0.001250, 0.003750, 0.000000, -0.001250, 0.000000, 0.000000, 0.000000
#*# tension = 0.2
#*# min_x = 30.0
#*# algo = bicubic
#*# y_count = 7
#*# mesh_y_pps = 2
#*# min_y = 30.0
#*# x_count = 7
#*# max_y = 270.0
#*# mesh_x_pps = 2
#*# max_x = 270.0
#*#
#*# [bed_mesh COLDMESH]
#*# version = 1
#*# points =
#*# 	  -0.000000, 0.011250, 0.006250, 0.006250, 0.006250, 0.002500, 0.002500
#*# 	  0.002500, 0.011250, 0.006250, 0.005000, 0.006250, 0.002500, 0.001250
#*# 	  -0.000000, 0.007500, 0.003750, 0.003750, 0.005000, 0.005000, 0.002500
#*# 	  -0.001250, 0.003750, -0.001250, 0.000000, 0.003750, 0.003750, 0.003750
#*# 	  -0.005000, 0.002500, -0.003750, -0.005000, -0.003750, -0.002500, -0.005000
#*# 	  -0.002500, 0.002500, -0.005000, -0.005000, -0.005000, -0.003750, -0.005000
#*# 	  0.003750, 0.008750, 0.001250, -0.002500, 0.000000, 0.001250, 0.005000
#*# tension = 0.2
#*# mesh_x_pps = 2
#*# algo = bicubic
#*# min_x = 50.5
#*# min_y = 48.0
#*# y_count = 7
#*# mesh_y_pps = 2
#*# x_count = 7
#*# max_x = 250.48
#*# max_y = 247.98
