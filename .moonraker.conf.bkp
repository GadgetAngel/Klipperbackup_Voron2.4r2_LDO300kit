[server]
host = 0.0.0.0
port = 7125
ssl_port = 7130
klippy_uds_address = /tmp/klippy_uds
max_upload_size = 1024

[file_manager]
queue_gcode_uploads = False
enable_object_processing = True
enable_inotify_warnings = True

[data_store]
temperature_store_size = 1200
gcode_store_size = 1000

[job_queue]
load_on_startup = False
automatic_transition = False

[announcements]
subscriptions = 
	mainsail

[authorization]
trusted_clients = 
	192.168.1.0/24
	FE80::/10
	::1/128
	127.0.0.1
cors_domains = 
	*://192.168.1.172
	*://192.168.1.172/LDO300Kit
	*://192.168.1.172:86
	*://192,168.1.154:7991
	*://192,168.1.154:7992
	*.local
	*://my.mainsail.xyz
	*://app.fluidd.xyz

[octoprint_compat]
enable_ufp = True

[history]

[power tasmota_plug_RGB]
type = mqtt
qos = 0
command_topic = cmnd/WLED1_15Amp_PSU/POWER
command_payload = {command}
retain_command_state = False
state_topic = stat/WLED1_15Amp_PSU/RESULT
state_response_template = 
	{% set resp = payload|fromjson %}
	{resp["POWER"]}
state_timeout = 3
query_topic = cmnd/WLED1_15Amp_PSU/POWER
query_payload = 
query_after_command = False
off_when_shutdown = False
on_when_job_queued = False
locked_while_printing = False
restart_klipper_when_powered = False

[power tasmota_plug_RGB2]
type = mqtt
qos = 0
command_topic = cmnd/WLED2_10Amp_PSU/POWER
command_payload = {command}
retain_command_state = False
state_topic = stat/WLED2_10Amp_PSU/RESULT
state_response_template = 
	{% set resp = payload|fromjson %}
	{resp["POWER"]}
state_timeout = 3
query_topic = cmnd/WLED2_10Amp_PSU/POWER
query_payload = 
query_after_command = False
off_when_shutdown = False
on_when_job_queued = False
locked_while_printing = False
restart_klipper_when_powered = False

[power tasmota_plug_ESP]
type = mqtt
qos = 0
command_topic = cmnd/ESP1_PSU/POWER
command_payload = {command}
retain_command_state = False
state_topic = stat/ESP1_PSU/RESULT
state_response_template = 
	{% set resp = payload|fromjson %}
	{resp["POWER"]}
state_timeout = 3
query_topic = cmnd/ESP1_PSU/POWER
query_payload = 
query_after_command = False
off_when_shutdown = False
on_when_job_queued = False
locked_while_printing = True
restart_klipper_when_powered = False

[power tasmota_plug_ESP2]
type = mqtt
qos = 0
command_topic = cmnd/ESP2_PSU/POWER
command_payload = {command}
retain_command_state = False
state_topic = stat/ESP2_PSU/RESULT
state_response_template = 
	{% set resp = payload|fromjson %}
	{resp["POWER"]}
state_timeout = 3
query_topic = cmnd/ESP2_PSU/POWER
query_payload = 
query_after_command = False
off_when_shutdown = False
on_when_job_queued = False
locked_while_printing = True
restart_klipper_when_powered = False

[power tasmota_plug_IR]
type = mqtt
qos = 0
command_topic = cmnd/IR_PSU/POWER
command_payload = {command}
retain_command_state = False
state_topic = stat/IR_PSU/RESULT
state_response_template = 
	{% set resp = payload|fromjson %}
	{resp["POWER"]}
state_timeout = 3
query_topic = cmnd/IR_PSU/POWER
query_payload = 
query_after_command = False
off_when_shutdown = False
on_when_job_queued = False
locked_while_printing = False
restart_klipper_when_powered = False

[power tasmota_plug_Pi]
type = mqtt
qos = 0
command_topic = cmnd/Raspberry_Pi/POWER
command_payload = {command}
retain_command_state = False
state_topic = stat/Raspberry_Pi/RESULT
state_response_template = 
	{% set resp = payload|fromjson %}
	{resp["POWER"]}
state_timeout = 3
query_topic = cmnd/Raspberry_Pi/POWER
query_payload = 
query_after_command = False
off_when_shutdown = False
on_when_job_queued = False
locked_while_printing = True
restart_klipper_when_powered = True
restart_delay = 2
bound_service = klipper

[power rp2040]
type = klipper_device
object_name = output_pin reset_line_RP2040
timer = 0.5

[update_manager]
enable_auto_refresh = True
refresh_interval = 24
enable_system_updates = True
enable_packagekit = True
channel = dev

[update_manager client mainsail]
type = web
repo = mainsail-crew/mainsail
path = ~/mainsail

[update_manager fluidd]
type = web
channel = stable
repo = fluidd-core/fluidd
path = ~/fluidd

[update_manager KlipperScreen]
type = git_repo
path = /home/pi/KlipperScreen
origin = https://github.com/jordanruthe/KlipperScreen.git
env = /home/pi/.KlipperScreen-env/bin/python
requirements = scripts/KlipperScreen-requirements.txt
install_script = scripts/KlipperScreen-install.sh
managed_services = KlipperScreen

[update_manager led_effect]
type = git_repo
path = ~/klipper-led_effect
origin = https://github.com/julianschill/klipper-led_effect.git
channel = dev
is_system_service = False

[update_manager CanBoot]
type = git_repo
origin = https://github.com/Arksine/CanBoot.git
path = ~/CanBoot
is_system_service = False

[update_manager client z_calibration]
type = git_repo
path = ~/klipper_z_calibration
origin = https://github.com/protoloft/klipper_z_calibration.git
install_script = install.sh
managed_services = klipper

[update_manager crowsnest]
type = git_repo
path = ~/crowsnest
origin = https://github.com/mainsail-crew/crowsnest.git
install_script = tools/install.sh

[update_manager kiauh]
type = git_repo
path = ~/kiauh
origin = https://github.com/th33xitus/kiauh.git
is_system_service = False

[update_manager extended_template]
type = git_repo
primary_branch = main
path = ~/klipper_extras
origin = https://github.com/droans/klipper_extras.git
env = ~/klippy-env/bin/python
requirements = extended_macro/requirements.txt
install_script = install.sh
is_system_service = False
managed_services = klipper

[mqtt]
address = 192.168.1.172
port = 1883
username = {secrets.mqtt_credentials.username}
password = {secrets.mqtt_credentials.password}
mqtt_protocol = v3.1.1
enable_moonraker_api = True
instance_name = printer/ldo300kit
default_qos = 0

[wled Chamber_Lights]
type = http
address = 192.168.1.160
initial_preset = 1
chain_count = 92

[wled Bottom_Lights]
type = http
address = 192.168.1.161
initial_preset = 1
chain_count = 126

[secrets]

[update_manager voron-klipper-extensions]
type = git_repo
path = ~/voron-klipper-extensions
origin = https://github.com/voidtrance/voron-klipper-extensions.git
install_script = install-extensions.sh
managed_services = klipper

[update_manager j2filter_macro]
type = git_repo
path = ~/j2filter_macro
origin = https://github.com/GadgetAngel/j2filter_macro.git
env = ~/klippy-env/bin/python
requirements = requirements.txt
install_script = install-j2filter.sh
is_system_service = False
managed_services = klipper

[update_manager z_v2settling_probe]
type = git_repo
path = ~/voron2_settling_probe
origin = https://github.com/GadgetAngel/voron2_settling_probe.git
install_script = install-v2settling_probe.sh
is_system_service = False
managed_services = klipper

[update_manager zero_overshoot]
type = git_repo
path = ~/Zero_Overshoot
origin = https://github.com/GadgetAngel/Zero_Overshoot.git
install_script = install_zero_overshoot.sh
is_system_service = False
managed_services = klipper

