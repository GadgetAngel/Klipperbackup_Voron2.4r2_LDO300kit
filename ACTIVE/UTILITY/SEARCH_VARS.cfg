#.................................................................................................................
# Full credit to this macro belongs to 'Mental', this origin can be found at the following forum link:
#   https://klipper.discourse.group/t/example-search-printer-objects/164
#.................................................................................................................
# SEARCH_VARS / Usage: SEARCH_VARS, SEARCH_VARS S=SEARCHTWORD, SEARCH_VARS s="profile"
#   This macro will allow you to type SEARCH_VARS S={some word} from the terminal and it will respond with all of
#   the matching items in the printer object. Additionally, omitting the “s” parameter will just dump out literally
#   everything and probably catch fire. You have been warned.
#.................................................................................................................
# Required variable(s) to be set. Add the following to your global variable dictionary block as:
#
# ---NONE---
#.................................................................................................................
# Required external macro(s) used by this macro set.
#
# ---NONE---
#.................................................................................................................
#.................................................................................................................
#
# use ls -la /tmp/printer to find out which device /tmp/printer points to.
# output:
#     /tmp/printer -> /dev/pts/1
# to save the output from the UI console ssh over to pi:
# sudo cat /dev/pts/1 > /home/pi/UI/console_config2.txt
#   to exit CTRL-C
#
# SEARCH_VARS S=config
# SEARCH_VARS S=homing_positive_dir
# SEARCH_VARS S=driver_PWM_OFS
#
[gcode_macro SEARCH_VARS]
gcode:
    {% set search = params.S|default('profile')|string|lower %}
    {% set ns = namespace() %}
    {% for item in printer  %}
        {% if ' ' in item %}
            {% set ns.path = ['printer', "['%s']" % (item), ''] %}
        {% else %}
            {% set ns.path = ['printer.', item, ''] %}   
        {% endif %} 

        {% if search in ns.path|lower %}
            { action_respond_info(ns.path|join) }
        {% endif %} 

        {% if printer[item].items() %}
            {% for childkey, child in printer[item].items() recursive %}
                {% set ns.path = ns.path[:loop.depth|int + 1] %}

                {% if ' ' in childkey %}
                    {% set null = ns.path.append("['%s']" % (childkey)) %}
                {% else %}
                    {% set null = ns.path.append(".%s" % (childkey)) %}
                {% endif %} 

                {% if child is mapping  %}
                    { loop(child.items()) }
                {% else %}
                    {% if search in ns.path|lower %}
                        { action_respond_info("%s : %s" % (ns.path|join, child)) }   
                    {% endif %} 
                {% endif %} 
                
            {% endfor %}
        {% endif %} 
    {% endfor %}
