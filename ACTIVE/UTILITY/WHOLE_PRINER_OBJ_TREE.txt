// printer.bed_mesh
// printer.bed_mesh.mesh_min : (50.5, 48.0)
// printer.bed_mesh.mesh_max : (250.48, 247.98)
// printer.bed_mesh.probed_matrix : [[0.01875, 0.03375, 0.02875, 0.0275, 0.02625, 0.02125, 0.0275], [0.0075, 0.02375, 0.01625, 0.01625, 0.02, 0.015, 0.01375], [-0.0075, 0.005, 0.00125, 0.0025, 0.00875, 0.00875, 0.0075], [-0.00875, 0.0025, -0.00375, 0.0, 0.01, 0.0125, 0.01], [-0.01, 0.00125, -0.00375, -0.005, -0.00125, 0.0025, -0.0025], [0.0075, 0.02, 0.00875, 0.01, 0.01, 0.0125, 0.01125], [0.03375, 0.0475, 0.035, 0.02875, 0.03, 0.03, 0.035]]
// printer.bed_mesh.profiles.default.points : ((0.01875, 0.03375, 0.02875, 0.0275, 0.02625, 0.02125, 0.0275), (0.0075, 0.02375, 0.01625, 0.01625, 0.02, 0.015, 0.01375), (-0.0075, 0.005, 0.00125, 0.0025, 0.00875, 0.00875, 0.0075), (-0.00875, 0.0025, -0.00375, 0.0, 0.01, 0.0125, 0.01), (-0.01, 0.00125, -0.00375, -0.005, -0.00125, 0.0025, -0.0025), (0.0075, 0.02, 0.00875, 0.01, 0.01, 0.0125, 0.01125), (0.03375, 0.0475, 0.035, 0.02875, 0.03, 0.03, 0.035))
// printer.bed_mesh.profiles.default.mesh_params.tension : 0.2
// printer.bed_mesh.profiles.default.mesh_params.mesh_x_pps : 2
// printer.bed_mesh.profiles.default.mesh_params.algo : bicubic
// printer.bed_mesh.profiles.default.mesh_params.min_x : 50.5
// printer.bed_mesh.profiles.default.mesh_params.min_y : 48.0
// printer.bed_mesh.profiles.default.mesh_params.y_count : 7
// printer.bed_mesh.profiles.default.mesh_params.mesh_y_pps : 2
// printer.bed_mesh.profiles.default.mesh_params.x_count : 7
// printer.bed_mesh.profiles.default.mesh_params.max_x : 250.48
// printer.bed_mesh.profiles.default.mesh_params.max_y : 247.98
// printer.bed_mesh.profiles.COLDMESH.points : ((-0.0, 0.01125, 0.00625, 0.00625, 0.00625, 0.0025, 0.0025), (0.0025, 0.01125, 0.00625, 0.005, 0.00625, 0.0025, 0.00125), (-0.0, 0.0075, 0.00375, 0.00375, 0.005, 0.005, 0.0025), (-0.00125, 0.00375, -0.00125, 0.0, 0.00375, 0.00375, 0.00375), (-0.005, 0.0025, -0.00375, -0.005, -0.00375, -0.0025, -0.005), (-0.0025, 0.0025, -0.005, -0.005, -0.005, -0.00375, -0.005), (0.00375, 0.00875, 0.00125, -0.0025, 0.0, 0.00125, 0.005))
// printer.bed_mesh.profiles.COLDMESH.mesh_params.tension : 0.2
// printer.bed_mesh.profiles.COLDMESH.mesh_params.mesh_x_pps : 2
// printer.bed_mesh.profiles.COLDMESH.mesh_params.algo : bicubic
// printer.bed_mesh.profiles.COLDMESH.mesh_params.min_x : 50.5
// printer.bed_mesh.profiles.COLDMESH.mesh_params.min_y : 48.0
// printer.bed_mesh.profiles.COLDMESH.mesh_params.y_count : 7
// printer.bed_mesh.profiles.COLDMESH.mesh_params.mesh_y_pps : 2
// printer.bed_mesh.profiles.COLDMESH.mesh_params.x_count : 7
// printer.bed_mesh.profiles.COLDMESH.mesh_params.max_x : 250.48
// printer.bed_mesh.profiles.COLDMESH.mesh_params.max_y : 247.98
// printer.bed_mesh.profiles.MESHJTM110.points : ((0.01875, 0.03375, 0.02875, 0.0275, 0.02625, 0.02125, 0.0275), (0.0075, 0.02375, 0.01625, 0.01625, 0.02, 0.015, 0.01375), (-0.0075, 0.005, 0.00125, 0.0025, 0.00875, 0.00875, 0.0075), (-0.00875, 0.0025, -0.00375, 0.0, 0.01, 0.0125, 0.01), (-0.01, 0.00125, -0.00375, -0.005, -0.00125, 0.0025, -0.0025), (0.0075, 0.02, 0.00875, 0.01, 0.01, 0.0125, 0.01125), (0.03375, 0.0475, 0.035, 0.02875, 0.03, 0.03, 0.035))
// printer.bed_mesh.profiles.MESHJTM110.mesh_params.tension : 0.2
// printer.bed_mesh.profiles.MESHJTM110.mesh_params.mesh_x_pps : 2
// printer.bed_mesh.profiles.MESHJTM110.mesh_params.algo : bicubic
// printer.bed_mesh.profiles.MESHJTM110.mesh_params.min_x : 50.5
// printer.bed_mesh.profiles.MESHJTM110.mesh_params.min_y : 48.0
// printer.bed_mesh.profiles.MESHJTM110.mesh_params.y_count : 7
// printer.bed_mesh.profiles.MESHJTM110.mesh_params.mesh_y_pps : 2
// printer.bed_mesh.profiles.MESHJTM110.mesh_params.x_count : 7
// printer.bed_mesh.profiles.MESHJTM110.mesh_params.max_x : 250.48
// printer.bed_mesh.profiles.MESHJTM110.mesh_params.max_y : 247.98
// printer.bed_mesh.mesh_matrix : [[0.01875, 0.022935, 0.029787, 0.03375, 0.032843, 0.03038, 0.02875, 0.028278, 0.027806, 0.0275, 0.027194, 0.026722, 0.02625, 0.02475, 0.022417, 0.02125, 0.022815, 0.025713, 0.0275], [0.015889, 0.020194, 0.027237, 0.031287, 0.030184, 0.027375, 0.025546, 0.025121, 0.024787, 0.02462, 0.024691, 0.024817, 0.024704, 0.023253, 0.020897, 0.01963, 0.020629, 0.022599, 0.023824], [0.011028, 0.015521, 0.022861, 0.027046, 0.025628, 0.022267, 0.02012, 0.019777, 0.019674, 0.019741, 0.020438, 0.021561, 0.022046, 0.020692, 0.018319, 0.016898, 0.016966, 0.017407, 0.017704], [0.0075, 0.012065, 0.019519, 0.02375, 0.022176, 0.018546, 0.01625, 0.015972, 0.016028, 0.01625, 0.017352, 0.01912, 0.02, 0.018759, 0.016463, 0.015, 0.014509, 0.014019, 0.01375], [0.003074, 0.007358, 0.014357, 0.018352, 0.017015, 0.013843, 0.011843, 0.011677, 0.011861, 0.012185, 0.013491, 0.015586, 0.016713, 0.015864, 0.014161, 0.013046, 0.012539, 0.011937, 0.011593], [-0.003519, 0.000275, 0.006482, 0.010065, 0.009155, 0.006799, 0.005324, 0.005335, 0.005708, 0.006176, 0.007738, 0.010244, 0.011704, 0.011491, 0.010776, 0.010259, 0.009854, 0.009277, 0.008935], [-0.0075, -0.004019, 0.001685, 0.005, 0.004324, 0.002426, 0.00125, 0.001389, 0.001917, 0.0025, 0.00425, 0.007056, 0.00875, 0.008954, 0.00888, 0.00875, 0.008407, 0.007843, 0.0075], [-0.008269, -0.004903, 0.000605, 0.003778, 0.002914, 0.000743, -0.000565, -0.000243, 0.000636, 0.001481, 0.00357, 0.006892, 0.008926, 0.009393, 0.009674, 0.009741, 0.009339, 0.008624, 0.008185], [-0.008593, -0.005348, -5.3e-05, 0.002944, 0.001718, -0.001007, -0.002602, -0.002017, -0.000611, 0.00063, 0.003218, 0.007297, 0.009824, 0.010635, 0.011366, 0.011676, 0.01116, 0.010191, 0.009593], [-0.00875, -0.005574, -0.000398, 0.0025, 0.001065, -0.001981, -0.00375, -0.003056, -0.001417, 0.0, 0.002815, 0.007241, 0.01, 0.011019, 0.012037, 0.0125, 0.011889, 0.010722, 0.01], [-0.009389, -0.006234, -0.001088, 0.001806, 0.000487, -0.002375, -0.004083, -0.003721, -0.002667, -0.001667, 0.000678, 0.004419, 0.006787, 0.007891, 0.00914, 0.009722, 0.008911, 0.007386, 0.006444], [-0.010194, -0.007049, -0.001914, 0.001, -9.3e-05, -0.002607, -0.004194, -0.004409, -0.004378, -0.004111, -0.002617, -0.000126, 0.001519, 0.002705, 0.004261, 0.005, 0.003885, 0.001825, 0.000556], [-0.01, -0.006843, -0.001685, 0.00125, 0.000231, -0.002176, -0.00375, -0.004296, -0.004843, -0.005, -0.004065, -0.002407, -0.00125, -3.7e-05, 0.001676, 0.0025, 0.001241, -0.001074, -0.0025], [-0.00563, -0.002359, 0.00297, 0.005944, 0.004472, 0.001301, -0.000713, -0.001112, -0.001323, -0.001315, -0.000694, 0.000401, 0.001204, 0.002294, 0.003891, 0.004685, 0.003654, 0.001732, 0.000546], [0.001907, 0.00537, 0.010987, 0.014028, 0.011778, 0.007303, 0.004546, 0.004447, 0.004897, 0.005259, 0.005483, 0.005835, 0.006157, 0.007026, 0.008376, 0.009093, 0.008494, 0.007321, 0.006593], [0.0075, 0.011093, 0.016907, 0.02, 0.017269, 0.011981, 0.00875, 0.008759, 0.009491, 0.01, 0.01, 0.009944, 0.01, 0.010704, 0.011852, 0.0125, 0.012231, 0.01163, 0.01125], [0.015213, 0.018917, 0.024912, 0.028093, 0.025257, 0.019755, 0.016315, 0.015762, 0.015602, 0.015583, 0.015599, 0.015688, 0.015815, 0.0163, 0.017092, 0.017593, 0.017803, 0.018036, 0.018167], [0.026815, 0.030676, 0.036924, 0.040241, 0.037343, 0.03167, 0.027991, 0.026476, 0.024766, 0.023833, 0.023934, 0.02437, 0.024685, 0.024844, 0.025083, 0.025352, 0.026288, 0.027788, 0.028694], [0.03375, 0.037704, 0.044102, 0.0475, 0.044574, 0.038815, 0.035, 0.032898, 0.030241, 0.02875, 0.028907, 0.029565, 0.03, 0.029963, 0.02987, 0.03, 0.03137, 0.03363, 0.035]]
// printer.bed_mesh.profile_name : default
// printer.configfile
// printer.configfile.warnings : []
// printer.configfile.config['gcode_macro NZL_PID'].gcode :
// _general_Debug msg="NZL_PID - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}    ;if debug enabled display message
// {% if printer.idle_timeout.state == "Printing" or printer.pause_resume.is_paused %}
// {action_respond_info("Cannot do that while printing")}
// {% else %}
// {% set defaultTN = user.filament.profile.defaultTempNozzle|float %}
// {% set defaultTB = user.filament.profile.defaultTempBed|float %}
// {% set FAN_SPEED = params.FAN_SPEED|default(64)|float %}
// {% set SOAK_MINUTES = params.SOAK_MINUTES|default(12)|float %}
// {% set BED_TEMP = params.BED_TEMP|default(defaultTB)|float %}
// {% set NZL_TEMP = params.NZL_TEMP|default(defaultTN)|float %}
// {% set X_MID = printer.configfile.config.stepper_x.position_max|float / 2.0 %}
// {% set Y_MID = printer.configfile.config.stepper_y.position_max|float / 2.0 %}
// {% set defaultENCLOSURE = user.filament.profile.defaultEnclosure|float %}
// {% set ENCLOSURE_TEMP = params.ENCLOSURE_TEMP|default(defaultENCLOSURE)|float %}
// G90                                                                                       ;Absolute Positioning
// M117 Performing initial homing.
// G32                                                                                       ;Clears bed-mesh and performs G28, ATTACH_PROBE, QGL, DOCK_PROBE
// G1 Z5 Y{Y_MID} X{X_MID} F4000                                                             ;move to center of bed
// M117 Bringing bed to temperature.
// M141 S{ENCLOSURE_TEMP}                                                                    ;set chamber temperature for Exhaust fan and Bed fans
// M190 S{BED_TEMP}                                                                          ;Wait for bed temp within 5 degrees
// _HEAT_WAIT MINUTES={SOAK_MINUTES} MSG="Pre NZL_PID Soaking..."                            ;Heating cycle waiting routine
// SET_LED LED=sb_leds INDEX=17 RED=.5 GREEN=.5 BLUE=0
// SET_LED LED=sb_leds INDEX=18 RED=.5 GREEN=.5 BLUE=0
// M106 S{FAN_SPEED}                                                                         ;Part Cooling Fan On and start monitoring the tach signal
// M117 Starting PID calibration.
// PID_CALIBRATE HEATER=extruder TARGET={NZL_TEMP}                                           ;PID tune the extruder
// M117 Finished PID calibration.
// TURN_OFF_HEATERS                                                                          ;Turn off all heaters,bedfans and set temperature_fan chamber taget to 35C
// G90                                                                                       ;Absolute Positioning
// PARK_UpperRight                                                                           ;Parks nozzle at top front-right
// M18 X Y E                                                                                 ;Disable Stepper motor
// SET_LED LED=sb_leds INDEX=17 RED=.2 GREEN=.5 BLUE=.2
// SET_LED LED=sb_leds INDEX=18 RED=.2 GREEN=.5 BLUE=.2
// _COOL_WAIT MINUTES={user.filament.profile.PostPrintParkCool|float}                        ;Cooling cycle waiting routine
// STATUS_READY                                                                              ;SB LED status
// SAVE_CONFIG
// {% endif %}
// _general_Debug msg="NZL_PID - exiting"                                                        ;if debug enabled display message
// printer.configfile.config['gcode_macro NZL_PID'].description : Helper: Performs NOZZLE PID tune
// printer.configfile.config['led_effect set_nozzle_leds_white'].layers :
// static  1  0 top (0.0, 0.0, 0.0, 0.5)
// printer.configfile.config['led_effect set_nozzle_leds_white'].leds :
// neopixel:sb_leds (17,18)
// printer.configfile.config['led_effect set_nozzle_leds_white'].autostart : false
// printer.configfile.config['led_effect set_nozzle_leds_white'].frame_rate : 2
// printer.configfile.config['gcode_macro move_bed_center'].gcode :
// _general_Debug msg="move_bed_center - entering"
// {% set X_MID = printer.configfile.config.stepper_x.position_max|float / 2.0 %}
// {% set X_PROBEOFFSET = printer.configfile.config.probe.x_offset|float %}
// {% set Y_MID = printer.configfile.config.stepper_y.position_max|float / 2.0 %}
// {% set Y_PROBEOFFSET = printer.configfile.config.probe.y_offset|float %}
// _CG28                                                               ; Try to home if not already homed
// G90
// G0 X{(X_MID - X_PROBEOFFSET)} Y{(Y_MID - Y_PROBEOFFSET)} Z20 F4000
// _general_Debug msg="move_bed_center -exiting"
// printer.configfile.config['gcode_macro move_bed_center'].description : Helper: move toolhead to center of the bed
// printer.configfile.config['gcode_macro BED_PID'].gcode :
// _general_Debug msg="_BED_PID - entering"                                ;if debug enabled display message
// {% if printer.idle_timeout.state == "Printing" or printer.pause_resume.is_paused %}
// {action_respond_info("Cannot do that while printing")}
// {% else %}
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set defaultTB = user.filament.profile.defaultTempBed|float %}
// {% set BED_TEMP = params.BED_TEMP|default(defaultTB)|float %}
// {% set FAN_SPEED = params.FAN_SPEED|default(0.40)|float %}
// {% set X_MID =  user.park.mid.x|float %}
// {% set Y_MID =  user.park.mid.y|float %}
// G90                                                                 ;Absolute Positioning
// M117 Performing initial homing.
// G32                                                                 ;Clears bed-mesh and performs G28, ATTACH_PROBE, QGL, DOCK_PROBE
// G1 Z5 Y{Y_MID} X{X_MID} F4000                                       ;move to center of bed
// SET_FAN_SPEED FAN=Bedfan_Left SPEED={FAN_SPEED}                     ;set Fan speed for bedfans fan
// SET_FAN_SPEED FAN=Bedfan_Right SPEED={FAN_SPEED}                    ;set Fan speed for bedfans fan
// M117 Starting PID calibration.
// PID_CALIBRATE HEATER=heater_bed TARGET={BED_TEMP}                   ;PID tune the heater_bed
// M117 Finished PID calibration.
// TURN_OFF_HEATERS                                                    ;Turn off all heaters
// CURRENT_NORMAL                                                      ;call Macro CURRENT_NORMAL
// PARK_UpperRight                                                     ;Parks nozzle at top front-right
// M18 X Y E                                                           ;Disable Stepper motor
// _COOL_WAIT MINUTES=1                                                ;Cooling cycle waiting routine
// STATUS_READY                                                        ;SB LED status
// SAVE_CONFIG                                                         ;save results of PID tune back in printer.cfg file
// {% endif %}
// _general_Debug msg="_BED_PID - exiting"                                  ;if debug enabled display message
// printer.configfile.config['gcode_macro BED_PID'].description : Helper: Performs BED PID tune
// printer.configfile.config['gcode_macro GET_PROBE_STATUS'].gcode :
// _Mag_Probe_Debug msg="GET_PROBE_STATUS - entering"
// _MAG_PROBE ACTION=GET_STATUS RESPOND=1
// _Mag_Probe_Debug msg="GET_PROBE_STATUS - exiting"
// printer.configfile.config['gcode_macro GET_PROBE_STATUS'].description : Helper: Mag Probe; Prints the current MagProbe state, valid probe states are UNKNOWN, ATTACHED and DOCKED
// printer.configfile.config.stepper_z.homing_retract_dist : 3
// printer.configfile.config.stepper_z.position_endstop : 2.280
// printer.configfile.config.stepper_z.full_steps_per_rotation : 200
// printer.configfile.config.stepper_z.endstop_pin : PG10
// printer.configfile.config.stepper_z.rotation_distance : 40
// printer.configfile.config.stepper_z.gear_ratio : 80:16
// printer.configfile.config.stepper_z.second_homing_speed : 3
// printer.configfile.config.stepper_z.step_pin : PF11
// printer.configfile.config.stepper_z.position_min : -6.8
// printer.configfile.config.stepper_z.microsteps : 32
// printer.configfile.config.stepper_z.homing_speed : 8
// printer.configfile.config.stepper_z.dir_pin : PG3
// printer.configfile.config.stepper_z.position_max : 260
// printer.configfile.config.stepper_z.enable_pin : !PG5
// printer.configfile.config.stepper_y.homing_positive_dir : true
// printer.configfile.config.stepper_y.homing_retract_dist : 5
// printer.configfile.config.stepper_y.position_endstop : 306
// printer.configfile.config.stepper_y.full_steps_per_rotation : 400
// printer.configfile.config.stepper_y.endstop_pin : PG9
// printer.configfile.config.stepper_y.rotation_distance : 40
// printer.configfile.config.stepper_y.second_homing_speed : 10
// printer.configfile.config.stepper_y.step_pin : PG0
// printer.configfile.config.stepper_y.position_min : 0
// printer.configfile.config.stepper_y.microsteps : 32
// printer.configfile.config.stepper_y.homing_speed : 25
// printer.configfile.config.stepper_y.dir_pin : PG1
// printer.configfile.config.stepper_y.position_max : 306
// printer.configfile.config.stepper_y.enable_pin : !PF15
// printer.configfile.config.stepper_x.homing_positive_dir : true
// printer.configfile.config.stepper_x.homing_retract_dist : 5
// printer.configfile.config.stepper_x.position_endstop : 300
// printer.configfile.config.stepper_x.full_steps_per_rotation : 400
// printer.configfile.config.stepper_x.endstop_pin : PG6
// printer.configfile.config.stepper_x.rotation_distance : 40
// printer.configfile.config.stepper_x.second_homing_speed : 10
// printer.configfile.config.stepper_x.step_pin : PF13
// printer.configfile.config.stepper_x.position_min : 0
// printer.configfile.config.stepper_x.microsteps : 32
// printer.configfile.config.stepper_x.homing_speed : 25
// printer.configfile.config.stepper_x.dir_pin : PF12
// printer.configfile.config.stepper_x.position_max : 300
// printer.configfile.config.stepper_x.enable_pin : !PF14
// printer.configfile.config['gcode_macro G0'].rename_existing : G0.1
// printer.configfile.config['gcode_macro G0'].description : Helper: Mag Probe; Move gcode that prevents moves lower than the limit when probe attached
// printer.configfile.config['gcode_macro G0'].gcode :
// _Mag_Probe_Debug msg="G0 - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% if params.FORCE is defined or user.mag_probe.state == 'docked' %}
// G0.1 {rawparams}
// {% else %}
// {% set param = [] %}
// {% for key in params %} ; get gcode input parameters
// {% set _dummy = param.append(key + "=" + params[key]) if key is not in ['G', 'FORCE'] %}
// {% endfor %}
// _Z_MOVE_CHECK CALLER=G0 {param|join(" ")}
// {% endif %}
// _Mag_Probe_Debug msg="G0 - exiting"
// printer.configfile.config['gcode_macro G1'].rename_existing : G1.1
// printer.configfile.config['gcode_macro G1'].description : Helper: Mag Probe; Move gcode that prevents moves lower than the limit when probe attached
// printer.configfile.config['gcode_macro G1'].gcode :
// _Mag_Probe_Debug msg="G1 - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% if params.FORCE is defined or user.mag_probe.state == 'docked' %}
// G1.1 {rawparams}
// {% else %}
// {% set param = [] %}
// {% for key in params %} ; get gcode input parameters
// {% set _dummy = param.append(key + "=" + params[key]) if key is not in ['G', 'FORCE'] %}
// {% endfor %}
// _Z_MOVE_CHECK CALLER=G1 {param|join(" ")}
// {% endif %}
// _Mag_Probe_Debug msg="G1 - exiting"
// printer.configfile.config['led_effect sb_bar_leveling'].layers :
// breathing  3 1 top (0.5, 0.1, 0.4)
// printer.configfile.config['led_effect sb_bar_leveling'].leds :
// neopixel:progress_bar_leds (1-33)
// printer.configfile.config['led_effect sb_bar_leveling'].autostart : false
// printer.configfile.config['led_effect sb_bar_leveling'].frame_rate : 5
// printer.configfile.config['led_effect sb_bar_printing'].layers :
// gradient  0.3  3 add (0.3, 0.0, 0.0),(0.3, 0.3, 0.0),(0.3, 0.1, 0.0),(0.3, 0.0, 0.0),(0.3, 0.3, 0.0),(0.3, 0.1, 0.0),(0.3, 0.0, 0.0),(0.3, 0.3, 0.0),(0.3, 0.1, 0.0)
// printer.configfile.config['led_effect sb_bar_printing'].leds :
// neopixel:progress_bar_leds (1-33)
// printer.configfile.config['led_effect sb_bar_printing'].autostart : false
// printer.configfile.config['led_effect sb_bar_printing'].frame_rate : 5
// printer.configfile.config['gcode_macro set_bar_leds_on'].gcode :
// _general_Debug msg="sset_bar_leds_on - entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set bar_effect = global.current_led_state.bar_leds %}
// SET_LED_EFFECT EFFECT={bar_effect}
// _general_Debug msg="set_bar_leds_on - exiting"
// printer.configfile.config['gcode_macro set_bar_leds_on'].description : Helper: Turn on the progress bar LEDs by using the SET_LED_EFFECT call
// printer.configfile.config['led_effect sb_nozzle_cooling'].layers :
// gradient 1.00 1.00 top (0.00,0.00,1.00),(0.00,0.00,0.00),(0.00,0.00,1.00)
// printer.configfile.config['led_effect sb_nozzle_cooling'].leds :
// neopixel:sb_leds (17,18)
// printer.configfile.config['led_effect sb_nozzle_cooling'].autostart : false
// printer.configfile.config['led_effect sb_nozzle_cooling'].frame_rate : 2
// printer.configfile.config['led_effect sb_fan_cleaning'].layers :
// breathing  3 1 top (0.0, 0.02, 0.5)
// printer.configfile.config['led_effect sb_fan_cleaning'].leds :
// neopixel:sb_leds (1-8)
// printer.configfile.config['led_effect sb_fan_cleaning'].autostart : false
// printer.configfile.config['led_effect sb_fan_cleaning'].frame_rate : 5
// printer.configfile.config['gcode_macro _LAYER'].gcode :
// _general_Debug msg="_LAYER - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set layer = global.layer %}
// {% set _dummy = layer.update({'total':params.TOTAL|int}) if ('TOTAL' in params and params.TOTAL|int > 0) %}
// {% set _dummy = layer.update({'current':params.CURRENT|default(0)|int}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=layer VALUE="{layer}"
// {% if params.RESPOND|default(user.respond.layer)|int == 1 %}
// {action_respond_info("Layer %s of %s" % (layer.current, layer.total))}
// {% endif %}
// _general_Debug msg="_LAYER - exiting"
// printer.configfile.config['gcode_macro _LAYER'].description : Helper: Pass the current layer and the total amount of layers by your Slicer.
// printer.configfile.config.fan.tachometer_pin : ^EBBCan: PB5
// printer.configfile.config.fan.cycle_time : 0.02
// printer.configfile.config.fan.pin : EBBCan: PA0
// printer.configfile.config.fan.off_below : 0.10
// printer.configfile.config.fan.max_power : 1.0
// printer.configfile.config.fan.kick_start_time : 0.5
// printer.configfile.config['gcode_macro MSG_PROBE_ATTACHED'].gcode :
// M118 Euclid probe IS attached!!
// printer.configfile.config['gcode_macro MSG_PROBE_ATTACHED'].description : Helper: Euclid Probe; prints an message indicating the output of a QUERY_PROBE command when the Euclid probe is attached to the toolhead
// printer.configfile.config['gcode_macro example'].gcode :
// {% set function  = 'pre_' ~ params.FUNCTION %}
// {action_respond_info("example macro: funtion = %s" % function)}
// printer.configfile.config['gcode_macro example'].description : Helper: an example macro
// printer.configfile.config.stepper_z3.full_steps_per_rotation : 200
// printer.configfile.config.stepper_z3.rotation_distance : 40
// printer.configfile.config.stepper_z3.gear_ratio : 80:16
// printer.configfile.config.stepper_z3.step_pin : PC13
// printer.configfile.config.stepper_z3.microsteps : 32
// printer.configfile.config.stepper_z3.dir_pin : !PF0
// printer.configfile.config.stepper_z3.enable_pin : !PF1
// printer.configfile.config.stepper_z1.full_steps_per_rotation : 200
// printer.configfile.config.stepper_z1.rotation_distance : 40
// printer.configfile.config.stepper_z1.gear_ratio : 80:16
// printer.configfile.config.stepper_z1.step_pin : PG4
// printer.configfile.config.stepper_z1.microsteps : 32
// printer.configfile.config.stepper_z1.dir_pin : !PC1
// printer.configfile.config.stepper_z1.enable_pin : !PA0
// printer.configfile.config['gcode_macro _CG28'].gcode :
// _general_Debug msg="_CG28 - enter"
// {% if "xyz" not in printer.toolhead.homed_axes %}
// STATUS_HOMING
// G28
// {% endif %}
// _general_Debug msg="_CG28 - exit"
// printer.configfile.config['gcode_macro _CG28'].description : Helper: Conditional G28 (home if not already homed)
// printer.configfile.config['gcode_macro INFO_FAN_CHECK'].gcode :
// _general_Debug msg="INFO_FAN_CHECK- entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set he_rpm = printer['heater_fan fan_hotend'].rpm|float %}
// {% set he_stop_count = global.fancheckvars.he_stop_count|int %}
// {% set part_cooling_fan_enabled = global.fancheckvars.part_cooling_fan_enabled|int %}
// {% set pc_stop_count = global.fancheckvars.pc_stop_count|int %}
// {% set pc_rpm = printer.fan.rpm|float %}
// {% set string1 = "INFO_FAN_CHECK <++++" %}
// {% set string1 = string1 ~ "\nHotEnd Fan min_rpm = 3500;" %}
// {% set string1 = string1 ~ "\nHotEnd Fan current_rpm = %.2f;" %}
// {% set string1 = string1 ~ "\nHotEnd Fan max_consecutive_stops = 3;" %}
// {% set string1 = string1 ~ "\nHotEnd Fan stop_count = %d;" %}
// {% set string1 = string1 ~ "\nPartCooling Fan Enabled = %d;" %}
// {% set string1 = string1 ~ "\nPartCooling Fan min_rpm = 600;" %}
// {% set string1 = string1 ~ "\nPartCooling Fan current_rpm = %.2f;" %}
// {% set string1 = string1 ~ "\nPartCooling Fan max_consecutive_stops = 3;" %}
// {% set string1 = string1 ~ "\nPartCooling Fan stop_count = %d;" %}
// {% set string1 = string1 ~ "\nEnd of INFO_FAN_CHECK ++++>" %}
// {action_respond_info(string1 % (he_rpm, he_stop_count, part_cooling_fan_enabled, pc_rpm, pc_stop_count)) }
// _general_Debug msg="INFO_FAN_CHECK- exiting"
// printer.configfile.config['gcode_macro INFO_FAN_CHECK'].description : Helper: Display information about FAN_CHECK routines
// printer.configfile.config['delayed_gcode _START_PRINT_WAIT'].gcode :
// _general_Debug msg="_START_PRINT_WAIT - entering"
// {% macro print_time(text, time) %} ; print remaining time
// M117 {'%s' % text} {(time|int // 60)}:{'%02d' % (time|int % 60)}
// {% if time|int % 2 == 0 %}
// SET_LED LED=sb_leds INDEX=17 RED=.5 GREEN=0 BLUE=0
// SET_LED LED=sb_leds INDEX=18 RED=0 GREEN=0 BLUE=.5
// {% else %}
// SET_LED LED=sb_leds INDEX=17 RED=0 GREEN=0 BLUE=.5
// SET_LED LED=sb_leds INDEX=18 RED=.5 GREEN=0 BLUE=0
// {% endif %}
// {% endmacro %}
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// STATUS_BUSY
// SET_NOZZLE_LEDS_OFF
// {% if global.state == 'HeatSoak'%}
// { print_time("HEAT SOAK", user.var.time.soak) }
// {% elif global.state == 'ChamberSoak' %}
// { print_time("SOAK", user.var.time.soak_extra) }
// {% endif %}
// {% if global.execute|lower == 'false' %}
// PRINT_START  ; Junp back to PRINT_START
// {% else %} ; break loop and insure state is correct for the next print start
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=execute VALUE=False
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=state VALUE='"Prepare"'
// {% if user.hw.display.ena %} UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=1 {% endif %}
// {% endif %}
// _general_Debug msg="_START_PRINT_WAIT - exiting"
// printer.configfile.config['output_pin caselight'].shutdown_value : 0
// printer.configfile.config['output_pin caselight'].pwm : true
// printer.configfile.config['output_pin caselight'].cycle_time : 0.01
// printer.configfile.config['output_pin caselight'].pin : PA3
// printer.configfile.config['output_pin caselight'].value : 0.5
// printer.configfile.config['led_effect sb_bar_heating'].layers :
// chase  0.3  2 add (1.00,0.0,0),(0.00,0.00,0.0)
// printer.configfile.config['led_effect sb_bar_heating'].leds :
// neopixel:progress_bar_leds (1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,32,33,31,28,26,24,22,20,18,16,14,12,10,8,6,4,2)
// printer.configfile.config['led_effect sb_bar_heating'].autostart : false
// printer.configfile.config['led_effect sb_bar_heating'].frame_rate : 5
// printer.configfile.config['led_effect sb_fan_standby'].layers :
// breathing  3 1 top (0.01, 0.01, 0.01)
// printer.configfile.config['led_effect sb_fan_standby'].leds :
// neopixel:sb_leds (1-8)
// printer.configfile.config['led_effect sb_fan_standby'].autostart : false
// printer.configfile.config['led_effect sb_fan_standby'].frame_rate : 5
// printer.configfile.config['delayed_gcode WAIT_Delayed'].gcode :
// _general_Debug msg="WAIT_Delayed- entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set wait_variable = global.wait_variable %}
// {% set count = global.wait_variable.count|float %}
// {% set duration = global.wait_variable.duration|float %}
// M117 Waiting... {((duration * count) / 60)|round(3)} minutes left.
// {% set _dummy = wait_variable.update({'count':(count-1.0)}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=wait_variable VALUE="{wait_variable}"
// {% if count > 0 %} _WAIT_Loop  {% endif %}
// {% if count <= 0 %}
// {% set _dummy = wait_variable.update({'waiting':False}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=wait_variable VALUE="{wait_variable}"
// LIGHTS_OFF                                          ;turn off WLED lights - lights controlled by WLED servers (ESP32 chips)
// PROGRESS_BAR_LEDS_OFF                               ;turn off progress bar lights - lights controlled by Octopus Pro board's RGB port
// _CASELIGHT_OFF                                      ;turn off 24V White lights - lights controlled by Octopus Pro board's HE1 port
// STATUS_OFF                                          ;turn off Stealthburner LEDs - lights controlled by EBB36 board
// {% endif %}
// _general_Debug msg="WAIT_Delayed- exiting"
// printer.configfile.config['gcode_macro _error_if_probe_not_deployed'].gcode :
// G4 P300
// _MAG_PROBE ACTION='get_status' RESPOND=0
// _do_error_if_probe_not_deployed
// printer.configfile.config['gcode_macro _error_if_probe_not_deployed'].description : Helper: Euclid Probe safety, to Verify Euclid probe is attached
// printer.configfile.config['gcode_macro set_fan_leds_off'].gcode :
// _general_Debug msg="set_fan_leds_off - entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set fan_effect = global.current_led_state.fan_leds %}
// SET_LED_EFFECT EFFECT={fan_effect} STOP=1
// _general_Debug msg="set_fan_leds_off - exiting"
// printer.configfile.config['gcode_macro set_fan_leds_off'].description : Helper: Turn off the stealthburner fan leds by using the SET_LED_EFFECT call
// printer.configfile.config['gcode_macro INFO_STATE_LEDS'].gcode :
// _general_Debug msg="INFO_STATE_LEDS - entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set string1 = "_INFO_STATE_LEDS <+++++++++++++++++" %}
// {% set string1 = string1 ~ "\n global.current_led_state.fan_leds = %s;" %}
// {% set string1 = string1 ~ "\n global.current_led_state.logo_leds = %s;" %}
// {% set string1 = string1 ~ "\n global.current_led_state.bar_leds = %s;" %}
// {% set string1 = string1 ~ "\n global.current_led_state.nozzle_leds = %s;" %}
// {% set string1 = string1 ~ "\n End of _INFO_STATE_LEDS +++++++++++++++++>" %}
// {action_respond_info(string1 % (global.current_led_state.fan_leds, global.current_led_state.logo_leds, global.current_led_state.bar_leds, global.current_led_state.nozzle_leds)) }
// _general_Debug msg="INFO_STATE_LEDS - exiting"
// printer.configfile.config['gcode_macro INFO_STATE_LEDS'].description : Helper: compare the state of some of the variables in _GLOBAL_VARS to the state in the dictionary structure of _CURRENT_STATE.current_led_state
// printer.configfile.config['gcode_macro QUAD_GANTRY_LEVEL'].rename_existing : QUAD_GANTRY_LEVEL_BASE
// printer.configfile.config['gcode_macro QUAD_GANTRY_LEVEL'].description : Helper: Mag Probe; Conform a moving, twistable gantry to the shape of a stationary bed
// printer.configfile.config['gcode_macro QUAD_GANTRY_LEVEL'].gcode :
// _Mag_Probe_Debug msg="QUAD_GANTRY_LEVEL - entering"
// {% set user   = printer['gcode_macro _USER_VARIABLE'] %}
// {% set move_z = [user.z_hop, printer.toolhead.position.z]|max %} ; calc movement high
// _SET_Z_CURRENT VAL=HOME
// {% if "xyz" not in printer.toolhead.homed_axes %} G28 {% endif %}
// {% if user.hw.mag_probe.ena %}
// G90
// G0 Z{move_z} F{user.speed.z_hop} ; move head up to insure Probe is not triggered in error case
// ATTACH_PROBE
// {% endif %}
// {% if user.hw.mag_probe.ena %}
// _MAGPROBE_STATUS_LEVELING
// {% endif %}
// QUAD_GANTRY_LEVEL_BASE {rawparams}
// {% if user.hw.mag_probe.ena %} DETACH_PROBE {% endif %}
// {% if params.HOME|default('true')|lower == 'true' %} G28 Z {% endif %}
// _SET_Z_CURRENT
// {% if params.PARK|default('true')|lower == 'true' %}
// G90
// G0 X{user.park.bed.x} Y{user.park.bed.y} Z{user.park.bed.z} F{user.speed.travel}
// {% endif %}
// {% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %} ; set back to relative
// _Mag_Probe_Debug msg="QUAD_GANTRY_LEVEL - exiting"
// printer.configfile.config['gcode_macro CALIBRATE_Z'].rename_existing : CALIBRATE_Z_BASE
// printer.configfile.config['gcode_macro CALIBRATE_Z'].description : Helper: Mag Probe; Use Mag Probe macros around the calibrate_z macro
// printer.configfile.config['gcode_macro CALIBRATE_Z'].gcode :
// STATUS_CALIBRATING_Z
// ATTACH_PROBE
// CALIBRATE_Z_BASE {rawparams}
// DOCK_PROBE
// printer.configfile.config['gcode_macro QUERY_PROBE_OUTPUT'].gcode :
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set mag_probe = user.mag_probe %}
// GET_PROBE_STATUS
// {% if printer.probe.last_query %}
// {% set string2 = "TRUE" %}
// {% else %}
// {% set string2 = "FALSE" %}
// {% endif %}
// {% set string1 = "QUERY_PROBE_OUTPUT =================>>>" %}
// {% set string1 = string1 ~ "\nQUERY_PROBE = %s;" %}
// {% set string1 = string1 ~ "\nuser.mag_probe.state = %s;" %}
// {% set string1 = string1 ~ "\nQUERY_PROBE_OUTPUT =================<<<" %}
// { action_respond_info(string1 % (string2, user.mag_probe.state)) }
// printer.configfile.config['gcode_macro QUERY_PROBE_OUTPUT'].description : Helper: Report the status of the probe (attached or docked)
// printer.configfile.config['gcode_macro _USER_VARIABLE'].variable_current_control : {}
// printer.configfile.config['gcode_macro _USER_VARIABLE'].variable_z_hop : 0
// printer.configfile.config['gcode_macro _USER_VARIABLE'].variable_sb_vars : {}
// printer.configfile.config['gcode_macro _USER_VARIABLE'].variable_purge : {}
// printer.configfile.config['gcode_macro _USER_VARIABLE'].variable_bedfanvars : {}
// printer.configfile.config['gcode_macro _USER_VARIABLE'].variable_homing : {}
// printer.configfile.config['gcode_macro _USER_VARIABLE'].description : Helper: Contains User defined printer variables
// printer.configfile.config['gcode_macro _USER_VARIABLE'].variable_filament : {}
// printer.configfile.config['gcode_macro _USER_VARIABLE'].gcode :
// _general_Debug msg="_USER_VARIABLE - entering"
// {% set user_klicky_z_endstop_x                   = 202.60 %}
// {% set user_klicky_z_endstop_y                   = 303.5 %}
// {% set user_klicky_safe_z                        = 16 %}                                 ; Minimum Z for attach/dock and homing functions
// {% set user_klicky_docklocation_x                = 0 %}                                  ; X Dock position
// {% set user_klicky_docklocation_y                = 306 %}                                ; Y Dock position
// {% set user_klicky_attachmove_x                   = -50 %}
// {% set user_klicky_dockmove_y                     = -20 %}
// {% set user_klicky_dock_speed                    = 50 %}                                 ; how fast should the toolhead move when docking the probe for the final movement
// {% set user_klicky_z_drop_speed                  = 20 %}                                 ; how fast the z will lower when moving to the z location to clear the probe
// {% set user_klicky_move_accel                    = 1000 %}                               ; how fast should the toolhead accelerate when moving
// {% set user_sb_vars_fan_led_name                   =  'sb_leds' %}
// {% set user_sb_vars_fan_idx                        =  '1,2,3,4,5,6,7,8'  %}
// {% set user_sb_vars_logo_led_name                  =  'sb_leds' %}
// {% set user_sb_vars_logo_idx                       =  '9,10,11,12,13,14,15,16' %}
// {% set user_sb_vars_nozzle_led_name                =  'sb_leds' %}
// {% set user_sb_vars_nozzle_idx                     =  '17,18' %}
// {% set user_sb_vars_bar_led_name                   =  'progress_bar_leds' %}
// {% set user_sb_vars_bar_idx                        =  '1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33' %}
// {% set user_status_presets_off                     = 2 %}                                ; preset number in WLED for the off preset
// {% set user_status_presets_lookup                  = {
// 'off'              : 2,
// 'ready'            : 9,
// 'busy'             : 4,
// 'heating'          : 11,
// 'leveling'         : 7,
// 'homing'           : 13,
// 'cleaning'         : 5,
// 'meshing'          : 8,
// 'calibrating_z'    : 6,
// 'printing'         : 14,
// 'complete'         : 10,
// 'cooling'          : 12
// }
// %}
// {% set user_bedfanvars_threshold                   = 110 %}                             ; If bed temp target is equal to or above this threshold, fans will be enabled. If temp is set to below this threshold, fans will be disabled.
// {% set user_bedfanvars_fast                        = 0.4 %}                             ; Fan speed once bed temp is reached
// {% set user_bedfanvars_slow                        = 0.2 %}                             ; Fan speed while bed is heating
// {% set user_bedfanvars_offset                      = 0 %}                               ; Fan is off when chamber temp < (defaultenclosure-offset), if temp is falling.
// {% set user_bedfanvars_chamber_fast                = 0.60 %}                            ; fan speed to use when trying to keep chamber enclosure at defaultEnclosure temperature (set point chamber temperature)
// {% set user_current_control_PrintCurrentXY         = 1.1 %}                             ; Steppermotor current to be used while printing
// {% set user_current_control_PrintCurrentZ          = 0.8 %}                             ; Steppermotor current to be used while printing
// {% set user_z_endstop_xy                           = [user_klicky_z_endstop_x,user_klicky_z_endstop_y,user_klicky_safe_z] %}     ; z Endstop position insight left profile
// {% set user_z_endstop_hop                          = user_klicky_safe_z %}                                                       ; z hop for moves e.g homimg
// {% set user_z_home_current                         = 0.3 %}                                                                      ; reduced homing curent for z
// {% set user_home_accel                             = user_klicky_move_accel %}                                                   ; reduced ACCEL for homing
// {% set user_bed_y_offset                           = 6 %}                                                                        ; Endstop offset to bed max y
// {% set user_probe_dock_pos                         = [user_klicky_docklocation_x,user_klicky_docklocation_y] %}   ; position of the dock
// {% set user_probe_delta_x                          = ( -1 * user_klicky_attachmove_x) %}                          ; x offset for position before dock
// {% set user_probe_delta_y                          = user_klicky_dockmove_y %}                                    ; y offset to move probe out of dock
// {% set user_z_probe_hop                            = user_klicky_safe_z %}                                        ; z minimum height to avoid crash
// {% set user_park_ParkHeightPercentage              = 0.50 %}                              ; The percentage of Z height to park the nozzle, expressed as 0.2 to 1.0
// ; If the printed object is taller then the expressed Z-axis percent height,
// ; the toolhead will then park 10mm above the object.
// {% set user_park_xy_delta                          = 25 %}                                ; distance for x or y from the edge
// {% set user_park_z_max_delta                       = 40 %}                                ; insure to do not hit cam in front
// {% set user_park_z_min                             = 30 %}                                ; minimal z from bed
// {% set user_park_pause_z_delta                     = 2.0 %}                               ; distance to increase head while PAUSE/CANCEL_PRINT
// {% set user_park_at_cancel                         = False %}                             ; park head at CANCEL_PRINT if not paused [False/True]
// {% set user_filament_current_profile               = 'ABS' %}                          ; the profile you wanted loaded when Klipper starts up ("ABS"or "PETG")
// {% set user_filament_ABS_LimitAccel                = 3501 %}                           ; PRINT ABS ACCEL LIMITS - ACCEL velocity limit
// {% set user_filament_ABS_LimitDecel                = 1751 %}                           ; PRINT ABS ACCEL LIMITS - DECEL velocity limit
// {% set user_filament_ABS_defaultTempNozzle         = 245 %}                            ; DEFAULT ABS TEMPERATURES - NOZZLE EXTRUDING temperature if none is specified
// {% set user_filament_ABS_defaultReadyNozzle        = 210 %}                            ; DEFAULT ABS TEMPERATURES - NOZZLE READY temperature if none is specified
// {% set user_filament_ABS_defaultWarmNozzle         = 160 %}                            ; DEFAULT ABS TEMPERATURES - NOZZLE WARMING temperature if none is specified
// {% set user_filament_ABS_defaultTempBed            = 110 %}                            ; DEFAULT ABS TEMPERATURES - BED temperature if none is specified
// {% set user_filament_ABS_defaultEnclosure          = 40 %}                             ; DEFAULT ABS TEMPERATURES - ENCLOSURE temperature if none is specified
// {% set user_filament_ABS_MeshToApply               = 'INSITU' %}                       ; ABS MESH :
// {% set user_filament_ABS_QGLbeforeSoakMesh         = True %}                           ; ABS HEATSOAK & COOLING - (True/False) Perfrom QGL before applying heat soak for HOTMESH
// {% set user_filament_ABS_QGLbeforeSoakPrint        = True %}                           ; ABS HEATSOAK & COOLING - (True/False) Perfrom QGL before applying heat soak for PRINT
// {% set user_filament_ABS_HotmeshSoakMinutes        = 30 %}                             ; ABS HEATSOAK & COOLING - Minutes to heat-soak prior to running mesh
// {% set user_filament_ABS_PrePrintSoakMinutes       = 25 %}                             ; ABS HEATSOAK & COOLING - Minutes to heat-soak prior to printing
// {% set user_filament_ABS_InsituMeshSoakMinutes     = 01 %}                             ; ABS HEATSOAK & COOLING - Minutes to heat-soak prior to performing an insitu mesh (in addition to PrePrintSoak)
// {% set user_filament_ABS_PostPrintCool             = 1 %}                              ; ABS HEATSOAK & COOLING - Post-Print cooling to prevent nozzle string, minutes of cooling
// {% set user_filament_ABS_PostPrintParkCool         = 2  %}                             ; ABS HEATSOAK & COOLING - Once parks, minutes of cooling
// {% set user_filament_ABS_purgeRetract              = 0.3 %}                            ; ABS OTHER RETRACTIONS - After completing purgeline, how much retraction to perform (Not normally needed)
// {% set user_filament_ABS_EndRetract                = 2.0 %}                            ; ABS OTHER RETRACTIONS - After print has completed, how much retraction to perform
// {% set user_filament_PETG_LimitAccel               = 3501 %}                           ; PRINT PETG ACCEL LIMITS - ACCEL velocity limit
// {% set user_filament_PETG_LimitDecel               = 1751 %}                           ; PRINT PETG ACCEL LIMITS - DECEL velocity limit
// {% set user_filament_PETG_defaultTempNozzle        = 240 %}                            ; DEFAULT PETG TEMPERATURES - NOZZLE EXTRUDING temperature if none is specified
// {% set user_filament_PETG_defaultReadyNozzle       = 210 %}                            ; DEFAULT PETG TEMPERATURES - NOZZLE READY temperature if none is specified
// {% set user_filament_PETG_defaultWarmNozzle        = 160 %}                            ; DEFAULT PETG TEMPERATURES - NOZZLE WARMING temperature if none is specified
// {% set user_filament_PETG_defaultTempBed           = 80 %}                             ; DEFAULT PETG TEMPERATURES - BED temperature if none is specified
// {% set user_filament_PETG_defaultEnclosure         = 40 %}                             ; DEFAULT PETG TEMPERATURES - ENCLOSURE temperature if none is specified
// {% set user_filament_PETG_MeshToApply              = 'MESH110' %}                      ; PETG MESH :
// {% set user_filament_PETG_QGLbeforeSoakMesh        = True %}                           ; PETG HEATSOAK & COOLING - (True/False) Perfrom QGL before applying heat soak for HOTMESH
// {% set user_filament_PETG_QGLbeforeSoakPrint       = True %}                           ; PETG HEATSOAK & COOLING - (True/False) Perfrom QGL before applying heat soak for PRINT
// {% set user_filament_PETG_HotmeshSoakMinutes       = 25 %}                             ; PETG HEATSOAK & COOLING - Minutes to heat-soak prior to running mesh
// {% set user_filament_PETG_PrePrintSoakMinutes      = 15 %}                             ; PETG HEATSOAK & COOLING - Minutes to heat-soak prior to printing
// {% set user_filament_PETG_InsituMeshSoakMinutes    = 01 %}                             ; PETG HEATSOAK & COOLING - Minutes to heat-soak prior to performing an insitu mesh (in addition to PrePrintSoak)
// {% set user_filament_PETG_PostPrintCool            = 1 %}                              ; PETG HEATSOAK & COOLING - Post-Print cooling to prevent nozzle string, minutes of cooling
// {% set user_filament_PETG_PostPrintParkCool        = 2  %}                             ; PETG HEATSOAK & COOLING - Once parks, minutes of cooling
// {% set user_filament_PETG_purgeRetract             = 0.1 %}                            ; PETG OTHER RETRACTIONS - After completing purgeline, how much retraction to perform (Not normally needed)
// {% set user_filament_PETG_EndRetract               = 2.0 %}                            ; PETG OTHER RETRACTIONS - After print has completed, how much retraction to perform
// {% set user_extruder_min_add                       = 30 %}                             ; Temperature add to min Extruder temp
// {% set user_load_distance                          = 90 %}                             ; load distance while load filament
// {% set user_load_extrude                           = 50 %}                             ; extrude distance while load filament
// {% set user_unload_distance                        = 75 %}                             ; unload distance while unload filament
// {% set user_retract_end                            = 2 %}                              ; retract distance at PRINT_END or CANCEL_PRINT
// {% set user_retract_pause                          = 0.5 %}
// {% set user_cn_location_bucket_rear               = False %}
// {% set user_cn_enable_purge                       = True %}
// {% set user_cn_purge_len                          = 10 %}	                             ; Amount of filament, in mm, to purge.
// {% set user_cn_purge_spd                          = 150 %}	                         ; Speed, in mm/min, of the purge.
// {% set user_cn_purge_temp_min                     = 240 %}	                         ; Minimum nozzle temperature to permit a purge. Otherwise, purge will not occur.
// {% set user_cn_purge_ret                          = 2 %}                               ; Retract length, in mm, after purging to prevent slight oozing. Adjust as necessary.
// {% set user_cn_ooze_dwell                         = 2 %}                               ; Dwell/wait time, in seconds, after purging and retracting.
// {% set user_cn_brush_top                          = 3 %}
// {% set user_cn_clearance_z                        = 15 %}	                             ; When traveling, but not cleaning, the clearance along the z-axis between nozzle and brush.
// {% set user_cn_wipe_qty                           = 3 %}	                             ; Number of complete (A complete wipe: left, right, left OR right, left, right) wipes.
// {% set user_cn_prep_spd_xy                        = 3000 %}	                         ; Travel (not cleaning) speed along x and y-axis in mm/min.
// {% set user_cn_prep_spd_z                         = 1500 %}	                         ; Travel (not cleaning) speed along z axis in mm/min.
// {% set user_cn_wipe_spd_xy                        = 5000 %}	                         ; Nozzle wipe speed in mm/min.
// {% set user_cn_brush_start                        = 59 %}
// {% set user_cn_brush_width                        = 30 %}
// {% set user_cn_brush_front                        = 302 %}
// {% set user_cn_brush_depth                        = 5 %}
// {% set user_cn_bucket_left_width                  = 45 %}
// {% set user_cn_bucket_right_width                 = 40 %}
// {% set user_cn_bucket_gap                         = 36 %}
// {% set user_cn_bucket_start                       = 27 %}
// {% set user_brush_pos                             = 'left' %}                                            ; left/right profile used
// {% set user_brush_x_middle                        = (user_cn_brush_start+(user_cn_brush_width/2.0)) %}   ; mid point of brush at left profile
// {% set user_brush_x_width                         = user_cn_brush_width %}                               ; width of brush
// {% set user_brush_y_start                         = user_cn_brush_front %}                               ; start point at y
// {% set user_wipe_z                                = user_cn_brush_top %}                                 ; z for wipe moves
// {% set user_wipe_cnt                              = user_cn_wipe_qty %}                                  ; number of full wipes
// {% set user_z_purge                               = 2.5 %}                                               ; z above purge bucket
// {% set user_nonprinting_speed_NPLimitAccel         = 3000 %}                                    ; NON-PRINT ACCEL LIMITS - Accel velocity limit
// {% set user_nonprinting_speed_NPLimitDecel         = 1500 %}                                    ; NON-PRINT ACCEL LIMITS - Decel velocity limit
// {% set user_nonprinting_speed_travel_speed         = 200 %}                                     ; NON-PRINT ACCEL LIMITS - how fast all other travel moves will be performed when running macros
// {% set user_ZprobeSpeed                            = 5.0 %}                                     ; [Z-Probe before print] Probing speed for Z Measurements
// {% set user_ZprobeSamples                          = 7 %}                                       ; [Z-Probe before print] Samples probed per position, yeilding as calculated median
// {% set user_ZprobeTolerance                        = 0.050 %}                                   ; [Z-Probe before print] Sample Tolerance per Z Point
// {% set user_ZprobeRetract                          = 1.5 %}                                     ; [Z-Probe before print] Retract from each probing for a D2F-5 1.2 should be good
// {% set user_z_hop_speed                            = user_klicky_z_drop_speed %}                ; default z_hop speed
// {% set user_retract_speed                          = 30 %}                                      ; default retract/extrude speed
// {% set user_travel_speed                           = user_nonprinting_speed_travel_speed %}     ; travel speed e.g park, dock ...
// {% set user_probe_dock_speed                       = user_klicky_dock_speed %}                  ; dock speed for attach/dock
// {% set user_filament_load_speed                    = 50 %}                                      ; load/unload speed
// {% set user_wipe_speed                             = (user_cn_wipe_spd_xy / 60) %}              ; wipe move
// {% set user_prime_speed                            = 25 %}                                      ; prime line speed
// {% set user_mag_probe_debug                        = False %}                           ; Enable Debug output
// {% set user_print_start_bed_up                     = 10 %}                              ; bed temp raise for faster heat soak
// {% set user_print_start_ival                       = 1 %}                               ; wait time per call in sec
// {% set user_print_start_extruder_time              = 3 %}                               ; time in minutes before soak end to start extruder heating
// {% set user_print_start_bed_time                   = 3 %}                               ; time in minutes before soak end to set bed target temp
// {% set user_print_start_prime_mult                 = 2 %}                               ; multiplier for prime line hight
// {% set user_unload_sd                              = True %}                            ; unload sd file at PRINT_END or CANCEL_PRINT [True,False]
// {% set user_prime_start_xy                         = [5.0,30.0] %}                      ; x&y start coordinates of prime line
// {% set user_prime_z                                = 0.34 %}                            ; default prime layer hight
// {% set user_prime_dir                              = 'Y+' %}                            ; direction of prime line (X+, X-, Y+, Y-)
// {% set user_prime_spacing                          = 0.4 %}                             ; distance between line, move will allways positive
// {% set user_prime_length                           = 220 %}                             ; length of prime line
// {% set user_prime_seg                              = 11 %}                              ; segments in that the prime line is splitted
// {% set user_prime_extrude_per_seg                  = 2 %}                               ; amount of filament extruded per segment
// {% set user_respond_debug                         = False %}                            ; All macros that contain the external macro _general_Debug - Enable Debug output (True,False)
// {% set user_respond_display_info                  = False %}                           ; Flag that decides if INFO_ modules are run automatically at boot and displayed every hour with Temperature info
// {% set user_respond_set_z_current                 = 0 %}                               ; Macro: _SET_Z_CURRENT
// {% set user_respond_set_acc                       = 0 %}                               ; Macro: _SET_ACC
// {% set user_respond_probe_action                  = 1 %}                               ; Macro: _PROBE_ACTION
// {% set user_respond_layer                         = 0 %}                               ; Macro: _LAYER
// {% set user_ADXLsoakMinutes                       = 30 %}                              ; Minutes to heat-soak prior to ADXL measurements
// {% set user_filter_on                             = 0.5 %}                             ; filter on value
// {% set user_filter_use_time                       = 80 %}                              ; Nevermore change warning limit in hours
// {% set user_vent_on                               = 15 %}                              ; chamber fan on temperature
// {% set user_caselight_on                          = 0.4 %}                             ; caselight on value
// {% set user_fan_run_after_print                   = 30 %}                              ; time in min to run filter and chamber exhaust after print finsih
// {% set user_mag_probe_state                       = 'unknown' %}                      ;MAG_PROBE variables in _MAG_PROBE global variables - state - possible probe states are UNKNOWN, ATTACHED and DOCKED
// {% set min = printer.toolhead.axis_minimum %}
// {% set max = printer.toolhead.axis_maximum %}
// {% set cfg_endstop_z_offset = printer.configfile.settings.stepper_z.position_endstop|default(0.0)|float %}
// {% set hw_dic = {
// 'display'       : {'ena' : True if 'neopixel neo_display' in printer.configfile.settings
// else False},
// 'chamber'       : {'type': 'sensor' if 'temperature_sensor chamber' in printer.configfile.settings
// else 'fan'    if 'temperature_fan chamber'    in printer.configfile.settings
// else 'none'},
// 'caselight'     : {'ena' : True if 'output_pin caselight' in printer.configfile.settings
// else False},
// 'filter'        : {'ena' : True if 'fan_generic filter' in printer.configfile.settings
// else False},
// 'runout'        : {'type': 'switch' if 'filament_switch_sensor filament_sensor' in printer.configfile.settings
// else 'motion' if 'filament_motion_sensor filament_sensor' in printer.configfile.settings
// else 'file'   if 'save_variables'                in printer and filament_loaded in printer.save_variables.variables
// else 'none'},
// 'relay'         : {'ena' : True if 'output_pin extruder_relay'   in printer.configfile.settings and
// 'output_pin heater_bed_relay' in printer.configfile.settings
// else False},
// 'auto_z_offset' : {'type': 'z_calib+flexplate' if 'z_calibration'  in printer and 'save_variables' in printer and 'plates' in printer.save_variables.variables
// else 'z_calib'           if 'z_calibration'  in printer
// else 'flexplate'         if 'save_variables' in printer and 'plates' in printer.save_variables.variables
// else 'none'},
// 'mag_probe'     : {'ena' : True if printer['gcode_macro _MAG_PROBE'] is defined or 'dockable_probe' in printer
// else False},
// 'endstop_temp'  : {'ena' : True if 'temperature_sensor endstop' in printer.configfile.settings
// else False}
// }
// %}
// {% set _dummy = hw_dic.chamber.update(
// {'ena': True if hw_dic.chamber.type != 'none' else False}
// )
// %}
// {% set _dummy = hw_dic.chamber.update(
// {'fan': True if hw_dic.chamber.type == 'fan' else False}
// )
// %}
// {% set _dummy = hw_dic.runout.update(
// {'ena': True if hw_dic.runout.type != 'none' else False}
// )
// %}
// {% set _dummy = hw_dic.runout.update(
// {'sensor': True if hw_dic.runout.type == 'switch' or hw_dic.runout.type == 'motion'
// else False}
// )
// %}
// {% set _dummy = hw_dic.auto_z_offset.update(
// {'ena': True if hw_dic.auto_z_offset.type != 'none' else False}
// )
// %}
// {% set _dummy = hw_dic.auto_z_offset.update(
// {'auto': True if hw_dic.auto_z_offset.type == 'z_calib+flexplate' or
// hw_dic.auto_z_offset.type == 'z_calib'
// else False}
// )
// %}
// {% set _dummy = hw_dic.auto_z_offset.update(
// {'manu': True if hw_dic.auto_z_offset.type == 'z_calib+flexplate' or
// hw_dic.auto_z_offset.type == 'flexplate'
// else False}
// )
// %}
// {% set _dummy = hw_dic.mag_probe.update(
// {'klicky': True if printer['gcode_macro _ATTACH_KLICKY_PROBE'] is defined and
// printer['gcode_macro _DOCK_KLICKY_PROBE'] is defined and
// hw_dic.mag_probe.ena == True
// else False}
// )
// %}
// {% set _dummy = hw_dic.mag_probe.update(
// {'euclid':True if printer['gcode_macro _ATTACH_EUCLID_PROBE'] is defined and
// printer['gcode_macro _DOCK_EUCLID_PROBE'] is defined and
// hw_dic.mag_probe.ena == True
// else False}
// )
// %}
// {% set _dummy = hw_dic.mag_probe.update(
// {'klicky':False if hw_dic.mag_probe.ena == True and
// hw_dic.mag_probe.klicky == True and
// hw_dic.mag_probe.euclid == True
// }
// )
// %}
// {% set bed = {
// 'min': {'x': min.x, 'y': min.y                    , 'z': 0    },
// 'max': {'x': max.x, 'y': max.y - user_bed_y_offset, 'z': max.z}
// }
// %}
// {% set calc_center = {
// 'x': (bed.max.x - bed.min.x) / 2,
// 'y': (bed.max.y - bed.min.y) / 2,
// 'z': (bed.max.z - bed.min.z) / 2
// }
// %}
// {% set calc_park = {
// 'min': {'x': bed.min.x + user_park_xy_delta,
// 'y': bed.min.y + user_park_xy_delta,
// 'z': bed.min.z + user_park_z_min},
// 'max': {'x': bed.max.x - user_park_xy_delta,
// 'y': bed.max.y - user_park_xy_delta,
// 'z': bed.max.z - user_park_z_max_delta}
// }
// %}
// {% set calc_mid = {
// 'x': ((max.x - min.x)/2.0)|float,
// 'y': ((max.y - min.y)/2.0)|float
// }
// %}
// {% set calc_z_endstop_z = cfg_endstop_z_offset|round(0, 'ceil') + 1.0 if cfg_endstop_z_offset > 0 else 1.0 %}
// {% set calc_z_hop = user_z_probe_hop if hw_dic.mag_probe.ena and user_z_probe_hop > user_z_endstop_hop
// else user_z_endstop_hop
// %}
// {% set calc_brush = {
// 'start': user_cn_brush_start,
// 'end'  : user_cn_brush_start + user_cn_brush_width
// }
// %}
// {% set calc_purge = {
// 'x': [
// (user_cn_bucket_start + (user_cn_bucket_left_width / (2 - 0)) + (0 * user_cn_bucket_gap)+(0 * (user_cn_bucket_right_width / 2))),
// (user_cn_bucket_start + (user_cn_bucket_left_width/ (2 - 1)) + (1 * user_cn_bucket_gap) +(1 * (user_cn_bucket_right_width / 2)))
// ],
// 'y': (user_cn_brush_front + (user_cn_brush_depth / 2))
// }
// %}
// {% set calc_wipe = {
// 'start': {'x': [(user_cn_bucket_start + (user_cn_brush_width * (1-0))),(user_cn_bucket_start + (user_cn_brush_width * (1-1)))],
// 'y': user_brush_y_start},
// 'end'  : {'x': [(user_cn_bucket_start + (user_cn_brush_width * (0))),(user_cn_bucket_start + (user_cn_brush_width * (1)))],
// 'y': max.y}
// }
// %}
// {% set klicky_dic = {
// 'klicky_available'      : user_klicky_available,
// 'verbose'               : user_klicky_verbose,
// 'debug'                 : user_klicky_debug,
// 'travel_speed'          : user_klicky_travel_speed,
// 'move_accel'            : user_klicky_move_accel,
// 'dock_speed'            : user_klicky_dock_speed,
// 'release_speed'         : user_klicky_release_speed,
// 'z_drop_speed'          : user_klicky_z_drop_speed,
// 'safe_z'                : user_klicky_safe_z,
// 'enable_z_hop'          : user_klicky_enable_z_hop,
// 'max_bed_y'             : user_klicky_max_bed_y,
// 'max_bed_x'             : user_klicky_max_bed_x,
// 'z_endstop_x'           : user_klicky_z_endstop_x,
// 'z_endstop_y'           : user_klicky_z_endstop_y,
// 'docklocation_x'        : user_klicky_docklocation_x,
// 'docklocation_y'        : user_klicky_docklocation_y,
// 'docklocation_z'        : user_klicky_docklocation_z,
// 'enable_dock_servo'     : user_klicky_enable_dock_servo,
// 'servo_name'            : user_klicky_servo_name,
// 'servo_deploy'          : user_klicky_servo_deploy,
// 'servo_retract'         : user_klicky_servo_retract,
// 'servo_delay'           : user_klicky_servo_delay,
// 'dockmove_x'            : user_klicky_dockmove_x,
// 'dockmove_y'            : user_klicky_dockmove_y,
// 'dockmove_z'            : user_klicky_dockmove_z,
// 'attachmove_x'          : user_klicky_attachmove_x,
// 'attachmove_y'          : user_klicky_attachmove_y,
// 'attachmove_z'          : user_klicky_attachmove_z,
// 'umbilical'             : user_klicky_umbilical,
// 'umbilical_x'           : user_klicky_umbilical_x,
// 'umbilical_y'           : user_klicky_umbilical_y,
// 'park_toolhead'         : user_klicky_park_toolhead,
// 'parkposition_x'        : user_klicky_parkposition_x,
// 'parkposition_y'        : user_klicky_parkposition_y,
// 'parkposition_z'        : user_klicky_parkposition_z,
// 'version'               : user_klicky_version,
// 'attachmove2_x'         : user_klicky_attachmove2_x,
// 'attachmove2_y'         : user_klicky_attachmove2_y,
// 'attachmove2_z'         : user_klicky_attachmove2_z,
// 'home_backoff_x'        : user_klicky_home_backoff_x,
// 'backoff_y'             : user_klicky_backoff_y,
// 'override_homing'       : user_klicky_override_homing,
// 'dock_on_zhome'         : user_klicky_dock_on_zhome,
// 'bypass_probe_docking'  : user_klicky_bypass_probe_docking
// }
// %}
// {% set sb_vars_dic = {
// 'fan_led_name'    : user_sb_vars_fan_led_name,
// 'fan_idx'         : user_sb_vars_fan_idx,
// 'logo_led_name'   : user_sb_vars_logo_led_name,
// 'logo_idx'        : user_sb_vars_logo_idx,
// 'nozzle_led_name' : user_sb_vars_nozzle_led_name,
// 'nozzle_idx'      : user_sb_vars_nozzle_idx,
// 'bar_led_name'    : user_sb_vars_bar_led_name,
// 'bar_idx'         : user_sb_vars_bar_idx
// }
// %}
// {% set status_presets_dic = {
// 'off'                : user_status_presets_off,
// 'lookup'             : {'off'            : user_status_presets_lookup.off,
// 'ready'          : user_status_presets_lookup.ready,
// 'busy'           : user_status_presets_lookup.busy,
// 'heating'        : user_status_presets_lookup.heating,
// 'leveling'       : user_status_presets_lookup.leveling,
// 'homing'         : user_status_presets_lookup.homing,
// 'cleaning'       : user_status_presets_lookup.cleaning,
// 'meshing'        : user_status_presets_lookup.meshing,
// 'calibrating_z'  : user_status_presets_lookup.calibrating_z,
// 'printing'       : user_status_presets_lookup.printing,
// 'complete'       : user_status_presets_lookup.complete,
// 'cooling'        : user_status_presets_lookup.cooling
// }
// }
// %}
// {% set current_control_dic = {
// 'PrintCurrentXY'   : user_current_control_PrintCurrentXY,
// 'PrintCurrentZ'    : user_current_control_PrintCurrentZ
// }
// %}
// {% set bedfanvars_dic = {
// 'threshold'     : user_bedfanvars_threshold,
// 'fast'          : user_bedfanvars_fast,
// 'slow'          : user_bedfanvars_slow,
// 'offset'        : user_bedfanvars_offset,
// 'chamber_fast'  : user_bedfanvars_chamber_fast
// }
// %}
// {% set homing_dic = {
// 'z_endstop': {'x':user_z_endstop_xy[0], 'y':user_z_endstop_xy[1], 'z':calc_z_endstop_z, 'hop':user_z_endstop_hop},
// 'z_current': user_z_home_current,
// 'accel'    : user_home_accel
// }
// %}
// {% set purge_dic = {
// 'purge'                 : {'x':[calc_purge.x[0],calc_purge.x[1]], 'y':calc_purge.y, 'z':(user_z_purge + user_wipe_z)},
// 'wipe'                  : {'start'  : {'x': [calc_wipe.start.x[0],calc_wipe.start.x[1]], 'y': calc_wipe.start.y, 'z':user_wipe_z},
// 'end'    : {'x': [calc_wipe.end.x[0]  ,calc_wipe.end.x[1]  ], 'y': calc_wipe.end.y,   'z':user_wipe_z},
// 'travel' : {'z': (user_wipe_z + user_cn_clearance_z)},
// 'offset' : ((calc_wipe.end.y - calc_wipe.start.y) / user_wipe_cnt),
// 'cnt'    : user_wipe_cnt},
// 'location_bucket_rear'  : user_cn_location_bucket_rear,
// 'enable_purge'          : user_cn_enable_purge,
// 'purge_len'             : user_cn_purge_len,
// 'purge_spd'             : user_cn_purge_spd,
// 'purge_temp_min'        : user_cn_purge_temp_min,
// 'purge_ret'             : user_cn_purge_ret,
// 'ooze_dwell'            : user_cn_ooze_dwell,
// 'brush_top'             : user_cn_brush_top,
// 'clearance_z'           : user_cn_clearance_z,
// 'wipe_qty'              : user_cn_wipe_qty,
// 'prep_spd_xy'           : user_cn_prep_spd_xy,
// 'prep_spd_z'            : user_cn_prep_spd_z,
// 'wipe_spd_xy'           : user_cn_wipe_spd_xy,
// 'brush_start'           : user_cn_brush_start,
// 'brush_width'           : user_cn_brush_width,
// 'brush_front'           : user_cn_brush_front,
// 'brush_depth'           : user_cn_brush_depth,
// 'bucket_left_width'     : user_cn_bucket_left_width,
// 'bucket_right_width'    : user_cn_bucket_right_width,
// 'bucket_gap'            : user_cn_bucket_gap,
// 'bucket_start'          : user_cn_bucket_start
// }
// %}
// {% set probe_dic = {
// 'dock'        : {'x'    : user_probe_dock_pos[0],
// 'y'    : user_probe_dock_pos[1] + user_probe_delta_y},
// 'store'       : {'x'    : user_probe_dock_pos[0] + user_probe_delta_x,
// 'y'    : user_probe_dock_pos[1]}
// }
// %}
// {% set speed_dic = {
// 'z_hop'           : (user_z_hop_speed * 60),
// 'retract'         : (user_retract_speed * 60),
// 'travel'          : (user_travel_speed * 60),
// 'dock'            : (user_probe_dock_speed * 60),
// 'load'            : (user_filament_load_speed * 60),
// 'wipe'            : (user_wipe_speed * 60),
// 'prime'           : (user_prime_speed * 60),
// 'NPLimitAccel'    : user_nonprinting_speed_NPLimitAccel,
// 'NPLimitDecel'    : user_nonprinting_speed_NPLimitDecel,
// 'travel_speed'    : user_nonprinting_speed_travel_speed,
// 'ZprobeSpeed'     : user_ZprobeSpeed,
// 'ZprobeSamples'   : user_ZprobeSamples,
// 'ZprobeTolerance' : user_ZprobeTolerance,
// 'ZprobeRetract'   : user_ZprobeRetract
// }
// %}
// {% set park_dic = {
// 'bed'                   : {'x': calc_center.x,   'y': calc_center.y,   'z': calc_park.min.z},
// 'center'                : {'x': calc_center.x,   'y': calc_center.y,   'z': calc_center.z},
// 'front'                 : {'x': calc_center.x,   'y': calc_park.min.y, 'z': calc_park.max.z},
// 'frontlow'              : {'x': calc_center.x,   'y': calc_park.min.y, 'z': calc_park.min.z},
// 'rear'                  : {'x': calc_park.min.x, 'y': calc_park.max.y, 'z': calc_park.max.z},
// 'pause'                 : {'x': calc_purge.x,    'y': calc_purge.y,   'dz': user_park_pause_z_delta},
// 'park_at_cancel'        : user_park_at_cancel,
// 'ParkHeightPercentage'  : user_park_ParkHeightPercentage,
// 'mid'                   : {'x': calc_mid.x,      'y': calc_mid.y}
// }
// %}
// {% set filament_dic = {
// 'load_distance'   : user_load_distance,
// 'load_extrude'    : user_load_extrude,
// 'unload_distance' : user_unload_distance,
// 'retract'         : {'end'   : user_filament_ABS_EndRetract if user_filament_current_profile == "ABS"
// else user_filament_PETG_EndRetract if user_filament_current_profile == "PETG",
// 'pause' : user_retract_pause,
// 'cancel': user_retract_end - user_retract_pause},
// 'profile'         : {'name'                  : user_filament_current_profile,
// 'LimitAccel'            : user_filament_ABS_LimitAccel if user_filament_current_profile == "ABS"
// else user_filament_PETG_LimitAccel if user_filament_current_profile == "PETG",
// 'LimitDecel'            : user_filament_ABS_LimitDecel if user_filament_current_profile == "ABS"
// else user_filament_PETG_LimitDecel if user_filament_current_profile == "PETG",
// 'defaultTempNozzle'     : user_filament_ABS_defaultTempNozzle if user_filament_current_profile == "ABS"
// else user_filament_PETG_defaultTempNozzle if user_filament_current_profile == "PETG",
// 'defaultReadyNozzle'    : user_filament_ABS_defaultReadyNozzle if user_filament_current_profile == "ABS"
// else user_filament_PETG_defaultReadyNozzle if user_filament_current_profile == "PETG",
// 'defaultWarmNozzle'     : user_filament_ABS_defaultWarmNozzle if user_filament_current_profile == "ABS"
// else user_filament_PETG_defaultWarmNozzle if user_filament_current_profile == "PETG",
// 'defaultTempBed'        : user_filament_ABS_defaultTempBed if user_filament_current_profile == "ABS"
// else user_filament_PETG_defaultTempBed if user_filament_current_profile == "PETG",
// 'defaultEnclosure'      : user_filament_ABS_defaultEnclosure if user_filament_current_profile == "ABS"
// else user_filament_PETG_defaultEnclosure if user_filament_current_profile == "PETG",
// 'MeshToApply'           : user_filament_ABS_MeshToApply if user_filament_current_profile == "ABS"
// else user_filament_PETG_MeshToApply if user_filament_current_profile == "PETG",
// 'QGLbeforeSoakMesh'     : user_filament_A// printer.configfile.config['gcode_macro _USER_VARIABLE'].variable_respond : {}
// printer.configfile.config['gcode_macro _USER_VARIABLE'].variable_mag_probe : {}
// printer.configfile.config['gcode_macro _USER_VARIABLE'].variable_var : {}
// printer.configfile.config['gcode_macro _USER_VARIABLE'].variable_hw : {}
// printer.configfile.config['gcode_macro _USER_VARIABLE'].variable_speed : {}
// printer.configfile.config['gcode_macro _USER_VARIABLE'].variable_park : {}
// printer.configfile.config['gcode_macro _USER_VARIABLE'].variable_peripheral : {}
// printer.configfile.config['gcode_macro _USER_VARIABLE'].variable_unload_sd : False
// printer.configfile.config['gcode_macro _USER_VARIABLE'].variable_status_presets : {}
// printer.configfile.config['gcode_macro _USER_VARIABLE'].variable_print_start : {}
// printer.configfile.config['gcode_macro _USER_VARIABLE'].variable_probe : {}
// printer.configfile.config['gcode_macro _USER_VARIABLE'].variable_prime : {}
// printer.configfile.config['gcode_macro _USER_VARIABLE'].variable_klicky : {}
// printer.configfile.config['gcode_macro _USER_VARIABLE'].variable_run : False
// printer.configfile.config['gcode_macro reset_rp2040'].gcode :
// _general_Debug msg="reset_rp2040 - entering"
// {action_call_remote_method("set_device_power",
// device="rp2040",
// state="on")}
// _general_Debug msg="reset_rp2040 - exiting"
// printer.configfile.config['gcode_macro reset_rp2040'].description : Helper: reset the RP2040 MCU on the TinyFan PCB board by toggling a 5V relay via moonraker
// printer.configfile.config['gcode_macro query_thermistors'].gcode :
// _general_Debug msg="QUERY_THERMISTOR - entering"
// QUERY_ADC NAME=extruder PULLUP=4700
// QUERY_ADC NAME=z_thermal_adjust pullup=4700
// _general_Debug msg="QUERY_THERMISTOR -exiting"
// printer.configfile.config['gcode_macro query_thermistors'].description : Helper: get resistance value from ADC for two different thermistors
// printer.configfile.config['gcode_macro SHUTDOWN'].gcode :
// _general_Debug msg="SHUTDOWN - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// _CG28 ; home if not already homed
// G90   ; absolute positioning
// G0 X{user.park.bed.x} Y{user.park.bed.y} Z{user.park.bed.z} F{user.speed.travel}
// _WAIT_Start MINUTES=0.17                            ;wait 10 seconds
// M400
// _general_Debug msg="SHUTDOWN - exiting"
// printer.configfile.config['gcode_macro SHUTDOWN'].description : Helper: turn off all the lights (WLED strips and progres_bar LEDs and 24V LED lights and stealthburner LEDs)
// printer.configfile.config['gcode_macro _BedFansSlow'].gcode :
// _general_Debug msg="_BedFansSlow - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set SLOW = user.bedfanvars.slow|float %}
// SET_FAN_SPEED FAN=Bedfan_Left SPEED={SLOW}                             ;set fan speed
// SET_FAN_SPEED FAN=Bedfan_Right SPEED={SLOW}                            ;set fan speed
// _general_Debug msg="_BedFansSlow - exiting"
// printer.configfile.config['gcode_macro _BedFansSlow'].description : Helper: Runs the bed fans at a slow speed as specified by user.bedfanvars.slow
// printer.configfile.config['led_effect sb_bar_calibrating_z'].layers :
// breathing  3 1 top (1.0, 0.25, 0.00)
// printer.configfile.config['led_effect sb_bar_calibrating_z'].leds :
// neopixel:progress_bar_leds (1-33)
// printer.configfile.config['led_effect sb_bar_calibrating_z'].autostart : false
// printer.configfile.config['led_effect sb_bar_calibrating_z'].frame_rate : 5
// printer.configfile.config['gcode_macro M141'].gcode :
// _general_Debug msg="M141 - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set defaultENCLOSURE = user.filament.profile.defaultEnclosure|float %}
// {% set S = params.S|default(defaultENCLOSURE)|float %}
// SET_TEMPERATURE_FAN_TARGET temperature_fan="chamber" target={S}
// M118 Chamber Temp set to {S} C
// _general_Debug msg="M141 - exiting"
// printer.configfile.config['gcode_macro M141'].description : Helper: Set temperature of chamber fan
// printer.configfile.config['gcode_macro M140'].rename_existing : M99140
// printer.configfile.config['gcode_macro M140'].description : Helper: Replace M140 (Set Bed Temperature) to just be an alias of SET_HEATER_TEMPERATURE (which has associated bed fan logic if enabled)
// printer.configfile.config['gcode_macro M140'].gcode :
// _general_Debug msg="M140 - entering"
// {% set S = params.S|float %}
// SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={S}
// _general_Debug msg="M140 - exiting"
// printer.configfile.config['led_effect sb_logo_leveling'].layers :
// breathing  3 1 top (0.5, 0.1, 0.4)
// printer.configfile.config['led_effect sb_logo_leveling'].leds :
// neopixel:sb_leds (9-16)
// printer.configfile.config['led_effect sb_logo_leveling'].autostart : false
// printer.configfile.config['led_effect sb_logo_leveling'].frame_rate : 5
// printer.configfile.config['gcode_macro status_off'].gcode :
// _general_Debug msg="status_off- entering"
// STOP_LED_EFFECTS
// M117 OFF
// SET_NOZZLE_LEDS_BY_NAME COLOR="OFF"
// _general_Debug msg="status_off- exiting"
// printer.configfile.config['gcode_macro status_off'].description : Helper: Turn Off all the Stealthburner leds
// printer.configfile.config['gcode_macro _magprobe_status_ready'].gcode :
// {% if printer['gcode_macro status_ready'] is defined %}
// _Mag_Probe_Debug msg="_magprobe_status_ready activating the LED STATUS_READY"
// STATUS_READY
// {% endif %}
// printer.configfile.config['gcode_macro _magprobe_status_ready'].description : Helper: Mag Probe, enable STATUS_READY LED state
// printer.configfile.config['gcode_macro _Mag_Probe_Debug'].gcode :
// {% set message  = params.MSG %}
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set debug = user.mag_probe.debug|default(False) %}
// {% if debug %}
// { action_respond_info(message) }
// {% endif %}
// printer.configfile.config['gcode_macro _Mag_Probe_Debug'].description : Helper: Mag Probe; If this call which contains a message on the name of the current routine is placed at the beginning and ending of the current klicky probe routine then this can be used to determine where an error occurred (which Mag probe routine the error occurred in) if _USER_VARIABLE mag_probe.debug is set to True
// printer.configfile.config['led_effect sb_fan_printing'].layers :
// gradient  0.3  1 add (0.3, 0.0, 0.0),(0.3, 0.3, 0.0),(0.3, 0.1, 0.0)
// printer.configfile.config['led_effect sb_fan_printing'].leds :
// neopixel:sb_leds (1-8)
// printer.configfile.config['led_effect sb_fan_printing'].autostart : false
// printer.configfile.config['led_effect sb_fan_printing'].frame_rate : 5
// printer.configfile.config['gcode_macro CURRENT_HIGH'].gcode :
// _general_Debug msg="CURRENT_HIGH - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// M117 Increased motor currents.
// SET_TMC_CURRENT STEPPER=stepper_x CURRENT={user.current_control.PrintCurrentXY|float}
// SET_TMC_CURRENT STEPPER=stepper_y CURRENT={user.current_control.PrintCurrentXY|float}
// SET_TMC_CURRENT STEPPER=stepper_z CURRENT={user.current_control.PrintCurrentZ|float}
// SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT={user.current_control.PrintCurrentZ|float}
// SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT={user.current_control.PrintCurrentZ|float}
// SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT={user.current_control.PrintCurrentZ|float}
// _general_Debug msg="CURRENT_HIGH - exiting"
// printer.configfile.config['gcode_macro CURRENT_HIGH'].description : Helper: Raises stepper current for printing routine
// printer.configfile.config['led_effect sb_nozzle_printing'].layers :
// static  1  0 top (0.0, 0.0, 0.0, 1.0)
// printer.configfile.config['led_effect sb_nozzle_printing'].leds :
// neopixel:sb_leds (17,18)
// printer.configfile.config['led_effect sb_nozzle_printing'].autostart : false
// printer.configfile.config['led_effect sb_nozzle_printing'].frame_rate : 2
// printer.configfile.config['gcode_macro CHECK_QGL'].gcode :
// _Mag_Probe_Debug msg="CHECK_QGL - entering"
// {% set user        = printer['gcode_macro _USER_VARIABLE'] %}
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set probe_state = global._mag_probe.state|default('unknown')|lower %} ; get probe state
// {% set probe_ok    = False if user.hw.mag_probe.ena and (probe_state == 'error' or probe_state == 'unknown')
// else True %}
// {% if not printer.quad_gantry_level.applied or not probe_ok %} ; check QGL and probe status
// {action_respond_info("QGL CHECK: Fail therefore cancel the print")}
// PAUSE_BASE
// G90
// G0 Z{user.z_hop} F{user.speed.z_hop}                                 ; move nozzle to z high first
// {% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %} ; set back to relative
// {% if user.hw.mag_probe.ena %} DETACH_PROBE {% endif %}
// CANCEL_PRINT PARK=1 ERROR=1
// {% else %}
// {action_respond_info("QGL CHECK: Pass")}
// {% endif %}
// _Mag_Probe_Debug msg="CHECK_QGL - exiting"
// printer.configfile.config['gcode_macro CHECK_QGL'].description : Helper: Mag Probe; Run after QUAD_GANTRY_LEVEL to insure it passes
// printer.configfile.config['gcode_macro LIGHTS_RANDOM'].gcode :
// _general_Debug msg="LIGHTS_RANDOM - entering"
// {% set CHAIN_COUNT = params.COUNT|default(92)|int %}
// {% set STRIP = params.STRIP|default("Chamber_Lights")|string %}
// {% for led in range(CHAIN_COUNT) %}
// {% if led == CHAIN_COUNT-1 %}
// SET_WLED STRIP={STRIP} RED={(range(0,100) | random) / 100} GREEN={(range(0,100) | random) / 100} BLUE={(range(0,100) | random) / 100} INDEX={led+1} TRANSMIT=1
// {% else %}
// SET_WLED STRIP={STRIP}  RED={(range(0,100) | random) / 100} GREEN={(range(0,100) | random) / 100} BLUE={(range(0,100) | random) / 100} INDEX={led+1} TRANSMIT=0
// {% endif %}
// G4 P15
// {% endfor %}
// _general_Debug msg="LIGHTS_RANDOM - exiting"
// printer.configfile.config['gcode_macro LIGHTS_RANDOM'].description : Helper: Test the ability to Set all leds to a random RGB value for WLED strip
// printer.configfile.config['gcode_macro _FILTER_ON'].gcode :
// _general_Debug msg="_FILTER_ON - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// _SET_FILTER S={user.peripheral.filter.on_val}
// _general_Debug msg="_FILTER_ON - exiting"
// printer.configfile.config['gcode_macro _FILTER_ON'].description : Helper: Nevermore on
// printer.configfile.config['led_effect sb_bar_meshing'].layers :
// breathing  3 1 top (1.0, 1.0, 0.0)
// printer.configfile.config['led_effect sb_bar_meshing'].leds :
// neopixel:progress_bar_leds (1-33)
// printer.configfile.config['led_effect sb_bar_meshing'].autostart : false
// printer.configfile.config['led_effect sb_bar_meshing'].frame_rate : 5
// printer.configfile.config['gcode_macro VENT'].gcode :
// _general_Debug msg="VENT - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% if printer['temperature_fan chamber'].target|float > 0 and
// printer['temperature_fan chamber'].target|float <= user.peripheral.vent.on_val|float %}
// M141
// {% else %}
// M141 S{user.peripheral.vent.on_val}
// {% endif %}
// _VENT_INFO
// _general_Debug msg="VENT - exiting"
// printer.configfile.config['gcode_macro VENT'].description : Helper: Toggle Chamber fan
// printer.configfile.config['gcode_macro TEST_LIGHTS_RGB'].gcode :
// _general_Debug msg="TEST_LIGHTS_RGB - entering"
// {% set TRANSMITALL = params.TRANSMITALL|default(0)|int %}
// {% set CHAIN_COUNT = params.COUNT|default(92)|int %}
// {% set STRIP = params.STRIP|default("Chamber_Lights")|string %}
// {% for led in range(CHAIN_COUNT) %}
// {% if led == CHAIN_COUNT-1 or led == 0 %}
// SET_WLED STRIP={STRIP} RED=1 GREEN=1 BLUE=1 WHITE=1 INDEX={led+1} TRANSMIT=1
// {% elif led % 3 == 2 %}
// SET_WLED STRIP={STRIP} RED=0 GREEN=0 BLUE=1 INDEX={led+1} TRANSMIT={TRANSMITALL}
// {% elif led % 3 == 1 %}
// SET_WLED STRIP={STRIP} RED=0 GREEN=1 BLUE=0 INDEX={led+1} TRANSMIT={TRANSMITALL}
// {% else %}
// SET_WLED STRIP={STRIP} RED=1 GREEN=0 BLUE=0 INDEX={led+1} TRANSMIT={TRANSMITALL}
// {% endif %}
// {% endfor %}
// _general_Debug msg="TEST_LIGHTS_RGB - exiting"
// printer.configfile.config['gcode_macro TEST_LIGHTS_RGB'].description : Helper: Ensure full data range is sent correctly to the WLED Strips
// printer.configfile.config['led_effect sb_fan_calibrating_z'].layers :
// breathing  3 1 top (1.00, 0.25, 0.00)
// printer.configfile.config['led_effect sb_fan_calibrating_z'].leds :
// neopixel:sb_leds (1-8)
// printer.configfile.config['led_effect sb_fan_calibrating_z'].autostart : false
// printer.configfile.config['led_effect sb_fan_calibrating_z'].frame_rate : 5
// printer.configfile.config['gcode_macro _magprobe_status_calibrating_z'].gcode :
// {% if printer['gcode_macro status_calibrating_z'] is defined %}
// _Mag_Probe_Debug msg="_magprobe_status_calibrating_z activating the LED STATUS_CALIBRATING_Z"
// STATUS_CALIBRATING_Z
// {% endif %}
// printer.configfile.config['gcode_macro _magprobe_status_calibrating_z'].description : Helper: Mag Probe, enable STATUS_CALIBRATING_Z LED state
// printer.configfile.config['gcode_macro _PART_COOLING_FAN_CHECK'].gcode :
// _general_Debug msg="_PART_COOLING_FAN_CHECK - entering"                     ;if debug enabled display message
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set fancheckvars = global.fancheckvars %}
// {% set pc_stop_count = global.fancheckvars.pc_stop_count|int %}
// {% set min_rpm = 600|float %}
// {% set max_consecutive_stops = 3 %}
// {% set rpm = printer.fan.rpm|float %}
// {% set he_target = printer.extruder.target|float %}
// {% set he_temp = printer.extruder.temperature|float %}
// {% set fan_on_temp = printer.configfile.settings['heater_fan fan_hotend'].heater_temp|float %}
// {% set pc_enabled = global.fancheckvars.part_cooling_fan_enabled|int %}
// {% if (he_target >= fan_on_temp) and (rpm < min_rpm) and (he_temp >= fan_on_temp) and (pc_enabled) %}
// {% set _dummy = fancheckvars.update({'pc_stop_count':(pc_stop_count + 1)}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=fancheckvars VALUE="{fancheckvars}"
// M118 WARNING: Part Cooling Fan stoppage detected ({pc_stop_count+1}/{max_consecutive_stops}).
// M400
// {% if global.fancheckvars.pc_stop_count|int >= max_consecutive_stops-1 %}
// _FAN_STOPPAGE_ROUTINE
// {% endif %}
// {% else %}
// {% set _dummy = fancheckvars.update({'pc_stop_count':0}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=fancheckvars VALUE="{fancheckvars}"
// {% endif %}
// _general_Debug msg="_PART_COOLING_FAN_CHECK - exiting"                     ;if debug enabled display message
// printer.configfile.config['gcode_macro _PART_COOLING_FAN_CHECK'].description : Helper: Checks to see if the part cooling fan has failed
// printer.configfile.config['gcode_macro PRESSURE_ADVANCE_SELECT'].gcode :
// _general_Debug msg="PRESSURE_ADVANCE_SELECT - entering"
// {% if not printer.save_variables.variables.pressure_advance %}
// {action_respond_info("PRESSURE ADVANCE: No filament defined ABORDED")}
// {% else %}
// {% set nozzle = params.NOZZLE|default(0.4)|float %}
// {% set id = params.FILAMENT|default('None')|string %}
// {% set pa_dic = printer.save_variables.variables.pressure_advance %}
// {% set found = {'id'    : 'default',
// 'nozzle': 0.4,
// 'pa'    : printer.configfile.settings.extruder.pressure_advance,
// 'st'    : printer.configfile.settings.extruder.pressure_advance_smooth_time} %}
// {% for filament in pa_dic %}
// {% if id == filament.id %}
// {% for setup in filament.val %}
// {% if nozzle == setup.nozzle %}
// {% set _dummy = found.update({'id': filament.id}) %}
// {% set _dummy = found.update({'nozzle': setup.nozzle}) %}
// {% set _dummy = found.update({'pa': setup.pa}) %}
// {% set _dummy = found.update({'st': setup.st}) %}
// {% endif %}
// {% endfor %}
// {% endif %}
// {% endfor %}
// SET_PRESSURE_ADVANCE ADVANCE={found.pa} SMOOTH_TIME={found.st}
// {action_respond_info("PRESSURE ADVANCE:
// Filament: %s   Nozzle: %1.02f
// Pressure Advance: %1.03f Smooth Time: %1.03f" % (found.id, found.nozzle, found.pa, found.st))}
// {% endif %}
// _general_Debug msg="PRESSURE_ADVANCE_SELECT - exiting"
// printer.configfile.config['gcode_macro PRESSURE_ADVANCE_SELECT'].description : Helper: Set PA depending on nozzle and filament
// printer.configfile.config['gcode_macro TEST_PROBE_ACCURACY'].gcode :
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set tmacro = global.tmacro %}
// {% set _dummy = tmacro.update({'start_idle_minutes':params.START_IDLE_MINUTES|default(5)|int }) %}
// {% set _dummy = tmacro.update({'bed_temp':params.BED_TEMP|default(110)|int }) %}
// {% set _dummy = tmacro.update({'extruder_temp':params.EXTRUDER_TEMP|default(150)|int }) %}
// {% set _dummy = tmacro.update({'bed_soak_minutes':params.BED_SOAK_MINUTES|default(30)|int }) %}
// {% set _dummy = tmacro.update({'extruder_soak_minutes':params.EXTRUDER_SOAK_MINUTES|default(15)|int }) %}
// {% set _dummy = tmacro.update({'dwell_seconds':params.DWELL_SECONDS|default(1)|int }) %}
// {% set _dummy = tmacro.update({'dwell_lift_z':params.DWELL_LIFT_Z|default(-1)|int }) %}
// {% set _dummy = tmacro.update({'end_idle_minutes':params.END_IDLE_MINUTES|default(10)|int }) %}
// {% set _dummy = tmacro.update({'state':'start' }) %}
// {% set _dummy = tmacro.update({'next_state':'none' }) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=tmacro VALUE="{tmacro}"
// UPDATE_DELAYED_GCODE ID=probe_accuracy_loop DURATION=1
// printer.configfile.config['gcode_macro TEST_PROBE_ACCURACY'].description : Helper: TEST_PROBE_ACCURACY macro; setup variables and calls probe_accuracy_loop macro
// printer.configfile.config['temperature_sensor P_External_Ambient_Temp'].pullup_resistor : 4700
// printer.configfile.config['temperature_sensor P_External_Ambient_Temp'].sensor_pin : tinyfan: gpio27
// printer.configfile.config['temperature_sensor P_External_Ambient_Temp'].sensor_type : FYSETC-HT-NTC100K-3950_airtemp
// printer.configfile.config['temperature_sensor P_External_Ambient_Temp'].min_temp : -200
// printer.configfile.config['temperature_sensor P_External_Ambient_Temp'].gcode_id : Extr_Air_Temp
// printer.configfile.config['temperature_sensor P_External_Ambient_Temp'].max_temp : 125
// printer.configfile.config['gcode_macro _TOOLHEAD_PARK'].gcode :
// _general_Debug msg="_TOOLHEAD_PARK - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set pos = {'x': user.park.bed.x if params.P|int == 1
// else params.X,
// 'y': user.park.bed.y if params.P|int == 1
// else params.Y,
// 'z': user.park.bed.z if params.P|int == 1
// else [(printer.toolhead.position.z + user.park.pause.dz), printer.toolhead.axis_maximum.z]|min} %}
// G90
// G0 Z{pos.z} F{user.speed.z_hop}
// G0 X{pos.x} Y{pos.y} F{user.speed.travel}
// _general_Debug msg="_TOOLHEAD_PARK - exiting"
// printer.configfile.config['gcode_macro _TOOLHEAD_PARK'].description : Helper: Park toolhead used in PAUSE and CANCEL_PRINT
// printer.configfile.config['gcode_macro _FAN_STOPPAGE_ROUTINE'].gcode :
// _general_Debug msg="_FAN_STOPPAGE_ROUTINE - entering"
// M117 !!FAN BLOCKED!!
// M118 FAN STOPPAGE DETECTED. PAUSING...
// SET_LOGO_LEDS_OFF                                               ;Turn off logo LEDs
// SET_FAN_LEDS_OFF                                                ;Turn off fan LEDs
// SET_NOZZLE_LEDS_BY_NAME COLOR="OFF"                             ;Turn nozzle logo LEDs
// SET_LOGO_LEDS_BY_NAME COLOR="RED"                               ;Turn logo LEDs red
// SET_FAN_LEDS_BY_NAME COLOR="RED"                                ;Turn fan LEDs red
// SET_NOZZLE_LEDS_BY_NAME COLOR="RED"                             ;Turn nozzle LEDs red
// PAUSE                                                           ;My pause macro turns off the hotend fan.
// _general_Debug msg="_FAN_STOPPAGE_ROUTINE - exiting"
// printer.configfile.config['gcode_macro _FAN_STOPPAGE_ROUTINE'].description : Helper: PAUSES the printer if a toolhead fan has FAILED!
// printer.configfile.config['gcode_macro _magprobe_status_cleaning'].gcode :
// {% if printer['gcode_macro status_cleaning'] is defined %}
// _Mag_Probe_Debug msg="_magprobe_status_cleaning activating the LED STATUS_CLEANING"
// STATUS_CLEANING
// {% endif %}
// printer.configfile.config['gcode_macro _magprobe_status_cleaning'].description : Helper: Mag Probe, enable STATUS_CLEANING LED state
// printer.configfile.config['gcode_macro LIGHTS_OFF'].gcode :
// _general_Debug msg="DIM_LIGHTS - entering"
// CHAMBER_LIGHTS_OFF
// BOTTOM_LIGHTS_OFF
// _general_Debug msg="DIM_LIGHTS - exiting"
// printer.configfile.config['gcode_macro LIGHTS_OFF'].description : Helper: WLED lights off (CHAMBER_LIGHTS and BOTTOM_LIGHTS)
// printer.configfile.config['gcode_macro _RESTORE_FILAMENT_SENSOR'].gcode :
// _general_Debug msg="_RESTORE_FILAMENT_SENSOR - entering"
// {% if printer.save_variables.variables.filament_sensor is defined %}
// {% for sensor in printer.save_variables.variables.filament_sensor %}
// SET_FILAMENT_SENSOR_BASE SENSOR={sensor} ENABLE={printer.save_variables.variables.filament_sensor[sensor]}
// {% endfor %}
// {% endif %}
// _general_Debug msg="_RESTORE_FILAMENT_SENSOR - exiting"
// printer.configfile.config['gcode_macro _RESTORE_FILAMENT_SENSOR'].description : Helper: Restore the filament sensor on/off state at klipper start
// printer.configfile.config['led_effect sb_logo_standby'].layers :
// breathing  3 1 top (0.01, 0.01, 0.01)
// printer.configfile.config['led_effect sb_logo_standby'].leds :
// neopixel:sb_leds (9-16)
// printer.configfile.config['led_effect sb_logo_standby'].autostart : false
// printer.configfile.config['led_effect sb_logo_standby'].frame_rate : 5
// printer.configfile.config['gcode_macro _POWER_ON_ESP2'].gcode :
// _general_Debug msg="_POWER_ON_ESP2 - entering"
// {action_call_remote_method("set_device_power",
// device="tasmota_plug_ESP2",
// state="on")}
// _general_Debug msg="_POWER_ON_ESP2 - exiting"
// printer.configfile.config['gcode_macro _POWER_ON_ESP2'].description : Helper: Turn on the Tasmota ESP2 smart plug
// printer.configfile.config.save_variables.filename : /home/pi/klipper_config/.variables.stb
// printer.configfile.config['gcode_macro _general_entry_point'].gcode :
// {% set function  = 'pre_' ~ params.FUNCTION %}
// SAVE_GCODE_STATE NAME={function}
// G90
// printer.configfile.config['gcode_macro _general_entry_point'].description : Helper:  macro that saves the G-CODE STATE
// printer.configfile.config['led_effect sb_nozzle_heating'].layers :
// gradient 1.00 1.00 top (1.00,0.00,0.00),(0.00,0.00,0.00),(1.00,0.0,0.00)
// printer.configfile.config['led_effect sb_nozzle_heating'].leds :
// neopixel:sb_leds (17,18)
// printer.configfile.config['led_effect sb_nozzle_heating'].autostart : false
// printer.configfile.config['led_effect sb_nozzle_heating'].frame_rate : 2
// printer.configfile.config['gcode_macro PA_CAL'].gcode :
// _general_Debug msg="PA_CAL - entering"                                                           ;if debug enabled display message
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% if printer.idle_timeout.state == "Printing" or printer.pause_resume.is_paused %}
// {action_respond_info("Cannot do that while printing")}
// {% else %}
// {% set defaultTN = user.filament.profile.defaultTempNozzle|float %}
// {% set defaultTB = user.filament.profile.defaultTempBed|float %}
// {% set BED = params.BED|default(defaultTB)|float %}
// {% set EXTRUDER = params.EXTRUDER|default(defaultTN)|float %}
// {% set PA_START = params.PA_START|default(0.0)|float %}
// {% set PA_STEP = params.PA_STEP|default(0.005)|float %}
// {% set NZL_CFG = printer.configfile.config.extruder.nozzle_diameter|float %}
// {% set NZL = params.NZL|default(NZL_CFG)|float %}
// {% set E20 = (0.1147475 * NZL) * 20|float %}
// {% set E40 = (0.1147475 * NZL) * 40|float %}
// {% set X_MID = printer.configfile.config.stepper_x.position_max|float / 2.0 %}
// {% set Y_MID = printer.configfile.config.stepper_y.position_max|float / 2.0 %}
// PRINT_START BED_TEMP={BED} EXTRUDER_TEMP={EXTRUDER} PRINT_MIN={params.PRINT_MIN} PRINT_MAX={params.PRINT_MAX}
// M220 S100     ;Set speed factor override percentage                                                                                                                                                ;Set speed factor override percentage
// M221 S100     ;Set extrude factor override percentage                                                                                                                                               ;Set extrude factor override percentage
// G21           ;Set Units to Millimeters                                                                                                                                                         ;Millimeter units
// G90           ;Absolute Positioning                                                                                                                                                      ;Absolute XYZ
// M83           ;Set extruder to relative mode                                                                                                                                                        ;Relative E
// SET_VELOCITY_LIMIT ACCEL={user.filament.profile.LimitAccel|float} ACCEL_TO_DECEL={user.filament.profile.LimitDecel|float}   ;Modify the printer's velocity limits
// G92 E0        ;reset extruder                                                                                                                                                ;Set extruder Position to 0
// M106 S0       ;turn off part cooling fan                                                                                                                                               ;turn off part cooling fan
// G1 X{(X_MID-40)} Y{(Y_MID-65)} F30000                                                                                                                         ;move to start position
// G1 Z0.25 F300        ; move Z                                                                                                                                         ;move to layer height
// G1 E0.75 F1800       ;prime extruder                                                                                                                                         ;un-retract
// G1 X{(X_MID-20)} Y{(Y_MID-65)} E{E20} F300                                                                                                                    ;print line part one
// G1 X{(X_MID+20)} Y{(Y_MID-65)} E{E40} F9000                                                                                                                   ;print line part two
// G1 X{(X_MID+40)} Y{(Y_MID-65)} E{E20} F300                                                                                                                    ;print line part three
// G1 E-0.75 F1800     ;.75mm retraction                                                                                                                                          ;retract
// G1 Z1 F300          ;move Z                                                                                                                                          ;Move above layer height
// {% for i in range(0, 20) %}
// SET_PRESSURE_ADVANCE ADVANCE={PA_START + (i * PA_STEP)}                                                                                                   ;set Pressure Advance
// M117 Testing Pressure Advance at: {PA_START + (i * PA_STEP)}
// G1 X{(X_MID-40)} Y{(Y_MID-35)+(5*i)} F30000                                                                                                               ;move to start position
// G1 Z0.25 F300                                                                                                                                             ;move to layer height
// G1 E0.75 F1800                                                                                                                                            ;un-retract
// G1 X{(X_MID-20)} Y{(Y_MID-35)+(5*i)} E{E20} F300                                                                                                          ;print line part one
// G1 X{(X_MID+20)} Y{(Y_MID-35)+(5*i)} E{E40} F9000                                                                                                         ;print line part two
// G1 X{(X_MID+40)} Y{(Y_MID-35)+(5*i)} E{E20} F300                                                                                                          ;print line part three
// G1 E-0.75 F1800                                                                                                                                           ;retract
// G1 Z1 F300                                                                                                                                                ;Move above layer height
// {% endfor %}
// M117 Find best line and multiply it by ({PA_START} + (line * {PA_STEP}) ) to find your PA setting.
// PRINT_END                                                                                                                                                     ;call PRINT_END macro
// {% endif %}
// _general_Debug msg="PA_CAL - exiting"                                                                                                                             ;if debug enabled display message
// printer.configfile.config['gcode_macro PA_CAL'].description : Helper: Prints a Pressure Advance panel to help determine the correct PA value
// printer.configfile.config['gcode_macro _HOTEND_FAN_CHECK'].gcode :
// _general_Debug msg="_HOTEND_FAN_CHECK - entering"                                                                 ;if debug enabled display message
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set fancheckvars = global.fancheckvars %}
// {% set min_rpm = 3500|float %}
// {% set max_consecutive_stops = 3 %}
// {% set rpm = printer['heater_fan fan_hotend'].rpm|float %}
// {% set he_target = printer.extruder.target|float %}
// {% set he_temp = printer.extruder.temperature|float %}
// {% set fan_on_temp = printer.configfile.settings['heater_fan fan_hotend'].heater_temp|float %}
// {% set he_stop_count = global.fancheckvars.he_stop_count|int %}
// {% if (he_target >= fan_on_temp) and (rpm < min_rpm) and (he_temp >= fan_on_temp) %}
// {% set _dummy = fancheckvars.update({'he_stop_count':(he_stop_count + 1)}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=fancheckvars VALUE="{fancheckvars}"
// M118 WARNING: Hot End Fan stoppage detected ({he_stop_count+1}/{max_consecutive_stops}).
// M400
// {% if printer["gcode_macro _GLOBAL_VARS"].fancheckvars.he_stop_count|int >= max_consecutive_stops-1 %}
// _FAN_STOPPAGE_ROUTINE
// {% endif %}
// {% else %}
// {% set _dummy = fancheckvars.update({'he_stop_count':0}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=fancheckvars VALUE="{fancheckvars}"
// {% endif %}
// _general_Debug msg="_HOTEND_FAN_CHECK - exiting"                                                                  ;if debug enabled display message
// printer.configfile.config['gcode_macro _HOTEND_FAN_CHECK'].description : Helper: Checks to see if the hotend fan has failed
// printer.configfile.config['gcode_macro SET_PLATE'].gcode :
// _general_Debug msg="SET_PLATE - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% if not printer.save_variables.variables.plates %}
// {action_respond_info("FLEXPLATE: No Plate Array defined. ABORDED")}
// {% else %}
// {% set plates = printer.save_variables.variables.plates %}
// {% if 'INDEX' not in params|upper %}
// {action_respond_info("FLEXPLATE: No INDEX defined, use SET_PLATE INDEX=index. ABORDED")}
// {% elif params.INDEX|int < 0 or params.INDEX|int >= plates.array|length %}
// {action_respond_info("FLEXPLATE: Index out of range [0..%d]. ABORDED" % (plates.array|length-1))}
// {% else %}
// {% set _dummy = plates.update({'index' : params.INDEX|int}) %}
// SAVE_VARIABLE VARIABLE=plates VALUE="{plates}"
// M117 Plate: {plates.array[plates.index].name}
// {action_respond_info("FLEXPLATE: Set plate: %s with offset: %.3fmm" % (
// plates.array[plates.index].name,plates.array[plates.index].offset))}
// {% if user.hw.display.ena %} UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=10 {% endif %}
// {% endif %}
// {% endif %}
// _general_Debug msg="SET_PLATE - exiting"
// printer.configfile.config['gcode_macro SET_PLATE'].description : Helper: Set a flexplate
// printer.configfile.config['gcode_macro set_bar_leds_off'].gcode :
// _general_Debug msg="set_bar_leds_off - entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set bar_effect = global.current_led_state.bar_leds %}
// SET_LED_EFFECT EFFECT={bar_effect} STOP=1
// _general_Debug msg="set_bar_leds_off - exiting"
// printer.configfile.config['gcode_macro set_bar_leds_off'].description : Helper: Turn off the progress bar LEDs by using the SET_LED_EFFECT call
// printer.configfile.config['led_effect sb_critical_error'].layers :
// strobe         1  1.5   add        (1.0,  1.0, 1.0)
// breathing      2  0     difference (0.95, 0.0, 0.0)
// static         1  0     top        (1.0,  0.0, 0.0)
// printer.configfile.config['led_effect sb_critical_error'].leds :
// neopixel:sb_leds (1-16)
// printer.configfile.config['led_effect sb_critical_error'].autostart : false
// printer.configfile.config['led_effect sb_critical_error'].frame_rate : 5
// printer.configfile.config['led_effect sb_critical_error'].run_on_error : true
// printer.configfile.config['thermistor FYSETC-HT-NTC100K-3950'].resistance2 : 12382.5
// printer.configfile.config['thermistor FYSETC-HT-NTC100K-3950'].resistance3 : 390.7
// printer.configfile.config['thermistor FYSETC-HT-NTC100K-3950'].resistance1 : 124973.4
// printer.configfile.config['thermistor FYSETC-HT-NTC100K-3950'].temperature2 : 80
// printer.configfile.config['thermistor FYSETC-HT-NTC100K-3950'].temperature3 : 220
// printer.configfile.config['thermistor FYSETC-HT-NTC100K-3950'].temperature1 : 20
// printer.configfile.config['gcode_macro PROBE_ACCURACY'].rename_existing : PROBE_ACCURACY_BASE
// printer.configfile.config['gcode_macro PROBE_ACCURACY'].description : Helper: Mag Probe; Probe Z-height accuracy at current XY position and dock/undock MagProbe
// printer.configfile.config['gcode_macro PROBE_ACCURACY'].gcode :
// _Mag_Probe_Debug msg="PROBE_ACCURACY - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% if user.hw.mag_probe.ena and printer.gcode_move.gcode_position.z < user.z_hop %}
// {action_respond_info("PROBE_ACCURACY: High must be above %.2f" % user.z_hop)}
// G90 ; absolute positioning
// G0 Z{user.z_hop} F{user.speed.z_hop} ; move head up
// {% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %} ; set back to relative
// {% endif %}
// {% if user.hw.mag_probe.ena == 'true' %}
// SAVE_GCODE_STATE NAME=STATE_PROBE_ACCURACY
// ATTACH_PROBE
// RESTORE_GCODE_STATE NAME=STATE_PROBE_ACCURACY MOVE=1 MOVE_SPEED={(user.speed.travel|float / 60)}
// {% endif %}
// PROBE_ACCURACY_BASE {rawparams}
// {% if user.hw.mag_probe.ena == 'true' and params.DOCK|default(1)|int == 1 %} ; use DOCK=0 to omit the probe docking
// DETACH_PROBE
// RESTORE_GCODE_STATE NAME=STATE_PROBE_ACCURACY MOVE=1 MOVE_SPEED={(user.speed.travel|float / 60)}
// {% endif %}
// _Mag_Probe_Debug msg="PROBE_ACCURACY - exiting"
// printer.configfile.config['gcode_macro TEST_PRESET'].gcode :
// _general_Debug msg="TEST_PRESET - entering"
// {% set PRESET = params.PRESET|default(1)|int %}
// {% set STRIP = params.STRIP|default("Chamber_Lights")|string %}
// WLED_ON STRIP={STRIP} PRESET={PRESET}
// _general_Debug msg="TEST_PRESET - exiting"
// printer.configfile.config['gcode_macro TEST_PRESET'].description : Helper: Test the ability to Set the WLED strip to a preset
// printer.configfile.config['bed_mesh COLDMESH'].tension : 0.2
// printer.configfile.config['bed_mesh COLDMESH'].min_x : 50.5
// printer.configfile.config['bed_mesh COLDMESH'].min_y : 48.0
// printer.configfile.config['bed_mesh COLDMESH'].y_count : 7
// printer.configfile.config['bed_mesh COLDMESH'].mesh_y_pps : 2
// printer.configfile.config['bed_mesh COLDMESH'].x_count : 7
// printer.configfile.config['bed_mesh COLDMESH'].points :
// -0.000000, 0.011250, 0.006250, 0.006250, 0.006250, 0.002500, 0.002500
// 0.002500, 0.011250, 0.006250, 0.005000, 0.006250, 0.002500, 0.001250
// -0.000000, 0.007500, 0.003750, 0.003750, 0.005000, 0.005000, 0.002500
// -0.001250, 0.003750, -0.001250, 0.000000, 0.003750, 0.003750, 0.003750
// -0.005000, 0.002500, -0.003750, -0.005000, -0.003750, -0.002500, -0.005000
// -0.002500, 0.002500, -0.005000, -0.005000, -0.005000, -0.003750, -0.005000
// 0.003750, 0.008750, 0.001250, -0.002500, 0.000000, 0.001250, 0.005000
// printer.configfile.config['bed_mesh COLDMESH'].version : 1
// printer.configfile.config['bed_mesh COLDMESH'].algo : bicubic
// printer.configfile.config['bed_mesh COLDMESH'].mesh_x_pps : 2
// printer.configfile.config['bed_mesh COLDMESH'].max_x : 250.48
// printer.configfile.config['bed_mesh COLDMESH'].max_y : 247.98
// printer.configfile.config['gcode_macro _SET_BAR_LEDS'].gcode :
// _general_Debug msg="_SET_BAR_LEDS - entering"
// {% set r = params.R|default(0)|float %}
// {% set g = params.G|default(0)|float %}
// {% set b = params.B|default(0)|float %}
// {% set w = params.W|default(0)|float %}
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set led = user.sb_vars.bar_led_name %}
// {% set idx = user.sb_vars.bar_idx %}
// _SET_SB_LEDS LED={led} R={r} G={g} B={b} W={w} IDX="{idx}"
// _general_Debug msg="_SET_BAR_LEDS - exiting"
// printer.configfile.config['gcode_macro _SET_BAR_LEDS'].description : Helper: Sets the color of the progress bar LEDs
// printer.configfile.config['delayed_gcode CHECK_ALL_FANS_LOOP'].gcode :
// _general_Debug msg="CHECK_ALL_FANS_LOOP - entering"
// UPDATE_DELAYED_GCODE ID=CHECK_ALL_FANS_LOOP DURATION=3   ; Invoke self (loop) every 3 seconds.
// _HOTEND_FAN_CHECK                                        ; Run hotend fan check routine
// _PART_COOLING_FAN_CHECK                                  ; Run Part Cooling fan check routine if Part Cooling fan is enabled - just check to see if fan is not stopped
// _general_Debug msg="CHECK_ALL_FANS_LOOP - exiting"
// printer.configfile.config['delayed_gcode probe_accuracy_loop'].gcode :
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set tmacro = global.tmacro %}
// {% if global.tmacro.state == 'start' %}
// { action_respond_info('TEST_PROBE_ACCURACY: START') }
// {% set _dummy = tmacro.update({'state':'start_idle' }) %}
// {% set _dummy = tmacro.update({'next_state':'start_idle_done'}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=tmacro VALUE="{tmacro}"
// UPDATE_DELAYED_GCODE ID=probe_accuracy_set_next_state DURATION={ global.tmacro.start_idle_minutes|int * 60 }
// {% elif global.tmacro.state == 'start_idle_done' %}
// {% if global.tmacro.bed_temp >= 0 %}
// M140 S{ global.tmacro.bed_temp }
// { action_respond_info('TEST_PROBE_ACCURACY: BED HEATING TO %s' % global.tmacro.bed_temp) }
// {% set _dummy = tmacro.update({'state':'bed_heating' }) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=tmacro VALUE="{tmacro}"
// {% else %}
// {% set _dummy = tmacro.update({'state':'bed_soaked' }) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=tmacro VALUE="{tmacro}"
// {% endif %}
// {% elif global.tmacro.state == 'bed_heating' %}
// {% if printer.heater_bed.temperature >= global.tmacro.bed_temp %}
// { action_respond_info('TEST_PROBE_ACCURACY: BED HEATED TO %s' % global.tmacro.bed_temp) }
// {% set _dummy = tmacro.update({'state':'bed_soaking' }) %}
// {% set _dummy = tmacro.update({'next_state':'bed_soaked'}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=tmacro VALUE="{tmacro}"
// UPDATE_DELAYED_GCODE ID=probe_accuracy_set_next_state DURATION={ global.tmacro.bed_soak_minutes|int * 60 }
// {% endif %}
// {% elif global.tmacro.state == 'bed_soaked' %}
// {% if global.tmacro.bed_temp >= 0 %}
// { action_respond_info('TEST_PROBE_ACCURACY: BED SOAKED') }
// {% endif %}
// {% if global.tmacro.extruder_temp >= 0 %}
// M104 S{ global.tmacro.extruder_temp }
// { action_respond_info('TEST_PROBE_ACCURACY: EXTRUDER HEATING TO %s' % global.tmacro.extruder_temp) }
// {% set _dummy = tmacro.update({'state':'extruder_heating' }) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=tmacro VALUE="{tmacro}"
// {% else %}
// {% set _dummy = tmacro.update({'state':'extruder_soaked' }) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=tmacro VALUE="{tmacro}"
// {% endif %}
// {% elif global.tmacro.state == 'extruder_heating' %}
// {% if printer.extruder.temperature >= global.tmacro.extruder_temp %}
// { action_respond_info('TEST_PROBE_ACCURACY: EXTRUDER HEATED TO %s' % global.tmacro.extruder_temp) }
// {% set _dummy = tmacro.update({'state':'extruder_soaking' }) %}
// {% set _dummy = tmacro.update({'next_state':'extruder_soaked' }) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=tmacro VALUE="{tmacro}"
// UPDATE_DELAYED_GCODE ID=probe_accuracy_set_next_state DURATION={ global.tmacro.extruder_soak_minutes|int * 60 }
// {% endif %}
// {% elif global.tmacro.state == 'extruder_soaked' %}
// {% if global.tmacro.extruder_temp >= 0 %}
// { action_respond_info('TEST_PROBE_ACCURACY: EXTRUDER SOAKED') }
// {% endif %}
// TURN_OFF_HEATERS
// {% set _dummy = tmacro.update({'state':'end_idle' }) %}
// {% set _dummy = tmacro.update({'next_state':'done' }) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=tmacro VALUE="{tmacro}"
// UPDATE_DELAYED_GCODE ID=probe_accuracy_set_next_state DURATION={ global.tmacro.end_idle_minutes|int * 60 }
// {% elif global.tmacro.state == 'done' %}
// { action_respond_info('TEST_PROBE_ACCURACY: DONE') }
// G90
// G1 Z30
// UPDATE_DELAYED_GCODE ID=probe_accuracy_loop DURATION=0
// {% endif %}
// {% if global.tmacro.state != 'done' %}
// M105
// ATTACH_PROBE_LOCK
// _PROBE_ACCURACY
// {% if global.tmacro.dwell_lift_z >= 0 %}
// G1 Z{ global.tmacro.dwell_lift_z }
// {% endif %}
// M400
// UPDATE_DELAYED_GCODE ID=probe_accuracy_loop DURATION={ global.tmacro.dwell_seconds }
// {% endif %}
// printer.configfile.config['gcode_macro _BedFansFastPlus_02'].gcode :
// _general_Debug msg="_BedFansFastPlus_02 - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set FAST02 = (user.bedfanvars.chamber_fast|float) %}
// SET_FAN_SPEED FAN=Bedfan_Left SPEED={FAST02}                                 ;set fan speed
// SET_FAN_SPEED FAN=Bedfan_Right SPEED={FAST02}                                ;set fan speed
// _general_Debug msg="_BedFansFastPlus_02 - exiting"
// printer.configfile.config['gcode_macro _BedFansFastPlus_02'].description : Helper: Runs the bed fans at a fast speed as specified by user.bedfanvars.chamber_fast
// printer.configfile.config['gcode_macro SET_LOGO_LEDS_OFF'].gcode :
// _general_Debug msg="set_logo_leds_off - entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set logo_effect = global.current_led_state.logo_leds %}
// SET_LED_EFFECT EFFECT={logo_effect} STOP=1
// _general_Debug msg="set_logo_leds_off - exiting"
// printer.configfile.config['gcode_macro SET_LOGO_LEDS_OFF'].description : Helper: Turn off the stealthburner LOGO leds by using the SET_LED_EFFECT call
// printer.configfile.config['gcode_macro _POWER_ON_IR_PSU'].gcode :
// _general_Debug msg="_POWER_ON_IR_PSU - entering"
// {action_call_remote_method("set_device_power",
// device="tasmota_plug_IR",
// state="on")}
// _general_Debug msg="_POWER_ON_IR_PSU - exiting"
// printer.configfile.config['gcode_macro _POWER_ON_IR_PSU'].description : Helper: Turn on the Tasmota IR_PSU smart plug
// printer.configfile.config['gcode_macro _SET_PLATE_OFFSET'].gcode :
// _general_Debug msg="_SET_PLATE_OFFSET - entering"
// {% if not printer.save_variables.variables.plates %}
// {action_respond_info("FLEXPLATE: No Plate Array defined. ABORDED")}
// {% else %}
// {% set plates = printer.save_variables.variables.plates %}
// SET_GCODE_OFFSET Z_ADJUST={plates.array[plates.index].offset} MOVE={params.MOVE|default(0)}
// {% endif %}
// _general_Debug msg="_SET_PLATE_OFFSET - exiting"
// printer.configfile.config['gcode_macro _SET_PLATE_OFFSET'].description : Helper: Apply the z-offset of the active flexplate
// printer.configfile.config['gcode_macro _WAIT_Start'].gcode :
// _general_Debug msg="_WAIT_Start - entering"
// {% set MINUTES = params.MINUTES|default(0.5)|float %}
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set wait_variable = global.wait_variable %}
// {% set duration = global.wait_variable.duration|float %}
// {% set count = (MINUTES * 60.0) / duration %}
// {% set _dummy = wait_variable.update({'waiting':True}) %}
// {% set _dummy = wait_variable.update({'count':count}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=wait_variable VALUE="{wait_variable}"
// UPDATE_DELAYED_GCODE ID=WAIT_Delayed DURATION={duration}
// _general_Debug msg="_WAIT_Start - exiting"
// printer.configfile.config['gcode_macro _WAIT_Start'].description : Helper: a non blocking wait (this kicks off the wait loop)
// printer.configfile.config['gcode_macro REMOVE_PLATE'].gcode :
// _general_Debug msg="REMOVE_PLATE - entering"
// {% if not printer.save_variables.variables.plates %}
// {action_respond_info("FLEXPLATE: No Plate Array defined. ABORDED")}
// {% else %}
// {% set plates = printer.save_variables.variables.plates %}
// {% if 'INDEX' not in params|upper %}
// {action_respond_info("FLEXPLATE: No INDEX defined, use REMOVE_PLATE INDEX=index. ABORDED")}
// {% elif plates.array|length == 1 or params.INDEX|int == plates.index %}
// {action_respond_info("FLEXPLATE: Last or active plate can not be removed. ABORDED")}
// {% elif params.INDEX|int < 0 or params.INDEX|int >= plates.array|length %}
// {action_respond_info("FLEXPLATE: Index out of range [0..%d]. ABORDED" % (plates.array|length-1))}
// {% else %}
// {action_respond_info("FLEXPLATE: Remove plate with INDEX %d from list " % params.INDEX|int)}
// {% set _dummy = plates.array.pop(params.INDEX|int) %}
// SAVE_VARIABLE VARIABLE=plates VALUE="{plates}"
// {% endif %}
// {% endif %}
// _general_Debug msg="REMOVE_PLATE - exiting"
// printer.configfile.config['gcode_macro REMOVE_PLATE'].description : Helper: Remove a flexplate from the list
// printer.configfile.config['gcode_macro _LIGHTS_FLICKER'].gcode :
// _general_Debug msg="_LIGHTS_FLICKER - entering"
// {% set LEDTimes = [10, 20, 20, 240, 20, 40, 20, 100, 20, 20, 20, 260, 80, 20, 240, 60, 160, 20, 240, 20, 1000, 20, 20, 40, 100, 20, 274, 340, 860, 20, 1400, 20, 60, 20] %}
// {% set R = 255/255 %}
// {% set G = 131/255 %}
// {% set B = 156/255 %}
// {% set STRIP = params.STRIP|default('Chamber_Lights')|string %}
// {% for toggletime in LEDTimes %}
// {% set ledTime = toggletime|string %}
// {% set loopCount = loop.index %}
// {% if loopCount is divisibleby 2 %}
// SET_WLED STRIP="Chamber_Lights" RED={R} GREEN={G} BLUE={B} TRANSMIT=1
// SET_WLED STRIP="Bottom_Lights" RED={R} GREEN={G} BLUE={B} TRANSMIT=1
// G4 P{ledTime|int}
// {% else %}
// SET_WLED STRIP="Chamber_Lights" RED=0 GREEN=0 BLUE=0 TRANSMIT=1
// SET_WLED STRIP="Bottom_Lights" RED=0 GREEN=0 BLUE=0 TRANSMIT=1
// G4 P{ledTime|int}
// {% endif %}
// {% endfor %}
// M117 Boot up is complete
// _general_Debug msg="_LIGHTS_FLICKER - exiting"
// printer.configfile.config['gcode_macro _LIGHTS_FLICKER'].description : Helper: Make the RGBW LEDs of the chamber lights flicker; Visual effect to show the current state of the printer (boot state)
// printer.configfile.config['fan_generic filter'].cycle_time : 1.0
// printer.configfile.config['fan_generic filter'].pin : PA8
// printer.configfile.config['fan_generic filter'].off_below : 0.10
// printer.configfile.config['fan_generic filter'].max_power : 1.0
// printer.configfile.config['fan_generic filter'].kick_start_time : 0.5
// printer.configfile.config['fan_generic filter'].hardware_pwm : false
// printer.configfile.config.stepper_z2.full_steps_per_rotation : 200
// printer.configfile.config.stepper_z2.rotation_distance : 40
// printer.configfile.config.stepper_z2.gear_ratio : 80:16
// printer.configfile.config.stepper_z2.step_pin : PE2
// printer.configfile.config.stepper_z2.microsteps : 32
// printer.configfile.config.stepper_z2.dir_pin : PE3
// printer.configfile.config.stepper_z2.enable_pin : !PD4
// printer.configfile.config['gcode_macro _set_leds'].gcode :
// _general_Debug msg="_set_led - entering"
// {% if printer.extruder.target == 0 %}
// {% else %}
// {% if printer.idle_timeout.state == "Printing" and progressbar_enabled == 1 %}
// {% set perc = printer.display_status.progress %}
// {% set numleds = printer.configfile.config["neopixel progress_bar_leds"].chain_count|int %}
// {% set last = (perc|float * numleds|float)|int %}
// {% for n in range(numleds) %}
// {% if n < last %}
// SET_LED LED=progress_bar_leds RED=0 GREEN=0 BLUE=1 TRANSMIT=0 index={ n + 1|int }
// {% else %}
// SET_LED LED=progress_bar_leds RED=0.3 GREEN=0.3 BLUE=0.3 TRANSMIT=0 index={ n + 1|int }
// {% endif %}
// {% endfor %}
// SET_LED LED=progress_bar_leds RED=0 GREEN=0 BLUE=1 TRANSMIT=1 INDEX={ last + 1|int }
// {% endif %}
// {% endif %}
// _general_Debug msg="_set_led - exiting"
// printer.configfile.config['gcode_macro _set_leds'].description : Helper: show the progress of the print job on the progress bar
// printer.configfile.config['thermistor Trianglelab-NTC100K-B3950'].resistance2 : 1366.2
// printer.configfile.config['thermistor Trianglelab-NTC100K-B3950'].resistance3 : 168.6
// printer.configfile.config['thermistor Trianglelab-NTC100K-B3950'].resistance1 : 103180
// printer.configfile.config['thermistor Trianglelab-NTC100K-B3950'].temperature2 : 150
// printer.configfile.config['thermistor Trianglelab-NTC100K-B3950'].temperature3 : 250
// printer.configfile.config['thermistor Trianglelab-NTC100K-B3950'].temperature1 : 25
// printer.configfile.config['led_effect sb_bar_cleaning'].layers :
// breathing  3 1 top (0.0, 0.02, 0.5)
// printer.configfile.config['led_effect sb_bar_cleaning'].leds :
// neopixel:progress_bar_leds (1-33)
// printer.configfile.config['led_effect sb_bar_cleaning'].autostart : false
// printer.configfile.config['led_effect sb_bar_cleaning'].frame_rate : 5
// printer.configfile.config['gcode_macro ENABLEFILAMENTSENSOR'].gcode :
// _general_Debug msg="ENABLEFILAMENTSENSOR - entering"
// SET_FILAMENT_SENSOR SENSOR=runout ENABLE=1              ; enable the filament sensor
// _general_Debug msg="ENABLEFILAMENTSENSOR - exiting"
// printer.configfile.config['gcode_macro ENABLEFILAMENTSENSOR'].description : Helper: Enables the Filament sensor named "runout"
// printer.configfile.config['gcode_macro _RUNOUT_INFO'].gcode :
// _general_Debug msg="_RUNOUT_INFO - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set out = ['RUNOUT: ' + user.hw.runout.type|capitalize + ' Sensor'] if user.hw.runout.sensor
// else ['RUNOUT: Stored in file']                                if user.hw.runout.type == 'file'
// else ['RUNOUT: Not monitored'] %}
// {% set enable = printer["filament_" + user.hw.runout.type + "_sensor runout"].enabled if user.hw.runout.sensor
// else False %}
// {% set _dummy = out.append('Enabled: ' + enable|lower) if user.hw.runout.sensor %}
// {% set detected = printer["filament_" + user.hw.runout.type + "_sensor runout"].filament_detected if enable
// else printer.save_variables.variables.filament_loaded                                if user.hw.runout.type == 'file' %}
// {% set _dummy = out.append('Detect Filament: ' + detected|lower) if detected is defined %}
// {action_respond_info(out|join("\n"))}
// _general_Debug msg="_RUNOUT_INFO - exiting"
// printer.configfile.config['gcode_macro _RUNOUT_INFO'].description : Helper: Print runout sensor status
// printer.configfile.config['thermistor CMFB103F3950FANT'].resistance2 : 5309.0
// printer.configfile.config['thermistor CMFB103F3950FANT'].resistance3 : 1228.0
// printer.configfile.config['thermistor CMFB103F3950FANT'].resistance1 : 32116.0
// printer.configfile.config['thermistor CMFB103F3950FANT'].temperature2 : 40.0
// printer.configfile.config['thermistor CMFB103F3950FANT'].temperature3 : 80.0
// printer.configfile.config['thermistor CMFB103F3950FANT'].temperature1 : 0.0
// printer.configfile.config['gcode_macro _do_error_if_probe_deployed'].gcode :
// {% if not printer.probe.last_query %}
// {action_raise_error("ERROR: Probe is still deployed, please remove and return to dock.")}
// {% else %}
// M118 Euclid probe has been stowed.
// {% endif %}
// printer.configfile.config['gcode_macro _do_error_if_probe_deployed'].description : Helper: Display error message if probe is not docked when it is supposed to be in its docked
// printer.configfile.config['gcode_macro _FILTER_INFO'].gcode :
// _general_Debug msg="_FILTER_INFO - entering"
// {action_respond_info("Filter fan %s" % 'on' if printer['fan_generic filter'].speed|float > 0.0 else 'off')}
// _general_Debug msg="_FILTER_INFO - exiting"
// printer.configfile.config['gcode_macro _FILTER_INFO'].description : Helper: Print Nevermore speed
// printer.configfile.config['fan_generic Bedfan_Left'].off_below : 0.13
// printer.configfile.config['fan_generic Bedfan_Left'].cycle_time : 1.0
// printer.configfile.config['fan_generic Bedfan_Left'].pin : PE5
// printer.configfile.config['fan_generic Bedfan_Left'].kick_start_time : 1.0
// printer.configfile.config['gcode_macro _WAIT_Loop'].gcode :
// _general_Debug msg="_WAIT_Loop - entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set count = global.wait_variable.count|float %}
// {% set duration =  global.wait_variable.duration|float %}
// STATUS_BUSY
// SET_NOZZLE_LEDS_OFF
// UPDATE_DELAYED_GCODE ID=WAIT_Delayed DURATION={duration}
// {% if  count % 2 == 0 %}
// SET_LED LED=sb_leds INDEX=17 RED=.5 GREEN=0 BLUE=0
// SET_LED LED=sb_leds INDEX=18 RED=0 GREEN=0 BLUE=.5
// {% else %}
// SET_LED LED=sb_leds INDEX=17 RED=0 GREEN=0 BLUE=.5
// SET_LED LED=sb_leds INDEX=18 RED=.5 GREEN=0 BLUE=0
// {% endif %}
// _general_Debug msg="_WAIT_Loop - exiting"
// printer.configfile.config['gcode_macro _WAIT_Loop'].description : Helper: a non blocking wait (this is the wait loop)
// printer.configfile.config['gcode_macro TEST_CONTROL'].gcode :
// _general_Debug msg="TEST_CONTROL - entering"
// {% set BRIGHTNESS = params.BRIGHTNESS|default(-1)|int %}
// {% set INTENSITY = params.INTENSITY|default(-1)|int %}
// {% set SPEED = params.SPEED|default(-1)|int %}
// {% set STRIP = params.STRIP|default("Chamber_Lights")|string %}
// WLED_CONTROL STRIP={STRIP} BRIGHTNESS={BRIGHTNESS} INTENSITY={INTENSITY} SPEED={SPEED}
// _general_Debug msg="TEST_CONTROL - exiting"
// printer.configfile.config['gcode_macro TEST_CONTROL'].description : Helper: Test the ability to control WLED strip's brightness, intensity and speed
// printer.configfile.config['gcode_macro _SET_NOZZLE_LEDS'].gcode :
// _general_Debug msg="_SET_NOZZLE_LEDS - entering"
// {% set r = params.R|default(0)|float %}
// {% set g = params.G|default(0)|float %}
// {% set b = params.B|default(0)|float %}
// {% set w = params.W|default(0)|float %}
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set led = user.sb_vars.nozzle_led_name %}
// {% set idx = user.sb_vars.nozzle_idx %}
// _SET_SB_LEDS LED={led} R={r} G={g} B={b} W={w} IDX="{idx}"
// _general_Debug msg="_SET_NOZZLE_LEDS - exiting"
// printer.configfile.config['gcode_macro _SET_NOZZLE_LEDS'].description : Helper: Sets the color of the stealthburner NOZZLE leds
// printer.configfile.config['gcode_macro M401'].gcode :
// _MAG_PROBE ACTION='get_status' RESPOND=0
// {% set Z_POS = printer.toolhead.position.z %}
// {% if printer.probe.last_query %}
// M118 Fetching Euclid Probe.
// _CG28
// G90
// {% if Z_POS < 15 %} G0 Z15 {% endif %}
// _PROBE_DEPLOY
// {% else %}
// M118 ?!Attempted to Deploy probe but it is already attached.
// {% endif %}
// printer.configfile.config['gcode_macro M401'].description : Helper: Euclid Probe; Attach (Deploy) the Euclid probe
// printer.configfile.config['gcode_macro M402'].gcode :
// DOCK_PROBE
// printer.configfile.config['gcode_macro M402'].description : Helper: Euclid Probe;  Docks (Stows) the Euclid probe
// printer.configfile.config['gcode_macro HOTMESH'].gcode :
// _general_Debug msg="HOTMESH - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// CLEAR_PAUSE
// {% if printer.idle_timeout.state == "Printing" or printer.pause_resume.is_paused %}
// {action_respond_info("Cannot do that while printing")}
// {% else %}
// {% set MeshToApply = user.filament.profile.MeshToApply|default() %}
// {% set MeshName = params.NAME|default(MeshToApply) %}
// M118 Will be saving as {MeshName}
// {% if MeshName == "INSITU" or MeshToApply == "NONE" %}
// {action_respond_info("Mesh requires a proper name, specify via cli or change printer.cfg MeshToApply definition.")}
// {% else %}
// {% set defaultWN = user.filament.profile.defaultWarmNozzle|float %}
// {% set defaultTB = user.filament.profile.defaultTempBed|float %}
// {% set defaultENCLOSURE = user.filament.profile.defaultEnclosure|float %}
// {% set defaultSOAK = user.filament.profile.HotmeshSoakMinutes|float %}
// {% set BED_TEMP = params.BED_TEMP|default(defaultTB)|float %}
// {% set ENCLOSURE_TEMP = params.ENCLOSURE_TEMP|default(defaultENCLOSURE)|float %}
// {% set SOAK = params.SOAK|default(defaultSOAK)|float %}
// STATUS_HEATING
// M141 S{ENCLOSURE_TEMP}                                            ;set chamber temperature for Exhaust fan and Bed fans
// M140 S{BED_TEMP}
// M104 S{defaultWN}
// G90
// SET_GCODE_OFFSET Z=0.0
// M117 Performing initial homing.
// STATUS_HOMING
// {% if user.filament.profile.QGLbeforeSoakMesh|default() == true %}
// G32
// PARK_Center
// {% else %}
// G28
// {% endif %}
// M117 Bringing bed to temperature.
// M190 S{BED_TEMP}
// _HEAT_WAIT MINUTES={SOAK} MSG="Pre BED_MESH_CALIBRATE Soaking..."
// STATUS_MESHING
// M117 Performing hot level.
// CURRENT_HIGH
// M400
// QUAD_GANTRY_LEVEL ; this does a ATTACH_PROBE, QGL, DOCK_PROBE
// CLEAN_NOZZLE
// ATTACH_PROBE_LOCK
// G28 Z
// CALIBRATE_Z_BASE
// M117 Performing heated bed mesh calibration.
// BED_MESH_PROFILE REMOVE={MeshName}
// BED_MESH_CALIBRATE PRINT_MIN={params.PRINT_MIN} PRINT_MAX={params.PRINT_MAX}
// BED_MESH_PROFILE SAVE={MeshName}
// BED_MESH_OUTPUT PGP=1
// M118 Bed mesh calibration completed.
// TURN_OFF_HEATERS
// CURRENT_NORMAL
// DOCK_PROBE_UNLOCK
// PARK_UpperRight
// M18 X Y E
// STATUS_READY
// M117 Finished mesh, saved as {MeshName}.
// SAVE_CONFIG
// {% endif %}
// {% endif %}
// _general_Debug msg="HOTMESH - exiting"
// printer.configfile.config['gcode_macro HOTMESH'].description : Helper: Performs a heat-soaked bed-mesh
// printer.configfile.config['gcode_macro CASELIGHT_DIM'].gcode :
// _general_Debug msg="CASELIGHT_DIM - entering"
// SET_PIN PIN=caselight VALUE=0.5
// _general_Debug msg="CASELIGHT_DIM - exiting"
// printer.configfile.config['gcode_macro CASELIGHT_DIM'].description : Helper: DIM the 24V white CASE Lights
// printer.configfile.config['gcode_macro IS_PROBE_ATTACHED_AT_BOOT'].gcode :
// _MAG_PROBE ACTION=GET_STATUS RESPOND=0
// OUTPUT_PROBE_MESSAGE
// printer.configfile.config['gcode_macro IS_PROBE_ATTACHED_AT_BOOT'].description : Helper: This checks the state of the Euclid probe on system boot and reports a message to the UI console
// printer.configfile.config['gcode_macro _POWER_ON_Pi_PSU'].gcode :
// _general_Debug msg="_POWER_ON_Pi_PSU - entering"
// {action_call_remote_method("set_device_power",
// device="tasmota_plug_Pi",
// state="on")}
// _general_Debug msg="_POWER_ON_Pi_PSU - exiting"
// printer.configfile.config['gcode_macro _POWER_ON_Pi_PSU'].description : Helper: Turn on the Tasmota Pi_PSU smart plug
// printer.configfile.config['gcode_macro LOG_INFO'].gcode :
// _general_Debug msg="LOG_INFO - entering"
// {action_respond_info(params.MESSAGE)}
// _general_Debug msg="LOG_INFO - exiting"
// printer.configfile.config['gcode_macro LOG_INFO'].description : Helper: Send a message to the Klipper screen and the UI console
// printer.configfile.config['gcode_macro CHK_HEAT_EXPANSION'].gcode :
// BED_MESH_CLEAR
// CURRENT_HIGH
// G28
// ATTACH_PROBE_LOCK
// _QUAD_GANTRY_LEVEL
// DOCK_PROBE_UNLOCK
// G28 Z
// G90
// {% set X_MID = printer.configfile.config["stepper_x"]["position_max"]|float / 2.0 %}
// {% set Y_MID = printer.configfile.config["stepper_y"]["position_max"]|float / 2.0 %}
// G0 X{X_MID} Y{Y_MID} F4000
// {% for LOOP in range(0, 9) %}
// M117 Testing... {i}.
// _TEST_PROBE0 TEST_LOOP={LOOP}
// {% endfor %}
// M140 S110
// {% for LOOP in range(10, 1000) %}
// M117 Testing... {i}.
// _TEST_PROBE0 TEST_LOOP={LOOP}
// {% endfor %}
// TURN_OFF_HEATERS
// CURRENT_NORMAL
// G90
// M402
// _COOL_WAIT MINUTES={printer["gcode_macro globalvariables"].postprintcool|float}
// PARK_UpperRight
// M18 X Y E
// printer.configfile.config['gcode_macro CHK_HEAT_EXPANSION'].description : Helper: CHK_HEAT_EXPANSION macro; continuously records the z-height during a heat-soak cycle
// printer.configfile.config['gcode_macro LIST_PLATES'].gcode :
// _general_Debug msg="LIST_PLATES - entering"
// {% if not printer.save_variables.variables.plates %}
// {action_respond_info("FLEXPLATE: No Plate Array defined. ABORDED")}
// {% else %}
// {% set plates = printer.save_variables.variables.plates %}
// {% set out = ["FLEXPLATE: Defined Plates"] %}
// {% for elem in range(plates.array|length) %}
// {% set _dummy = out.append("INDEX: %d -> %s -> offset: %.3fmm" %
// (elem, plates.array[elem].name, plates.array[elem].offset)) %}
// {% endfor %}
// {% set  _dummy = out.append("\n Active Plate: %s" % plates.array[plates.index].name) %}
// {action_respond_info(out|join("\n"))}
// {% endif %}
// _general_Debug msg="LIST_PLATES - exiting"
// printer.configfile.config['gcode_macro LIST_PLATES'].description : Helper: List all flexplates
// printer.configfile.config['gcode_macro _magprobe_status_busy'].gcode :
// {% if printer['gcode_macro status_busy'] is defined %}
// _Mag_Probe_Debug msg="_magprobe_status_busy activating the LED STATUS_BUSY"
// STATUS_BUSY
// {% endif %}
// printer.configfile.config['gcode_macro _magprobe_status_busy'].description : Helper: Mag Probe, enable STATUS_BUSY LED state
// printer.configfile.config['fan_generic Bedfan_Right'].off_below : 0.13
// printer.configfile.config['fan_generic Bedfan_Right'].cycle_time : 1.0
// printer.configfile.config['fan_generic Bedfan_Right'].pin : PD12
// printer.configfile.config['fan_generic Bedfan_Right'].kick_start_time : 1.0
// printer.configfile.config['gcode_macro _HOME_Z'].gcode :
// _Mag_Probe_Debug msg="_HOME_Z - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set _home_z = global._home_z %}
// ; use -10 as default to insure it error out in case the variable is not existing
// {% set z_endstop = user.homing.z_endstop|default({'x':-10,'y':-10,'z':0, 'hop':0}) %}
// {% if user.hw.mag_probe.ena %}
// {% set probe = user.mag_probe.state|default('unknown')|lower %} ; get probe state
// {% set error = "run \"_MAG_PROBE ACTION=GET_STATUS\"" if probe == 'unknown'
// else "last dock or undock failed"           if probe == 'error'
// else "not valid"                            if probe is not in ['docked','attached']
// else "" %}
// {% if error|length > 0 %}
// {action_raise_error("Home&Probe: MagProbe state %s %s" % (error,probe|upper))}
// {% endif %}
// {% endif %}
// {% if user.hw.mag_probe.ena and probe == 'attached' %}
// {action_respond_info("Home&Probe: Probe docked, remove probe first")}
// DETACH_PROBE                                          ; detach probe
// {% endif %}
// _SET_Z_CURRENT VAL=HOME                                 ; reduce Z current
// G90                                                     ; absolute position
// G0 X{z_endstop.x} Y{z_endstop.y} F{user.speed.travel}   ; move to endstop position
// G28 Z                                                   ; home Z
// G0 Z{z_endstop.z} F{user.speed.z_hop/3}                 ; lift toolhead to stop pressing on the pin
// {% if _home_z.calibrate_z_next %}
// {% set _dummy = _home_z.update({'calibrate_z_next': False }) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=_home_z VALUE="{_home_z}"
// {% else %}
// _SET_Z_CURRENT                                        ; set Z current back to cfg value
// G0 Z{user.z_hop} F{user.speed.z_hop}
// {% endif %}
// {% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %} ; set it back to relative
// _Mag_Probe_Debug msg="_HOME_Z - exiting"
// printer.configfile.config['gcode_macro _HOME_Z'].description : Helper: z homing
// printer.configfile.config['delayed_gcode _INIT'].gcode :
// _general_Debug msg="_INIT - entering"
// _GLOBAL_VARS
// _USER_VARIABLE
// _CHECK_CONSITENT
// _EXECUTE_AT_INIT
// _general_Debug msg="_INIT - exiting"
// printer.configfile.config['delayed_gcode _INIT'].initial_duration : 1
// printer.configfile.config['gcode_macro BELT_TEST'].gcode :
// _general_Debug msg="BELT_TEST - enter"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// _CG28                                                 ; home if needed
// TURN_OFF_HEATERS                                      ; turn off heaters
// M107                                                  ; turn off fan
// {% if user.hw.chamber.fan %} M141 {% endif %}         ; exhaust fan off
// {% if user.hw.filter.ena %} _SET_FILTER {% endif %}   ; filter off
// _PRINT_AR T="BELT TEST: Noise values, check if sensor is installed"
// MEASURE_AXES_NOISE                                    ; get noise value in log
// _PRINT_AR T="BELT TEST: Resonance Tests starting ..."
// _PRINT_AR T="BELT TEST: Mesasure B belt"
// TEST_RESONANCES AXIS=1,1 OUTPUT=raw_data NAME=b
// _PRINT_AR T="BELT TEST: Mesasure A belt"
// TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=a
// _PRINT_AR T="BELT TEST: Resonance Tests done"
// _PRINT_AR T="BELT TEST: Generate graph in backround"
// RUN_SHELL_COMMAND CMD=plot_graph PARAMS=BELT
// _general_Debug msg="BELT_TEST - exit"
// printer.configfile.config['gcode_macro BELT_TEST'].description : Helper: Run resonance test to analyze belts
// printer.configfile.config['gcode_macro WAIT_Quit'].gcode :
// _general_Debug msg="WAIT_Quit- entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set wait_variable = global.wait_variable %}
// {% if global.wait_variable.waiting %}
// M118 STOPPING LOOP, SETTING COUNT TO 0
// {% set _dummy = wait_variable.update({'count':0.0}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=wait_variable VALUE="{wait_variable}"
// UPDATE_DELAYED_GCODE ID=WAIT_Delayed DURATION=1
// {% else %}
// M118 Not in waiting state, nothing to do.
// {% endif %}
// _general_Debug msg="WAIT_Quit- exiting"
// printer.configfile.config['gcode_macro WAIT_Quit'].description : Helper: this macro allows the user to externally EXIT the non-blocking wait loop before it reaches the its normal end
// printer.configfile.config['gcode_macro DUMP_PRINT_AREA_LIMITS'].gcode :
// {% set min = printer.toolhead.axis_minimum %}
// {% set max = printer.toolhead.axis_maximum %}
// {% set probe_offset = {'x' : printer.configfile.settings.probe.x_offset,
// 'y' : printer.configfile.settings.probe.y_offset} %}
// {% set probe_area = {'min' : {'x' : [min.x,(min.x-probe_offset.x)]|max,
// 'y' : [min.y,(min.y-probe_offset.y)]|max},
// 'max' : {'x' : [max.x,(max.x-probe_offset.x)]|min,
// 'y' : [max.y,(max.y-probe_offset.y)]|min}} %}
// {action_respond_info("Print Volume Limits:
// Min X:%7.1f, Y:%7.1f, Z:%7.1f
// Max X:%7.1f, Y:%7.1f, Z:%7.1f
// Probe Area Limits:
// Min X:%7.1f, Y:%7.1f
// Max X:%7.1f, Y:%7.1f" %
// (min.x,min.y,min.z,max.x,max.y,max.z,probe_area.min.x,probe_area.min.y, probe_area.max.x,probe_area.max.y))}
// printer.configfile.config['gcode_macro DUMP_PRINT_AREA_LIMITS'].description : Helper: Debug: Print information about print volume and probable area
// printer.configfile.config['gcode_macro DETACH_PROBE'].gcode :
// _Mag_Probe_Debug msg="DETACH_PROBE - entering"
// _MAG_PROBE ACTION=DOCK
// _MAG_PROBE ACTION=CHECK_DOCK
// _Mag_Probe_Debug msg="DETACH_PROBE - exiting"
// printer.configfile.config['gcode_macro DETACH_PROBE'].description : Helper: Mag Probe; Dock the MagProbe if not already docked
// printer.configfile.config['led_effect sb_fan_heating'].layers :
// chase  0.3  2 add (1.00,0.0,0),(0.00,0.00,0.0)
// printer.configfile.config['led_effect sb_fan_heating'].leds :
// neopixel:sb_leds (1,3,7,8,6,2)
// printer.configfile.config['led_effect sb_fan_heating'].autostart : false
// printer.configfile.config['led_effect sb_fan_heating'].frame_rate : 5
// printer.configfile.config['gcode_macro ZDOWN'].gcode :
// _general_Debug msg="ZDOWN- entering"
// SET_GCODE_OFFSET Z_ADJUST=-0.01 MOVE=1
// _general_Debug msg="ZDOWN- exiting"
// printer.configfile.config['gcode_macro ZDOWN'].description : Helper: Helps in setting SET_GCODE_OFFSET to get the perfect squish; this moves z -0.01mm
// printer.configfile.config['led_effect sb_nozzle_busy'].layers :
// breathing  3 1 top (1,0,0)
// printer.configfile.config['led_effect sb_nozzle_busy'].leds :
// neopixel:sb_leds (17,18)
// printer.configfile.config['led_effect sb_nozzle_busy'].autostart : false
// printer.configfile.config['led_effect sb_nozzle_busy'].frame_rate : 2
// printer.configfile.config['temperature_fan chamber'].control : watermark
// printer.configfile.config['temperature_fan chamber'].rtd_nominal_r : 100
// printer.configfile.config['temperature_fan chamber'].pin : tinyfan: FAN4_PWM
// printer.configfile.config['temperature_fan chamber'].max_delta : 0.5
// printer.configfile.config['temperature_fan chamber'].spi_bus : spi1
// printer.configfile.config['temperature_fan chamber'].sensor_type : MAX31865
// printer.configfile.config['temperature_fan chamber'].hardware_pwm : true
// printer.configfile.config['temperature_fan chamber'].min_temp : 0
// printer.configfile.config['temperature_fan chamber'].gcode_id : ChamberFan-ToolH
// printer.configfile.config['temperature_fan chamber'].target_temp : 35
// printer.configfile.config['temperature_fan chamber'].min_speed : 0.3
// printer.configfile.config['temperature_fan chamber'].rtd_num_of_wires : 4
// printer.configfile.config['temperature_fan chamber'].off_below : 0.1
// printer.configfile.config['temperature_fan chamber'].rtd_reference_r : 430
// printer.configfile.config['temperature_fan chamber'].max_speed : 1.0
// printer.configfile.config['temperature_fan chamber'].sensor_pin : EBBCan: PA4
// printer.configfile.config['temperature_fan chamber'].tachometer_pin : ^tinyfan:FAN4_RPM
// printer.configfile.config['temperature_fan chamber'].cycle_time : 0.00004
// printer.configfile.config['temperature_fan chamber'].shutdown_speed : 0.0
// printer.configfile.config['temperature_fan chamber'].max_power : 1.0
// printer.configfile.config['temperature_fan chamber'].spi_speed : 2000000
// printer.configfile.config['temperature_fan chamber'].max_temp : 70
// printer.configfile.config['led_effect sb_logo_cleaning'].layers :
// breathing  3 1 top (0.0, 0.02, 0.5)
// printer.configfile.config['led_effect sb_logo_cleaning'].leds :
// neopixel:sb_leds (9-16)
// printer.configfile.config['led_effect sb_logo_cleaning'].autostart : false
// printer.configfile.config['led_effect sb_logo_cleaning'].frame_rate : 5
// printer.configfile.config['gcode_macro _CHECK_STATE'].gcode :
// _Mag_Probe_Debug msg="_CHECK_STATE - entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set txt = "Please execute QUERY_PROBE first"                      if global._check_state.error_id == 1
// else "Call ID invalid or does not match QUERY_PROBE call ID" if global._check_state.error_id == 2
// else "action not defined"                                    if global._check_state.error_id == 3
// else "docking failed"                                        if global._check_state.error_id == 4
// else "attaching failed"                                      if global._check_state.error_id == 5 %}
// {% if global._check_state.error_id != 0 %} {action_raise_error("MagProbe: ERROR, %s" % txt)} {% endif %}
// _Mag_Probe_Debug msg="_CHECK_STATE - exiting"
// printer.configfile.config['gcode_macro _CHECK_STATE'].description : Helper: Mag Probe; Perform MagProbe error check
// printer.configfile.config.heater_bed.control : pid
// printer.configfile.config.heater_bed.pid_kp : 13.211
// printer.configfile.config.heater_bed.sensor_pin : PF3
// printer.configfile.config.heater_bed.heater_pin : PA1
// printer.configfile.config.heater_bed.sensor_type : keenovo
// printer.configfile.config.heater_bed.pid_kd : 340.046
// printer.configfile.config.heater_bed.pwm_cycle_time : 0.0166
// printer.configfile.config.heater_bed.pid_ki : 0.339
// printer.configfile.config.heater_bed.min_temp : 0
// printer.configfile.config.heater_bed.max_temp : 120
// printer.configfile.config.heater_bed.max_power : 0.6
// printer.configfile.config['led_effect sb_bar_part_ready'].layers :
// breathing  3 1 top (0.0, 1.0, 0.0)
// printer.configfile.config['led_effect sb_bar_part_ready'].leds :
// neopixel:progress_bar_leds (1-33)
// printer.configfile.config['led_effect sb_bar_part_ready'].autostart : false
// printer.configfile.config['led_effect sb_bar_part_ready'].frame_rate : 5
// printer.configfile.config['led_effect sb_logo_busy'].layers :
// breathing  3 1 top (1,0,0)
// printer.configfile.config['led_effect sb_logo_busy'].leds :
// neopixel:sb_leds (9-16)
// printer.configfile.config['led_effect sb_logo_busy'].autostart : false
// printer.configfile.config['led_effect sb_logo_busy'].frame_rate : 5
// printer.configfile.config['gcode_macro status_cleaning'].gcode :
// _general_Debug msg="status_cleaning- entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set current_led_state = global.current_led_state %}
// SET_FAN_LEDS_OFF
// SET_LOGO_LEDS_OFF
// SET_NOZZLE_LEDS_OFF
// M117 off
// CHECK_PRINTER_STATE
// {% set progressbar_enabled = global.progressbar_enabled|int %}
// {% if progressbar_enabled == 0 %}
// SET_BAR_LEDS_OFF
// {% set _dummy = current_led_state.update({'bar_leds':'sb_bar_cleaning'}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=current_led_state VALUE="{current_led_state}"
// SET_BAR_LEDS_ON
// {% endif %}
// {% set _dummy = current_led_state.update({'fan_leds':'sb_fan_cleaning'}) %}
// {% set _dummy = current_led_state.update({'logo_leds':'sb_logo_cleaning'}) %}
// {% set _dummy = current_led_state.update({'nozzle_leds':'sb_nozzle_cleaning'}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=current_led_state VALUE="{current_led_state}"
// SET_FAN_LEDS_ON
// SET_LOGO_LEDS_ON
// M117 cleaning
// SET_NOZZLE_LEDS_ON
// _general_Debug msg="status_cleaning- exiting"
// printer.configfile.config['gcode_macro status_cleaning'].description : Helper: set the Stealthburner leds to the STATUS_CLEANING LED_EFFECT
// printer.configfile.config['led_effect sb_nozzle_meshing'].layers :
// breathing  3 1 top (1.0, 1.0, 0.0)
// printer.configfile.config['led_effect sb_nozzle_meshing'].leds :
// neopixel:sb_leds (17,18)
// printer.configfile.config['led_effect sb_nozzle_meshing'].autostart : false
// printer.configfile.config['led_effect sb_nozzle_meshing'].frame_rate : 2
// printer.configfile.config['gcode_macro TEST_WLED_OFF'].gcode :
// _general_Debug msg="TEST_WLED_OFF - entering"
// {% set STRIP = params.STRIP|default("Chamber_Lights")|string %}
// WLED_OFF STRIP={STRIP}
// _general_Debug msg="TEST_WLED_OFF - exiting"
// printer.configfile.config['gcode_macro TEST_WLED_OFF'].description : Helper: test that ability to turn off a WLED strip
// printer.configfile.config['gcode_macro REBOOT'].gcode :
// _general_Debug msg="REBOOT - entering"
// {action_call_remote_method("reboot_machine")}
// _general_Debug msg="REBOOT - exiting"
// printer.configfile.config['gcode_macro REBOOT'].description : Helper: Reboot the printer
// printer.configfile.config['gcode_macro DISABLEFILAMENTSENSOR'].gcode :
// _general_Debug msg=" DISABLEFILAMENTSENSOR- entering"
// SET_FILAMENT_SENSOR SENSOR=runout ENABLE=0                ; disable the filament sensor
// _general_Debug msg=" DISABLEFILAMENTSENSOR- exiting"
// printer.configfile.config['gcode_macro DISABLEFILAMENTSENSOR'].description : Helper: Disables the Filament sensor named "runout"
// printer.configfile.config['gcode_macro Bottom_Lights_OFF'].gcode :
// _general_Debug msg="Bottom_Lights_OFF - entering"
// WLED_OFF STRIP=Bottom_Lights
// _general_Debug msg="Bottom_Lights_OFF - exiting"
// printer.configfile.config['gcode_macro Bottom_Lights_OFF'].description : Helper:  Turn off the WLED server that controls the Bottom lights
// printer.configfile.config['gcode_macro status_printing'].gcode :
// _general_Debug msg="status_printing- entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set current_led_state = global.current_led_state %}
// SET_FAN_LEDS_OFF
// SET_LOGO_LEDS_OFF
// SET_NOZZLE_LEDS_OFF
// M117 off
// CHECK_PRINTER_STATE
// {% set progressbar_enabled = global.progressbar_enabled|int %}
// {% if progressbar_enabled == 0 %}
// SET_BAR_LEDS_OFF
// {% set _dummy = current_led_state.update({'bar_leds':'sb_bar_printing'}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=current_led_state VALUE="{current_led_state}"
// SET_BAR_LEDS_ON
// {% endif %}
// {% set _dummy = current_led_state.update({'fan_leds':'sb_fan_printing'}) %}
// {% set _dummy = current_led_state.update({'logo_leds':'sb_logo_printing'}) %}
// {% set _dummy = current_led_state.update({'nozzle_leds':'sb_nozzle_printing'}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=current_led_state VALUE="{current_led_state}"
// SET_FAN_LEDS_ON
// SET_LOGO_LEDS_ON
// M117 printing
// SET_NOZZLE_LEDS_ON
// _general_Debug msg="status_printing- exiting"
// printer.configfile.config['gcode_macro status_printing'].description : Helper: set the Stealthburner leds to the STATUS_PRINTING LED_EFFECT
// printer.configfile.config['gcode_macro _DOCK_EUCLID_PROBE'].gcode :
// _Mag_Probe_Debug msg="_DOCK_EUCLID_PROBE - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set move_z = [user.z_hop, printer.toolhead.position.z]|max %}     ; calc movement high
// G90                                                                  ; absolute positioning
// G0 Z{move_z} F{user.speed.z_hop}                                     ; move head up
// G0 X{user.probe.store.x} Y{user.probe.store.y} F{user.speed.travel}  ; step 1 G0 X50 Y306
// G0 X{user.probe.dock.x} F{user.speed.dock}                           ; step 2 G0 X0
// G0 Y{user.probe.dock.y} F{user.speed.dock}                           ; step 3 G0 Y286
// {% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %} ; set back to relative
// _MAGPROBE_STATUS_READY
// _Mag_Probe_Debug msg="_DOCK_EUCLID_PROBE - exiting"
// printer.configfile.config['gcode_macro _DOCK_EUCLID_PROBE'].description : Helper: Mag Probe; Dock Euclid MagProbe
// printer.configfile.config['gcode_macro _POWER_ON_RGB2'].gcode :
// _general_Debug msg="_POWER_ON_RGB2 - entering"
// {action_call_remote_method("set_device_power",
// device="tasmota_plug_RGB2",
// state="on")}
// _general_Debug msg="_POWER_ON_RGB2 - exiting"
// printer.configfile.config['gcode_macro _POWER_ON_RGB2'].description : Helper: Turn on the Tasmota RGB2 smart plug
// printer.configfile.config['gcode_macro status_heating'].gcode :
// _general_Debug msg="status_heating- entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set current_led_state = global.current_led_state %}
// SET_FAN_LEDS_OFF
// SET_LOGO_LEDS_OFF
// SET_NOZZLE_LEDS_OFF
// M117 off
// CHECK_PRINTER_STATE
// {% set progressbar_enabled = global.progressbar_enabled|int %}
// {% if progressbar_enabled == 0 %}
// SET_BAR_LEDS_OFF
// {% set _dummy = current_led_state.update({'bar_leds':'sb_bar_heating'}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=current_led_state VALUE="{current_led_state}"
// SET_BAR_LEDS_ON
// {% endif %}
// {% set _dummy = current_led_state.update({'fan_leds':'sb_fan_heating'}) %}
// {% set _dummy = current_led_state.update({'logo_leds':'sb_logo_heating'}) %}
// {% set _dummy = current_led_state.update({'nozzle_leds':'sb_nozzle_heating'}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=current_led_state VALUE="{current_led_state}"
// SET_FAN_LEDS_ON
// SET_LOGO_LEDS_ON
// M117 heating
// SET_NOZZLE_LEDS_ON
// _general_Debug msg="status_heating- exiting"
// printer.configfile.config['gcode_macro status_heating'].description : Helper: set the Stealthburner leds to the STATUS_HEATING LED_EFFECT
// printer.configfile.config['delayed_gcode _BED_MESH_SAVE'].gcode :
// _Mag_Probe_Debug msg="_BED_MESH_SAVE - entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% if global.bed_mesh_store.save_at_end %}
// {action_respond_info("BED_MESH: Save Config!")}
// SAVE_CONFIG
// {% endif %}
// _Mag_Probe_Debug msg="_BED_MESH_SAVE - exiting"
// printer.configfile.config['gcode_macro INFO__GLOBAL_VARS'].gcode :
// _general_Debug msg="INFO__GLOBAL_VARSL - entering"
// {% set ns = namespace( flag = 0 ) %}
// {% set ns2 = namespace(flag = 0, loop_flag = 0 ) %}
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set search_vars_search = True if params.VAR else False %}
// {% set search = params.VAR|default('')|string|lower %}
// {% if '.' is in params.VAR %}
// {% set ns.flag = 1 %}
// {% set ns.search = search.split('.') %}
// {% set ns.length = (ns.search|length) - 1 %}
// {% set search = ns.search[ns.length] %}
// {% endif %}
// {% if search_vars_search == False %}
// {% set print_printer_parameters = True %}
// {% else %}
// {% set print_printer_parameters = False %}
// {% endif %}
// {% if print_printer_parameters %}
// {% set ns.path = ["INFO__GLOBAL_VARS <+++++++++++++++++", ''] %}
// { action_respond_info(ns.path|join) }
// {% endif %}
// {% for item in global|sort %}
// {% if ns.flag == 0 %}
// {% if ' ' in item %}
// {% set ns.path = ['global', "['%s']" % (item), ''] %}
// {% else %}
// {% set ns.path = ['global.', item, ''] %}
// {% endif %}
// {% if search in ns.path|lower %}
// {% set ns2.flag = 1%}
// { action_respond_info(ns.path|join) }
// {% endif %}
// {% set ns2.loop_flag = 0 %}
// {%
// if (global[item] is not boolean)
// and (global[item] is not float)
// and (global[item] is not integer)
// and (global[item] is not none)
// and (global[item] is not undefined)
// and (global[item] is not callable)
// %}
// {% set ns2.loop_flag = 1 %}
// {% endif %}
// {% if ns2.loop_flag %}
// {% if global[item].items()|sort %}
// {% for childkey, child in global[item].items() recursive %}
// {% set ns.path = ns.path[:loop.depth|int + 1] %}
// {% if ' ' in childkey %}
// {% set null = ns.path.append("['%s']" % (childkey)) %}
// {% else %}
// {% set null = ns.path.append(".%s" % (childkey)) %}
// {% endif %}
// {% if child is mapping  %}
// { loop(child.items()|sort) }
// {% else %}
// {% if search in ns.path|lower %}
// {% set ns2.flag = 1%}
// { action_respond_info("%s : %s" % (ns.path|join, child)) }
// {% endif %}
// {% endif %}
// {% endfor %}
// {% endif %}
// {% else %}
// {% if search in ns.path|lower %}
// {% set ns2.flag = 1%}
// { action_respond_info("%s : %s" % (ns.path|join, (global[item])|string)) }
// {% endif %}
// {% endif %}
// {% else %}
// {% if item ==  ns.search[(ns.length-ns.length)] %}
// {% if ' ' in item %}
// {% set ns.path = ['global', "['%s']" % (item), ''] %}
// {% else %}
// {% set ns.path = ['global.', item, ''] %}
// {% endif %}
// {% if search in ns.path|lower %}
// {% set ns2.flag = 1%}
// { action_respond_info(ns.path|join) }
// {% endif %}
// {% set ns2.loop_flag = 0 %}
// {%
// if (global[item] is not boolean)
// and (global[item] is not float)
// and (global[item] is not integer)
// and (global[item] is not none)
// and (global[item] is not undefined)
// and (global[item] is not callable)
// %}
// {% set ns2.loop_flag = 1 %}
// {% endif %}
// {% if ns2.loop_flag %}
// {% if global[item].items()|sort %}
// {% for childkey, child in global[item].items() recursive %}
// {% set ns.path = ns.path[:loop.depth|int + 1] %}
// {% if ' ' in childkey %}
// {% set null = ns.path.append("['%s']" % (childkey)) %}
// {% else %}
// {% set null = ns.path.append(".%s" % (childkey)) %}
// {% endif %}
// {% if child is mapping  %}
// { loop(child.items()|sort) }
// {% else %}
// {% if search in ns.path|lower %}
// {% set ns2.flag = 1%}
// { action_respond_info("%s : %s" % (ns.path|join, child)) }
// {% endif %}
// {% endif %}
// {% endfor %}
// {% endif %}
// {% else %}
// {% if search in ns.path|lower %}
// {% set ns2.flag = 1%}
// { action_respond_info("%s : %s" % (ns.path|join, (global[item])|string)) }
// {% endif %}
// {% endif %}
// {% else %}
// {% endif %}
// {% endif %}
// {% endfor %}
// {% if print_printer_parameters %}
// {% set ns.path = ["End of INFO__GLOBAL_VARS +++++++++++++++++>", ''] %}
// { action_respond_info(ns.path|join) }
// {% endif %}
// {% if ns2.flag == 0 and not print_printer_parameters %}
// {action_respond_info("Nothing found for \"INFO__GLOBAL_VARS %s\"" % rawparams)}
// {% endif %}
// _general_Debug msg="INFO__GLOBAL_VARS - exiting"
// printer.configfile.config['gcode_macro INFO__GLOBAL_VARS'].description : Helper: print out all values in [gcode_macro _GLOBAL_VARS] space or the speciifed parameter
// printer.configfile.config['gcode_macro SET_PROBE_STATUS'].gcode :
// _Mag_Probe_Debug msg="SET_PROBE_STATUS - entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set _probe_action = global._probe_action %}
// {% set mag_probe = user.mag_probe %}
// {% if not params.STATE or params.STATE|lower is not in ['unknown','attached','docked'] %}
// {action_raise_error("Invalid probe state: %s. Valid probe states are [UNKNOWN, ATTACHED, DOCKED]" % params.STATE|default('none')|upper)}
// {% endif %}
// {% set _dummy = _probe_action.update({'man_state': params.STATE|lower }) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=_probe_action VALUE="{_probe_action}"
// {% set _dummy = mag_probe.update({'state': params.STATE|lower }) %}
// SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=mag_probe VALUE="{mag_probe}"
// _Mag_Probe_Debug msg="SET_PROBE_STATUS - exiting"
// printer.configfile.config['gcode_macro SET_PROBE_STATUS'].description : Helper: Mag Probe; Manually specify MagProbe status, valid probe states are UNKNOWN, ATTACHED and DOCKED
// printer.configfile.config['neopixel progress_bar_leds'].initial_red : 0.0
// printer.configfile.config['neopixel progress_bar_leds'].pin : PB0
// printer.configfile.config['neopixel progress_bar_leds'].chain_count : 33
// printer.configfile.config['neopixel progress_bar_leds'].initial_white : 0.0
// printer.configfile.config['neopixel progress_bar_leds'].initial_green : 0.0
// printer.configfile.config['neopixel progress_bar_leds'].initial_blue : 1.0
// printer.configfile.config['neopixel progress_bar_leds'].color_order : RGB
// printer.configfile.config['gcode_macro PRINT_START'].gcode :
// _general_Debug msg="PRINT_START - entering"
// {% set global      = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set user        = printer['gcode_macro _USER_VARIABLE'] %}
// {% set MeshToApply = user.filament.profile.MeshToApply|default() %}
// {% set var         = user.var %}
// {% set actBed = printer['temperature_sensor bed'].temperature|float|round(1) if 'temperature_sensor bed' in printer
// else printer.heater_bed.temperature|float|round(1) %} ; get actual temp from extra sensor or heater sensor
// {% if global.state == 'Prepare' %}
// {% set defaultTN = user.filament.profile.defaultTempNozzle|float %}
// {% set defaultWN = user.filament.profile.defaultWarmNozzle|float %}
// {% set defaultRN = user.filament.profile.defaultReadyNozzle|float %}
// {% set defaultSOAK = user.filament.profile.PrePrintSoakMinutes|float %}
// {% set defaultENCLOSURE = user.filament.profile.defaultEnclosure|float %}
// {% set purgeRetract = user.filament.profile.purgeRetract|float %}
// {% set defaultTB = user.filament.profile.defaultTempBed|float %}
// {% set var = {'temp': {'extruder': params.EXTRUDER_TEMP|default(defaultTN)|float|round(1),
// 'bed'     : params.BED_TEMP|default(defaultTB)|float|round(1),
// 'chamber' : params.CHAMBER_TEMP|default(defaultENCLOSURE)|float|round(1),
// 'endstop' : 0.0},
// 'delta': {'chamber': params.DELTA_C|default(defaultTN-defaultRN)|float|round(1),
// 'bed'    : params.DELTA_B|default(5)|float|round(1)},
// 'time' : {'soak'      : params.SOAK|default(defaultSOAK)|int,
// 'soak_extra': params.CHAMBER_SOAK|default(15)|int * 60 if params.EXTRA_SOAK|default('true') == 'true' and
// user.hw.chamber.ena
// else 0},
// 'redo_qgl'    : True if user.filament.profile.QGLbeforeSoakPrint == True
// else False,
// 'prime_height': params.LAYER_HEIGHT|float * user.print_start.prime_mult|float if LAYER_HEIGHT in params
// else user.prime.pos.z|float,
// 'z_adjust'    : params.Z_ADJUST|default(0.0)|float,
// 'filter'      : False if params.FILTER|default(1)|int == 0 else True} %}
// SET_NOZZLE_LEDS_OFF
// SET_LED LED=sb_leds INDEX=17 RED=.2 GREEN=.2 BLUE=1
// SET_LED LED=sb_leds INDEX=18 RED=.2 GREEN=.2 BLUE=1
// M118 gCode file passed the following to PRINT_START:
// M118 { rawparams }
// {% if user.hw.relay.ena %} _HEATER_ON {% endif %}
// {% if user.hw.caselight.ena %} _CASELIGHT_ON {% endif %}             ; switch on light
// {% if user.hw.display.ena %} _LCD_KNOB COLOR=RED BLINK=1 {% endif %}
// {% if user.hw.chamber.fan %} M141 S0  {% endif %}                    ; exhaust fan off
// {% if user.hw.filter.ena and var.filter %} _FILTER_ON {% endif %}    ; activate filter
// _CG28                                                                ; home if needed
// G90                                                                  ; absolute position
// G0 Z{user.park.bed.z} F{user.speed.z_hop}                            ; move nozzle to z high first
// G0 X{user.park.bed.x} Y{user.park.bed.y} F{user.speed.travel}        ; home to get toolhead in the middle
// ENABLEFILAMENTSENSOR
// PAUSE_BASE
// SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=var VALUE="{var}"
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=execute VALUE=False
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=state VALUE='"HeatBed"'
// UPDATE_DELAYED_GCODE ID=_START_PRINT_WAIT DURATION=0.5
// {% elif global.state == 'HeatBed' %}
// STATUS_HEATING
// SET_NOZZLE_LEDS_OFF
// SET_LED LED=sb_leds INDEX=18 RED=1 GREEN=0 BLUE=0
// SET_LED LED=sb_leds INDEX=17 RED=.5 GREEN=.5 BLUE=.5
// {% set cfg_bed_max = printer.configfile.settings.heater_bed.max_temp|float|round(1) - 5.0 %}
// {% set targetBed = var.temp.bed - var.delta.bed %}
// {% set soakBed = [(var.temp.bed + user.print_start.bed_up), cfg_bed_max]|min %}
// {% if (var.time.soak <= 0) or (actBed >= targetBed) %}  ; check if soak time is 0 or if the bed is still hot
// M117 Heating Extruder
// {% set text = 'heat soak disabled' if var.time.soak <= 0 else 'heat soak not needed' %}
// _PRINT_AR T="{"Bed temp: act %3.1fC min %3.1fC (target(%3.1fC) - delta(%2.1fC)) %s" %
// (actBed,targetBed,var.temp.bed,var.delta.bed,text)}"
// {% set _dummy = var.update({'redo_qgl' : False}) %}
// M140 S{var.temp.bed}      ; heat bed
// M109 S{var.temp.extruder} ; heat extruder and wait
// M190 S{var.temp.bed}      ; heat bed and wait
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=state VALUE='"Chamber"'
// UPDATE_DELAYED_GCODE ID=_START_PRINT_WAIT DURATION=0.5
// {% else %}
// M117 Heating Bed
// _PRINT_AR T="{"Bed temp: act %3.1fC min %3.1fC (target(%3.1fC) - delta(%2.1fC)) heat soak needed" %
// (actBed,targetBed,var.temp.bed,var.delta.bed)}"
// _PRINT_AR T="{"Set Bed temp to %3.1fC instead of %3.1fC for faster heat soak" % (soakBed,var.temp.bed)}"
// M106 S90              ; switch part cooling ~35% to move air in chamber
// M140 S{soakBed}       ; heat bed
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=state VALUE='"HeatSoak"'
// {% set next_duration = user.print_start.ival if var.time.soak > user.print_start.ival else var.time.soak %}
// {% set _dummy = var.time.update({'soak': var.time.soak - user.print_start.ival}) if var.time.soak > user.print_start.ival
// else var.time.update({'soak': 0}) %}
// UPDATE_DELAYED_GCODE ID=_START_PRINT_WAIT DURATION={next_duration}
// {% endif%}
// SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=var VALUE="{var}"
// _RUNOUT_INFO
// {% elif global.state == 'HeatSoak' %}
// STATUS_HEATING
// SET_NOZZLE_LEDS_OFF
// SET_LED LED=sb_leds INDEX=18 RED=1 GREEN=0 BLUE=0
// SET_LED LED=sb_leds INDEX=17 RED=.5 GREEN=.5 BLUE=.5
// {% if user.hw.runout.sensor %}
// {% if printer["filament_" + user.hw.runout.type + "_sensor runout"].enabled|lower == 'true' %}
// {% set filament_detected = printer["filament_" + user.hw.runout.type + "_sensor runout"].filament_detected %}
// {% elif 'filament_loaded' in printer.save_variables.variables %}
// {% set filament_detected = printer.save_variables.variables.filament_loaded %}
// {% else %}
// {% set filament_detected = True %}
// {% endif %}
// {% elif user.hw.runout.type == 'file' %}
// {% set filament_detected = printer.save_variables.variables.filament_loaded %}
// {% else %}
// {% set filament_detected = True %}
// {% endif %}
// {% if filament_detected %}
// {% if var.time.soak <= (user.print_start.time.extruder + var.temp.extruder - 240) and
// var.temp.extruder != printer.extruder.target %} ; check time to start heating extruder
// M104 S{var.temp.extruder} ; heat extruder
// {% endif %}
// {% if var.time.soak <= user.print_start.time.bed and var.temp.bed != printer.heater_bed.target|int %}  ; check time to reduce bed temp
// M140 S{var.temp.bed} ; heat bed
// {% endif %}
// {% if var.time.soak > 0 %} ; check remaining time
// {% set next_duration = var.time.soak if user.print_start.ival >= var.time.soak else user.print_start.ival %}
// {% set _dummy = var.time.update({'soak': 0}) if user.print_start.ival >= var.time.soak
// else var.time.update({'soak': var.time.soak - user.print_start.ival}) %}}
// UPDATE_DELAYED_GCODE ID=_START_PRINT_WAIT DURATION={next_duration}
// {% else %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=state VALUE='"Chamber"'
// UPDATE_DELAYED_GCODE ID=_START_PRINT_WAIT DURATION=0.5
// _PRINT_AR T="{"Bed act temp=%3.1fC heat soak done" % (actBed)}"
// {% endif%}
// SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=var VALUE="{var}"
// {% else %}
// _PRINT_AR T="No Filament loaded, print aborded!"
// CANCEL_PRINT PARK=1 ERROR=1
// {% endif %}
// {% elif global.state == 'Chamber' %}
// STATUS_HEATING
// SET_NOZZLE_LEDS_OFF
// SET_LED LED=sb_leds INDEX=18 RED=1 GREEN=0 BLUE=0
// SET_LED LED=sb_leds INDEX=17 RED=.5 GREEN=.5 BLUE=.5
// {% set targetChamber = var.temp.chamber - var.delta.chamber %}
// {% set actChamber = printer["temperature_" + user.hw.chamber.type + " chamber"].temperature|round(1) if user.hw.chamber.ena
// else 0 %}
// {% if var.time.soak_extra > 0 and actChamber < targetChamber %}
// _PRINT_AR T="{"Chamber temp: act %2.1fC min %2.1fC (target(%2.1fC) - delta(%2.1fC)) extra heat soak needed" %
// (actChamber,targetChamber,var.temp.chamber,var.delta.chamber)}"
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=state VALUE='"ChamberSoak"'
// UPDATE_DELAYED_GCODE ID=_START_PRINT_WAIT DURATION=0.5
// {% else %}
// {% set text = 'extra heat soak disabled' if var.time.soak_extra <= 0 else 'extra heat soak not needed' %}
// _PRINT_AR T="{"Chamber temp: act %2.1fC min %2.1fC (target(%2.1fC) - delta(%2.1fC)) %s" %
// (actChamber,targetChamber,var.temp.chamber,var.delta.chamber,text)}"
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=state VALUE='"Final"'
// UPDATE_DELAYED_GCODE ID=_START_PRINT_WAIT DURATION=0.5
// {% endif %}
// {% elif global.state == 'ChamberSoak' %}
// {% set targetChamber = var.temp.chamber - var.delta.chamber %}
// {% set actChamber = printer["temperature_" + user.hw.chamber.type + " chamber"].temperature|round(1) if user.hw.chamber.ena
// else 0 %}
// {% if var.time.soak_extra > 0 and actChamber < targetChamber %} ; check remaining time and temp difference
// {% set next_duration = var.time.soak_extra if user.print_start.ival >= var.time.soak_extra else user.print_start.ival %}
// {% set _dummy = var.time.update({'soak_extra': 0}) if user.print_start.ival >= var.time.soak_extra
// else var.time.update({'soak_extra': var.time.soak_extra - user.print_start.ival}) %}}
// UPDATE_DELAYED_GCODE ID=_START_PRINT_WAIT DURATION={next_duration}
// {% else %}
// {% set text = 'extra heat soak timed out' if var.time.soak_extra == 0 else 'chamber temp reached' %}
// _PRINT_AR T="{"Chamber temp: act %2.1fC min %2.1fC (target(%2.1fC) - delta(%2.1fC)) %s" %
// (actChamber,targetChamber,var.temp.chamber,var.delta.chamber,text)}"
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=state VALUE='"Final"'
// UPDATE_DELAYED_GCODE ID=_START_PRINT_WAIT DURATION=0.5
// {% endif %}
// SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=var VALUE="{var}"
// {% elif global.state == 'Final' %}
// RESUME_BASE
// SET_NOZZLE_LEDS_OFF
// SET_LED LED=sb_leds INDEX=17 RED=.5 GREEN=0 BLUE=.5
// SET_LED LED=sb_leds INDEX=18 RED=.5 GREEN=0 BLUE=.5
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=state VALUE='"Prepare"' ; set state for next print
// {% if user.hw.display.ena %} _LCD_KNOB COLOR=RED  {% endif %}
// M106 S0                                                               ; turn off part cooling fan
// SET_NOZZLE_LEDS_OFF
// CURRENT_HIGH
// G34                                                                   ; home & QGL
// {% if user.hw.chamber.fan %} M141 S{var.temp.chamber} {% endif %}     ; set target temp for exhaust fan
// NOZZLECLEAN
// {% set _home_z = global._home_z %}
// {% set _dummy = _home_z.update({'calibrate_z_next':user.hw.auto_z_offset.auto}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=_home_z VALUE="{_home_z}"
// G28 Z
// {% if user.hw.auto_z_offset.auto %} CALIBRATE_Z {% endif %}
// {% if user.hw.auto_z_offset.manu %} _SET_PLATE_OFFSET {% endif %}
// SET_GCODE_OFFSET Z_ADJUST={var.z_adjust} MOVE=1
// _PRINT_OFFSET
// {% if MeshToApply != "NONE" %}
// {% if MeshToApply == "INSITU" %}
// BED_MESH_CALIBRATE PRINT_MIN={params.PRINT_MIN} PRINT_MAX={params.PRINT_MAX}
// BED_MESH_PROFILE SAVE=INSITU
// {% else %}
// BED_MESH_PROFILE LOAD={MeshToApply}
// {% endif %}
// M118 Applied {MeshToApply} mesh, post sampling.
// {% endif %}
// M118 Commencing print.
// SET_NOZZLE_LEDS_OFF
// SET_LED LED=sb_leds INDEX=18 RED=.5 GREEN=.5 BLUE=.5
// SET_LED LED=sb_leds INDEX=17 RED=.5 GREEN=.5 BLUE=.5
// STATUS_PRINTING
// PRIME_LINE PRIME_HEIGHT={var.prime_height}
// {% if user.hw.endstop_temp.ena %}
// {% set _dummy = var.temp.update({'endstop': printer['temperature_sensor endstop'].temperature}) %}
// SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=var VALUE="{var}"
// {% endif %}
// G21                                                 ; set units to millimeters
// G90                                                 ; use absolute coordinates
// M83                                                 ; use relative distances for extrusion
// {% if user.hw.display.ena %} UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=1 {% endif %}
// {% endif %}
// _general_Debug msg="PRINT_START - exiting"
// printer.configfile.config['gcode_macro PRINT_START'].description : Helper: All cmds needed at print start
// printer.configfile.config['gcode_macro TEST_RANGE'].gcode :
// _general_Debug msg="TEST_RANGE - entering"
// {% set RED = params.RED|default(0)|float %}
// {% set GREEN = params.GREEN|default(1)|float %}
// {% set BLUE = params.BLUE|default(0)|float %}
// {% set WHITE = params.WHITE|default(0)|float %}
// {% set STRIP = params.STRIP|default("Chamber_Lights")|string %}
// SET_WLED STRIP={STRIP} RED={RED} GREEN={GREEN} BLUE={BLUE} WHITE={WHITE}
// _general_Debug msg="TEST_RANGE - exiting"
// printer.configfile.config['gcode_macro TEST_RANGE'].description : Helper: Test full range send for WLED strips
// printer.configfile.config['gcode_macro SET_LOGO_RAINBOW_LEDS_ON'].gcode :
// _general_Debug msg="SET_LOGO_RAINBOW_LEDS_ON - entering"
// SET_LED_EFFECT EFFECT=set_logo_leds_rainbow_barf
// _general_Debug msg="SET_LOGO_RAINBOW_LEDS_ON - exiting"
// printer.configfile.config['gcode_macro SET_LOGO_RAINBOW_LEDS_ON'].description : Helper: Turn on the Stealthburner LOGO leds effect called "set_logo_leds_rainbow_barf" by using the SET_LED_EFFECT call
// printer.configfile.config['thermistor keenovo'].resistance2 : 17550
// printer.configfile.config['thermistor keenovo'].resistance3 : 5070
// printer.configfile.config['thermistor keenovo'].resistance1 : 100000
// printer.configfile.config['thermistor keenovo'].temperature2 : 70
// printer.configfile.config['thermistor keenovo'].temperature3 : 110
// printer.configfile.config['thermistor keenovo'].temperature1 : 25
// printer.configfile.config['gcode_macro DIRECT_MOVE'].gcode :
// _general_Debug msg="DIRECT_MOVE - entering"
// {% set out_param = ["G0"] %}
// {% set _dummy = out_param.append("X%s" % params.X) if params.X %}
// {% set _dummy = out_param.append("Y%s" % params.Y) if params.Y %}
// {% set _dummy = out_param.append("Z%s" % params.Z) if params.Z %}
// {% set _dummy = out_param.append("E%s" % params.E) if params.E %}
// {% set _dummy = out_param.append("F%s" % params.F) if params.F %}
// {out_param|join(" ")}
// _general_Debug msg="DIRECT_MOVE - exiting"
// printer.configfile.config['gcode_macro DIRECT_MOVE'].description : Helper: Move toolhead to specified position via G0 command
// printer.configfile.config['gcode_macro _DOCK_KLICKY_PROBE'].gcode :
// _Mag_Probe_Debug msg="_DOCK_KLICKY_PROBE - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set move_z = [user.z_hop, printer.toolhead.position.z]|max %}     ; calc movement high
// G90                                                                  ; absolute positioning
// G0 Z{move_z} F{user.speed.z_hop}                                     ; move head up
// G0 X{user.probe.dock.x} Y{user.probe.dock.y} F{user.speed.travel}    ; step 1
// G0 Y{user.probe.store.y} F{user.speed.dock}                          ; step 2
// G0 X{user.probe.store.x} F{user.speed.dock}                          ; step 3
// {% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %} ; set back to relative
// _MAGPROBE_STATUS_READY
// _Mag_Probe_Debug msg="_DOCK_KLICKY_PROBE - exiting"
// printer.configfile.config['gcode_macro _DOCK_KLICKY_PROBE'].description : Helper: Mag Probe; Dock Klicky MagProbe
// printer.configfile.config['gcode_macro _GLOBAL_VARS'].variable__mag_probe : {}
// printer.configfile.config['gcode_macro _GLOBAL_VARS'].variable_bed_mesh_store : {}
// printer.configfile.config['gcode_macro _GLOBAL_VARS'].variable_state : 'Prepare'
// printer.configfile.config['gcode_macro _GLOBAL_VARS'].variable_bed_mesh : {}
// printer.configfile.config['gcode_macro _GLOBAL_VARS'].variable_bucket_pos : 1
// printer.configfile.config['gcode_macro _GLOBAL_VARS'].variable_wait_variable : {}
// printer.configfile.config['gcode_macro _GLOBAL_VARS'].variable_tmacro : {}
// printer.configfile.config['gcode_macro _GLOBAL_VARS'].variable_current_led_state : {}
// printer.configfile.config['gcode_macro _GLOBAL_VARS'].variable_layer : {}
// printer.configfile.config['gcode_macro _GLOBAL_VARS'].variable_bedfanvars : {}
// printer.configfile.config['gcode_macro _GLOBAL_VARS'].variable__set_acc : {}
// printer.configfile.config['gcode_macro _GLOBAL_VARS'].variable_fancheckvars : {}
// printer.configfile.config['gcode_macro _GLOBAL_VARS'].variable_restore : {}
// printer.configfile.config['gcode_macro _GLOBAL_VARS'].description : Helper: Contains global defined printer variables
// printer.configfile.config['gcode_macro _GLOBAL_VARS'].gcode :
// _general_Debug msg="_GLOBAL_VARS - entering"
// {% set global_wait_variable_count                     = 300.0 %}
// {% set global_wait_variable_duration                  = 2 %}
// {% set global_wait_variable_waiting                   = False %}
// {% set global_wait_variable_ready                     = 200 %}
// {% set global_wait_variable_temp                      = 250 %}
// {% set global_sb_vars_colors                          =   {
// 'white': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 1.0},
// 'standby': {'r': 0.01, 'g': 0.01, 'b': 0.01, 'w': 0.5},
// 'red': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},
// 'orange': {'r': 1.0, 'g': 0.25, 'b': 0.0, 'w': 0.0},
// 'yellow': {'r': 1.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},
// 'green': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},
// 'blue': {'r': 0.0, 'g': 0.0, 'b': 1.0, 'w': 0.0},
// 'purple': {'r': 0.5, 'g': 0.0, 'b': 1.0, 'w': 0.0},
// 'pink': {'r': 1.0, 'g': 0.0, 'b': 0.5, 'w': 0.0},
// 'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},
// 'dimwhite': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.4}
// }
// %}
// {% set global_current_state_fan_leds                  = 'set_fan_leds_rainbow' %}
// {% set global_current_state_logo_leds                 = 'set_logo_leds_rainbow_barf' %}
// {% set global_current_state_bar_leds                  = 'set_bar_leds_progress' %}
// {% set global_current_state_nozzle_leds               = 'set_nozzle_leds_white' %}
// {% set global_progressbar_enabled                     =  0 %}
// {% set global_bedfanvars_flag                         = 0 %}           ; Bed heater reached target temp if this value > 0, Valid value: 0 (boot state), 2 (Target heater temp reached), 3 (chamber temp falling), 4 (chamber temp above defaultEnclosure temp)
// {% set global_bedfanvars_lasttemp                     = 0.0 %}         ; previous chamber temperature reading
// {% set global_fancheckvars_Part_Cooling_Fan_Enabled   = 0 %}           ; Part cooling fan disabled = 0; Part cooling fan enaled=1
// {% set global_pc_stop_count                           = 0 %}           ; number of times the part cooling fans has stopped rotating, if this count is greater than 3 the fan stoppage routine is called which pauses the printer
// {% set global_he_stop_count                           = 0 %}           ; number of times the hot end cooling fans has stopped rotating, if this count is greater than 3 the fan stoppage routine is called which pauses the printer
// {% set global_tmacro_start_idle_minutes               = 0 %}           ;test_probe_accuracy - params - start_idle_minutes
// {% set global_tmacro_bed_temp                         = 0 %}           ;test_probe_accuracy - params - bed_temp
// {% set global_tmacro_extruder_temp                    = 0 %}           ;test_probe_accuracy - params - extruder_temp
// {% set global_tmacro_bed_soak_minutes                 = 0 %}           ;test_probe_accuracy - params - bed_soak_minutes
// {% set global_tmacro_extruder_soak_minutes            = 0 %}           ;test_probe_accuracy - params - extruder_soak_minutes
// {% set global_tmacro_dwell_seconds                    = 0 %}           ;test_probe_accuracy - params - dwell_seconds
// {% set global_tmacro_dwell_lift_z                     = 0 %}           ;test_probe_accuracy - params - dwell_lift_z
// {% set global_tmacro_end_idle_minutes                 = 0 %}           ;test_probe_accuracy - params - end_idle_minutes
// {% set global_tmacro_state                            = 'start' %}     ;test_probe_accuracy - params - state
// {% set global_tmacro_next_state                       = 'none' %}      ;test_probe_accuracy - params - next_state
// {% set global_probe_attached                          = False %}       ;global variable for Klicky Probe Macros - flag for attached probe
// {% set global_probe_state                             = False %}       ;global variable for Klicky Probe Macros - flag for the state of the Klicky probe
// {% set global_probe_lock                              = False %}       ;global variable for Klicky Probe Macros - flag for probe lock state
// {% set global_z_endstop_x                             = 0 %}           ;global variable for Klicky Probe Macros - Klicky probe Z endstop X position
// {% set global_z_endstop_y                             = 0 %}           ;global variable for Klicky Probe Macros - Klicky probe Z endstop Y position
// {% set global_buffer                                  = 20 %}          ;print surface bed mesh calibrate - boundary area for bed_mesh
// {% set global_last_area_start_x                       = -1 %}          ;print surface bed mesh calibrate - bed_mesh start x value for last bed_mesh performed
// {% set global_last_area_start_y                       = -1 %}          ;print surface bed mesh calibrate - bed_mesh start y value for last bed_mesh performed
// {% set global_last_area_end_x                         = -1 %}          ;print surface bed mesh calibrate - bed_mesh end x value for last bed_mesh performed
// {% set global_last_area_end_y                         = -1 %}          ;print surface bed mesh calibrate - bed_mesh end y value for last bed_mesh performed
// {% set global_mag_probe_action_man_state              = 'unknown' %}   ;MAG_PROBE variables in _PROBE_ACTION global variable - man_state - manually set probe state {UNKNOWN, ATTACHED and DOCKED}
// {% set global_mag_mag_probe_dock_state                = 'unknown' %}   ;MAG_PROBE variables in _MAG_PROBE global variables - dock_state - possible states are UNKNOWN, ATTACHED and DOCKED
// {% set global_mag_mag_probe_id                        = 0 %}           ;MAG_PROBE variables in _MAG_PROBE global variables - id - possible valid id 0 or 1
// {% set global_mag_check_state_error_id                = 0 %}           ;MAG_PROBE variables in _CHECK_STATE global variable - error_id - possible error ids are 0,1,2,3,4,5 - no error ocurred if error_id=0
// {% set global_mag_query_probe_id                      = 0 %}           ;MAG_PROBE variables in QUERY_PROBE global variable - id - possible valid id 0 or 1; 0 means invalid
// {% set global_bed_mesh_store_save_at_end              = False %}       ;BED_MESH_STORE global variable - save_at_end - True or False
// {% set global_home_z_calibrate_z_next                 = False %}       ;_HOME_Z global variable - calibrate_z_next - True or False
// {% set global_set_z_current_last_val                  = 'CONFIG' %}    ;_SET_Z_CURRENT global variable - last_val - 'CONFIG' or 'HOME'
// {% set global_set_acc_last_val                        = 'CONFIG' %}    ;_SET_ACC global variable - last_val - 'CONFIG' or 'HOME'
// {% set global_layer_layer_current                     =  0 %}          ;_LAYER Macro global variable - current
// {% set global_layer_layer_total                       =  0 %}          ;_LAYER Macro global variable - total
// {% set global_pause_restore_coordinates               = True %}        ;PAUSE Macro global variable - restore.absolute.coordinates
// {% set global_pause_restore_extrude                   = True %}        ;PAUSE Macro global variable - restore.absolute.extrude
// {% set global_pause_restore_speed                     = 1500 %}        ;PAUSE Macro global variable - restore.speed
// {% set wait_variable_dic = {
// 'count'     : global_wait_variable_count,
// 'duration'  : global_wait_variable_duration,
// 'waiting'   : global_wait_variable_waiting,
// 'ready'     : global_wait_variable_ready,
// 'temp'      : global_wait_variable_temp
// }
// %}
// {% set bedfanvars_dic = {
// 'flag'          : global_bedfanvars_flag,
// 'lasttemp'      : global_bedfanvars_lasttemp
// }
// %}
// {% set fancheckvars_dic = {
// 'part_cooling_fan_enabled'  : global_fancheckvars_Part_Cooling_Fan_Enabled,
// 'pc_stop_count'             : global_pc_stop_count,
// 'he_stop_count'             : global_he_stop_count
// }
// %}
// {% set sb_vars_dic = {
// 'colors'     : {
// 'white'     : global_sb_vars_colors.white,
// 'standby'   : global_sb_vars_colors.standby,
// 'red'       : global_sb_vars_colors.red,
// 'orange'    : global_sb_vars_colors.orange,
// 'yellow'    : global_sb_vars_colors.yellow,
// 'green'     : global_sb_vars_colors.green,
// 'blue'      : global_sb_vars_colors.blue,
// 'purple'    : global_sb_vars_colors.purple,
// 'pink'      : global_sb_vars_colors.pink,
// 'off'       : global_sb_vars_colors.off,
// 'dimwhite'  : global_sb_vars_colors.dimwhite
// }
// }
// %}
// {% set current_led_state_dic = {
// 'fan_leds'     : global_current_state_fan_leds,
// 'logo_leds'    : global_current_state_logo_leds,
// 'bar_leds'     : global_current_state_bar_leds,
// 'nozzle_leds'  : global_current_state_nozzle_leds
// }
// %}
// {% set tmacro_dic = {
// 'start_idle_minutes'     : global_tmacro_start_idle_minutes,
// 'bed_temp'               : global_tmacro_bed_temp,
// 'extruder_temp'          : global_tmacro_extruder_temp,
// 'bed_soak_minutes'       : global_tmacro_bed_soak_minutes,
// 'extruder_soak_minutes'  : global_tmacro_extruder_soak_minutes,
// 'dwell_seconds'          : global_tmacro_dwell_seconds,
// 'dwell_lift_z'           : global_tmacro_dwell_lift_z,
// 'end_idle_minutes'       : global_tmacro_end_idle_minutes,
// 'state'                  : global_tmacro_state,
// 'next_state'             : global_tmacro_next_state
// }
// %}
// {% set bed_mesh_dic = {
// 'buffer'                 : global_buffer,
// 'last_area_start_x'      : global_last_area_start_x,
// 'last_area_start_y'      : global_last_area_start_y,
// 'last_area_end_x'        : global_last_area_end_x,
// 'last_area_end_y'        : global_last_area_end_y
// }
// %}
// {% set probe_variables_dic = {
// 'probe_attached'         : global_probe_attached,
// 'probe_state'            : global_probe_state,
// 'probe_lock'             : global_probe_lock,
// 'z_endstop_x'            : global_z_endstop_x,
// 'z_endstop_y'            : global_z_endstop_y
// }
// %}
// {% set _probe_action_dic = {
// 'man_state'               : global_mag_probe_action_man_state
// }
// %}
// {% set _mag_probe_dic = {
// 'id'                      : global_mag_mag_probe_id
// }
// %}
// {% set _check_state_dic = {
// 'error_id'                : global_mag_check_state_error_id
// }
// %}
// {% set query_probe_dic = {
// 'id'                      : global_mag_query_probe_id
// }
// %}
// {% set bed_mesh_store_dic = {
// 'save_at_end'             : global_bed_mesh_store_save_at_end
// }
// %}
// {% set _home_z_dic = {
// 'calibrate_z_next'              : global_home_z_calibrate_z_next
// }
// %}
// {% set _set_z_current_dic = {
// 'last_val'               : global_set_z_current_last_val
// }
// %}
// {% set _set_acc_dic = {
// 'last_val'                     : global_set_acc_last_val
// }
// %}
// {% set layer_dic = {
// 'current'                      : global_layer_layer_current,
// 'total'                        : global_layer_layer_total
// }
// %}
// {% set restore_dic = {
// 'absolute' : {
// 'coordinates'    : global_pause_restore_coordinates,
// 'extrude'        : global_pause_restore_extrude,
// 'speed'                          : global_pause_restore_speed
// }
// }
// %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=bedfanvars                              VALUE="{bedfanvars_dic}"
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=fancheckvars                            VALUE="{fancheckvars_dic}"
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=sb_vars                                 VALUE="{sb_vars_dic}"
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=wait_variable                           VALUE="{wait_variable_dic}"
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=tmacro                                  VALUE="{tmacro_dic}"
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=bed_mesh                                VALUE="{bed_mesh_dic}"
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=progressbar_enabled                     VALUE={global_progressbar_enabled}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=current_led_state                       VALUE="{current_led_state_dic}"
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=_probe_action                           VALUE="{_probe_action_dic}"
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=_mag_probe                              VALUE="{_mag_probe_dic}"
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=_check_state                            VALUE="{_check_state_dic}"
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=query_probe                             VALUE="{query_probe_dic}"
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=bed_mesh_store                          VALUE="{bed_mesh_store_dic}"
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=_home_z                                 VALUE="{_home_z_dic}"
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=_set_z_current                          VALUE="{_set_z_current_dic}"
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=_set_acc                                VALUE="{_set_acc_dic}"
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=layer                                   VALUE="{layer_dic}"
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=restore                                 VALUE="{restore_dic}"
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=bucket_pos                              VALUE={(range(2) | random)}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=run VALUE=True
// _general_Debug msg="_GLOBAL_VARS - exiting"
// printer.configfile.config['gcode_macro _GLOBAL_VARS'].variable__check_state : {}
// printer.configfile.config['gcode_macro _GLOBAL_VARS'].variable__probe_action : {}
// printer.configfile.config['gcode_macro _GLOBAL_VARS'].variable_execute : False
// printer.configfile.config['gcode_macro _GLOBAL_VARS'].variable__set_z_current : {}
// printer.configfile.config['gcode_macro _GLOBAL_VARS'].variable_sb_vars : {}
// printer.configfile.config['gcode_macro _GLOBAL_VARS'].variable__home_z : {}
// printer.configfile.config['gcode_macro _GLOBAL_VARS'].variable_run : False
// printer.configfile.config['gcode_macro _GLOBAL_VARS'].variable_probe_variables : {}
// printer.configfile.config['gcode_macro _GLOBAL_VARS'].variable_query_probe : {}
// printer.configfile.config['gcode_macro _GLOBAL_VARS'].variable_progressbar_enabled : 0
// printer.configfile.config['gcode_macro SET_BAR_LEDS_BY_NAME'].gcode :
// _general_Debug msg="SET_BAR_LEDS_BY_NAME - entering"
// {% set color_name = params.COLOR %}
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set color = global.sb_vars.colors[color_name|lower] %}
// _SET_BAR_LEDS R={color.r} G={color.g} B={color.b} W={color.w}
// _general_Debug msg="SET_BAR_LEDS_BY_NAME - exiting"
// printer.configfile.config['gcode_macro SET_BAR_LEDS_BY_NAME'].description : Helper: Sets the color of the progress bar LEDs by only using the name of the color
// printer.configfile.config['extended_macro PARK_DICT'].gcode :
// _general_Debug msg="PARK_DICT - entering"
// {% if params.DICT %}
// {% set position = params.DICT %}
// _CG28                 ; home if not already homed
// G90                   ; absolute positioning
// G0 X{(str_to_dict(position)).x} Y{(str_to_dict(position)).y} Z{(str_to_dict(position)).z} F{(str_to_dict(position)).f}
// {% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %} ; set back to relative
// {% endif %}
// _general_Debug msg="PARK_DICT - exiting"
// printer.configfile.config['extended_macro PARK_DICT'].description : Helper: Park head depending on variable DICT parameter which is a python dictionary variable
// printer.configfile.config['gcode_macro G3401'].gcode :
// _general_Debug msg="G3401 - entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set MeshToApply = user.filament.profile.MeshToApply|default() %}
// {% if user.hw.display.ena %}
// _PRINT_AR T="Home & QGL" SHOW_LCD=true
// {% else %}
// _PRINT_AR T="Home & QGL"
// {% endif %}
// BED_MESH_CLEAR
// _CG28
// SET_GCODE_OFFSET Z=0 MOVE=1
// {% if user.var.redo_qgl|lower == 'true' %}
// _PRINT_AR T="QGL forced by PRINT_START"
// QUAD_GANTRY_LEVEL PARK=false HOME=false
// {% elif printer.quad_gantry_level.applied|lower == 'false' %}
// _PRINT_AR T="QGL not executed yet"
// QUAD_GANTRY_LEVEL PARK=false HOME=false
// {% endif %}
// NOZZLECLEAN
// {% set _home_z = global._home_z %}
// {% set _dummy = _home_z.update({'calibrate_z_next':user.hw.auto_z_offset.auto}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=_home_z VALUE="{_home_z}"
// G28 Z
// {% if user.hw.auto_z_offset.auto %} CALIBRATE_Z {% endif %}
// {% if user.hw.auto_z_offset.manu %} _SET_PLATE_OFFSET {% endif %}
// SET_GCODE_OFFSET Z_ADJUST={var.z_adjust} MOVE=1
// _PRINT_OFFSET
// {% if MeshToApply != "NONE" %}
// {% if MeshToApply == "INSITU" %}
// BED_MESH_CALIBRATE PRINT_MIN={params.PRINT_MIN} PRINT_MAX={params.PRINT_MAX}
// BED_MESH_PROFILE SAVE=INSITU
// {% else %}
// BED_MESH_PROFILE LOAD={MeshToApply}
// {% endif %}
// M118 Applied {MeshToApply} mesh post sampling.
// {% endif %}
// {% if user.hw.display.ena %} UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=1 {% endif %}
// _general_Debug msg="G3401 - exiting"
// printer.configfile.config['gcode_macro G3401'].description : Helper: Clears bed-mesh and performs G28, ATTACH_PROBE, QGL, DOCK_PROBE, NOZZLECLEAN, ATTACH_PROBE_LOCK, G28 Z, CALIBRATE_Z, applies bed-mesh, and DOCK_PROBE_UNLOCK
// printer.configfile.config['gcode_shell_command backup_to_github'].command : sh /home/pi/git_backup.sh
// printer.configfile.config['gcode_shell_command backup_to_github'].verbose : True
// printer.configfile.config['gcode_shell_command backup_to_github'].timeout : 30.
// printer.configfile.config.homing_override.gcode :
// _Mag_Probe_Debug msg="[homing_override] - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% if user.hw.mag_probe.ena %} _MAGPROBE_STATUS_HOMING {% endif %}
// {% set home_x, home_y, home_z = False, False, False %} ; define what axes need to be homed
// {% if params.X is not defined and params.Y is not defined and params.Z is not defined %} ; G28
// {% set home_x, home_y, home_z = True, True, True %}
// {% else %}
// {% if params.X is defined %}{% set home_x = True %}{% endif %}
// {% if params.Y is defined %}{% set home_y = True %}{% endif %}
// {% if params.Z is defined %}
// {% if 'x' not in printer.toolhead.homed_axes %}{% set home_x = True %}{% endif %} ; check if homed
// {% if 'y' not in printer.toolhead.homed_axes %}{% set home_y = True %}{% endif %} ; check if homed
// {% set home_z = True %}
// {% endif %}
// {% endif %}
// {% if user.hw.mag_probe.ena %} _MAG_PROBE ACTION=GET_STATUS RESPOND=0 {% endif %} ; generate probe state
// _SET_ACC VAL=HOME                                   ; reduce accel and accel_to_decel
// G0 Z{user.homing.z_endstop.hop} F{user.speed.z_hop} ; lift nozzle
// {% if home_x %} G28 X   {% endif %}                 ; home X
// {% if home_y %} G28 Y   {% endif %}                 ; home Y
// {% if home_z %} _HOME_Z {% endif %}                 ; home Z
// _SET_ACC                                            ; set accel and accel_to_decel back to cfg value
// {% if user.hw.mag_probe.ena %} _MAGPROBE_STATUS_READY {% endif %}
// _Mag_Probe_Debug msg="[homing_override] - exiting"
// printer.configfile.config.homing_override.axes : z
// printer.configfile.config.homing_override.set_position_z : 0
// printer.configfile.config['thermistor gulfcoast-epcos-m3-hex-stud'].resistance2 : 1655
// printer.configfile.config['thermistor gulfcoast-epcos-m3-hex-stud'].resistance3 : 227.8
// printer.configfile.config['thermistor gulfcoast-epcos-m3-hex-stud'].resistance1 : 100000
// printer.configfile.config['thermistor gulfcoast-epcos-m3-hex-stud'].temperature2 : 150
// printer.configfile.config['thermistor gulfcoast-epcos-m3-hex-stud'].temperature3 : 250
// printer.configfile.config['thermistor gulfcoast-epcos-m3-hex-stud'].temperature1 : 25
// printer.configfile.config['gcode_macro FAKE_POSITION'].gcode :
// _general_Debug msg="FAKE_POSITION - entering"
// SET_KINEMATIC_POSITION X=30 Y=30 Z=30
// _general_Debug msg="FAKE_POSITION - exiting"
// printer.configfile.config['gcode_macro FAKE_POSITION'].description : Helper: Allows the printer to move the toolhead without homing first!
// printer.configfile.config['gcode_macro _SD_PRINT_STATS'].gcode :
// _general_Debug msg="_SD_PRINT_STATS - entering"
// {% set PT = printer.print_stats.print_duration %}
// {% set Ph,Pm,Ps = (PT / 3600)|int, ((PT / 60) % 60)|int, (PT % 60)|int %}
// {% set TT = printer.print_stats.total_duration %}
// {% set Th,Tm,Ts = (TT / 3600)|int, ((TT / 60) % 60)|int, (TT % 60)|int %}
// {% set Fil = printer.print_stats.filament_used|float / 1000.0 %}
// {action_respond_info("Statistic of last Print (%s):
// Name: %s
// Filament: %.4fm
// Print Time: %d:%02d:%02d
// Total Time: %d:%02d:%02d" %
// (params.R, printer.print_stats.filename, Fil, Ph, Pm, Ps, Th, Tm, Ts))}
// _general_Debug msg="_SD_PRINT_STATS - exiting"
// printer.configfile.config['gcode_macro _SD_PRINT_STATS'].description : Helper: Print statistic of last print
// printer.configfile.config['gcode_macro status_ready'].gcode :
// _general_Debug msg="status_ready- entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set current_led_state = global.current_led_state %}
// SET_FAN_LEDS_OFF
// SET_LOGO_LEDS_OFF
// SET_NOZZLE_LEDS_OFF
// M117 off
// CHECK_PRINTER_STATE
// {% set progressbar_enabled = global.progressbar_enabled|int %}
// {% if progressbar_enabled == 0 %}
// SET_BAR_LEDS_OFF
// {% set _dummy = current_led_state.update({'bar_leds':'set_bar_leds_rainbow'}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=current_led_state VALUE="{current_led_state}"
// SET_BAR_LEDS_ON
// {% endif %}
// {% set _dummy = current_led_state.update({'fan_leds':'set_fan_leds_rainbow'}) %}
// {% set _dummy = current_led_state.update({'logo_leds':'set_logo_leds_rainbow_barf'}) %}
// {% set _dummy = current_led_state.update({'nozzle_leds':'set_nozzle_leds_white'}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=current_led_state VALUE="{current_led_state}"
// SET_FAN_LEDS_ON
// SET_LOGO_LEDS_ON
// M117 complete
// SET_NOZZLE_LEDS_ON
// _general_Debug msg="status_ready- exiting"
// printer.configfile.config['gcode_macro status_ready'].description : Helper: set the Stealthburner leds to the STATUS_READY LED_EFFECT
// printer.configfile.config.bed_mesh.horizontal_move_z : 10
// printer.configfile.config.bed_mesh.mesh_pps : 2,2
// printer.configfile.config.bed_mesh.mesh_min : 50.500, 48.00
// printer.configfile.config.bed_mesh.mesh_max : 250.500, 248.00
// printer.configfile.config.bed_mesh.split_delta_z : 0.0125
// printer.configfile.config.bed_mesh.probe_count : 9,9
// printer.configfile.config.bed_mesh.algorithm : bicubic
// printer.configfile.config.bed_mesh.move_check_distance : 3.0
// printer.configfile.config.bed_mesh.speed : 500
// printer.configfile.config.bed_mesh.relative_reference_index : 40
// printer.configfile.config['gcode_macro _SD_PRINTER_STATS'].gcode :
// _general_Debug msg="_SD_PRINTER_STATS - entering"
// {% set ST = printer.save_variables.variables.print_stats.time.service %}
// {% set Sh,Sm,Ss = (ST / 3600)|int, ((ST / 60) % 60)|int, (ST % 60)|int %}
// {% set TT = printer.save_variables.variables.print_stats.time.total %}
// {% set Th,Tm,Ts = (TT / 3600)|int, ((TT / 60) % 60)|int, (TT % 60)|int %}
// {% set FT = printer.save_variables.variables.print_stats.time.filter %}
// {% set Fh,Fm,Fs = (FT / 3600)|int, ((FT / 60) % 60)|int, (FT % 60)|int %}
// {% set Fil = printer.save_variables.variables.print_stats.filament|float / 1000.0 %}
// {action_respond_info("Printer Statistics:
// Total Print Time: %d:%02d:%02d
// Total Filament used: %.4fm
// Filter use time: %d:%02d:%02d
// Time since last Service: %d:%02d:%02d" %
// (Th, Tm, Ts, Fil, Fh, Fm, Fs, Sh, Sm, Ss))}
// _CHECK_FILTER
// _general_Debug msg="_SD_PRINTER_STATS - exiting"
// printer.configfile.config['gcode_macro _SD_PRINTER_STATS'].description : Helper: Print statistic of printer
// printer.configfile.config['led_effect sb_nozzle_cleaning'].layers :
// breathing  3 1 top (0.0, 0.02, 0.5)
// printer.configfile.config['led_effect sb_nozzle_cleaning'].leds :
// neopixel:sb_leds (17,18)
// printer.configfile.config['led_effect sb_nozzle_cleaning'].autostart : false
// printer.configfile.config['led_effect sb_nozzle_cleaning'].frame_rate : 2
// printer.configfile.config['gcode_macro Chamber_Lights_ON'].gcode :
// _general_Debug msg="Chamber_Lights_ON - entering"
// WLED_ON STRIP=Chamber_Lights
// _general_Debug msg="Chamber_Lights_ON - exiting"
// printer.configfile.config['gcode_macro Chamber_Lights_ON'].description : Helper: Turn on the WLED server that controls the Chamber RGB lights
// printer.configfile.config['led_effect sb_fan_homing'].layers :
// gradient 1.00 2.00 top (0.00,0.00,1.00),(0.00,0.00,0.00),(1.00,0.28,0.00)
// printer.configfile.config['led_effect sb_fan_homing'].leds :
// neopixel:sb_leds (1-8)
// printer.configfile.config['led_effect sb_fan_homing'].autostart : false
// printer.configfile.config['led_effect sb_fan_homing'].frame_rate : 5
// printer.configfile.config['led_effect sb_bar_standby'].layers :
// gradient 0.3 3 add (1.0,0.0,0.0),(0.0,0.0,1.0),(1.0,0.84,0.0),(1.0,0.25,0.0),(0.0,0.0,0.0),(1.0,0.0,0.0),(0.0,0.0,1.0),(1.0,0.84,0.0),(1.0,0.25,0.0),(0.0,0.0,0.0)
// printer.configfile.config['led_effect sb_bar_standby'].leds :
// neopixel:progress_bar_leds (1-33)
// printer.configfile.config['led_effect sb_bar_standby'].autostart : false
// printer.configfile.config['led_effect sb_bar_standby'].frame_rate : 5
// printer.configfile.config['led_effect set_fan_leds_rainbow'].layers :
// gradient 0.3 1 top (1.0,0.0,0.0),(0.0,0.0,1.0),(1.0,0.84,0.0)
// printer.configfile.config['led_effect set_fan_leds_rainbow'].leds :
// neopixel:sb_leds (1,2,3,4,5,6,7,8)
// printer.configfile.config['led_effect set_fan_leds_rainbow'].autostart : false
// printer.configfile.config['led_effect set_fan_leds_rainbow'].frame_rate : 5
// printer.configfile.config['mcu rpi'].serial : /tmp/klipper_host_mcu
// printer.configfile.config['gcode_macro _BedFansOff'].gcode :
// _general_Debug msg="_BedFansOff - entering"
// SET_FAN_SPEED FAN=Bedfan_Left SPEED=0                    ;set fan speed
// SET_FAN_SPEED FAN=Bedfan_Right SPEED=0                   ;set fan speed
// _general_Debug msg="_BedFansOff - exiting"
// printer.configfile.config['gcode_macro _BedFansOff'].description : Helper: Turns off the bed fans
// printer.configfile.config['gcode_macro SEARCH_PRINTER_OBJECTS'].gcode :
// {% set variable_search = True if (params.NAME or params.VALUE) else False %}         ;DUMP_VARIABLES
// {% set parameter_search = True if (params.C or params.S or params.P) else False %}   ;DUMP_PARAMETER
// {% set gcode_command_search = True if params.COMMAND else False %}                   ;SEARCH_GCODE_ROUTINES
// {% set get_variable_search = True if (params.VAR_NAME) else False %}                 ;GET_VARIABLE
// {% set search_vars_search = True if params.SVAR else False %}                        ;SEARCH_VARS
// {% if variable_search == False and parameter_search == False and gcode_command_search == False and
// get_variable_search == False and search_vars_search == False %}
// {% set print_printer_parameters = True %}
// {% set show_mesh = params.SHOW_MESH|default(0)|int %}
// {% else %}
// {% set print_printer_parameters = False %}
// {% endif %}
// {% if gcode_command_search %}
// {% set ns = namespace(num=0, delayed_num=0, homing_override=0, idle_timeout=0) %}
// {% elif variable_search %}
// {% set filter_name = params.NAME|default('')|string|lower %}
// {% set filter_value = params.VALUE|default('')|string|lower %}
// {% set show_cfg = params.SHOW_CFG|default(0)|int %}
// {% elif get_variable_search %}
// {% set names = (params.VAR_NAME).split('.')|list %}
// {% set join = (params.JOIN)|default(1)|int %}
// {% set _dummy0 = namespace( break = 0 ) %}
// {% elif search_vars_search %}
// {% set ns = namespace() %}
// {% set show_gcode = params.GCODE|default(0)|int %}
// {% endif %}
// {% if parameter_search or gcode_command_search or print_printer_parameters %}
// {% if parameter_search or gcode_command_search %}
// {% set config = True if (params.C or params.S or params.COMMAND) else False %}
// {% elif print_printer_parameters %}
// {% set config = False %}
// {% endif %}
// {% endif %}
// {% if parameter_search %}
// {% set path = 'config' if params.C  else 'settings' if params.S %}
// {% endif %}
// {% if gcode_command_search %}
// {% set gcode_cmd = params.COMMAND|default('')|string|lower %}
// {% endif %}
// {% if parameter_search %}
// {% set search = (params.C) if (params.C) else (params.S|lower) if (params.S) else (params.P) if (params.P) %}
// {% elif search_vars_search %}
// {% set search = params.SVAR|default('profile')|string|lower %}
// {% endif %}
// {% set out = [] %}
// {% if parameter_search or print_printer_parameters or variable_search or gcode_command_search %}
// {% for name1 in printer|sort %}
// {% if parameter_search or print_printer_parameters %}
// {% if config %}                                                                     ; print the searched printer.configfile[path] parameter
// {% if name1 is in ['configfile'] %}
// {% for name2 in printer[name1][path]|sort %}
// {% if search != "-99" %}
// {% if name2 is in [search] %}
// {% for name3, value in printer[name1][path][name2].items() %}
// {% set _dummy = out.append("printer.configfile.%s['%s'].%s = %s" %
// (path, name2, name3, value)) %}
// {% endfor %}
// {% endif %}
// {% else %}
// {% for name3, value in printer[name1][path][name2].items() %}
// {% set _dummy = out.append("printer.configfile.%s['%s'].%s = %s" %
// (path, name2, name3, value)) %}
// {% endfor %}
// {% endif %}
// {% endfor %}
// {% endif %}
// {% else %}
// {% for name2, value2 in printer[name1].items()|sort %} ; search for anything expext printer.configfile
// {% if search is not defined and name1 is not in ['configfile'] and show_mesh == 1 %} ; print all printer. parameters
// {% set _dummy = out.append("printer['%s'].%s = %s" % (name1, name2, value2)) %}
// {% elif search is not defined and name1 is not in ['configfile', 'bed_mesh'] and show_mesh == 0 %} ; print all printer. parameters except bed_mesh
// {% set _dummy = out.append("printer['%s'].%s = %s" % (name1, name2, value2)) %}
// {% elif search is defined and name1 is in [search] %} ; print the searched printer. parameter
// {% set _dummy = out.append("printer['%s'].%s = %s" % (name1, name2, value2)) %}
// {% endif %}
// {% endfor %}
// {% endif %}
// {% elif variable_search %}
// {% for name2 in printer[name1] %}
// {% if (show_cfg or not (name1|lower == 'configfile' and name2|lower in ['config', 'settings'])) and (filter_name in name1|lower or filter_name in name2|lower) and filter_value in printer[name1][name2]|string|lower %}
// {% set _dummy = out.append("printer['%s'].%s = %s" % (name1, name2, printer[name1][name2])) %}
// {% endif %}
// {% else %}
// {% if filter_name in name1|lower and filter_value in printer[name1]|string|lower %}
// {% set _dummy = out.append("printer['%s'] = %s" % (name1, printer[name1])) %}
// {% endif %}
// {% endfor %}
// {% elif gcode_command_search %}
// {% for name2 in printer[name1] %}
// {% if ( (name1|lower == 'configfile') and (name2|lower in ['config']) ) %}
// {% if printer[name1][name2].items() %}
// {% for name3, value3 in printer[name1][name2].items() %}
// {% if "gcode_macro " in name3 or "delayed_gcode" in name3 %}
// {% for name4, value4 in value3.items() %}
// {% if (("gcode" in name4) and ((gcode_cmd|lower) in (value4|lower))) %}
// {% if "gcode_macro " in name3 %}
// {% set ns.num = ns.num + 1 %}
// {% set _dummy = out.append('G-CODE_________name[%d]: %s' % (ns.num, name3[12:]|upper) ) %}
// {% elif "delayed_gcode" in name3 %}
// {% set ns.delayed_num = ns.delayed_num + 1 %}
// {% set _dummy = out.append("DELAYED_G-CODE_name[%d]: %s" % (ns.delayed_num, name3[14:]|upper) ) %}
// {% endif %}
// {% endif %}
// {% endfor %}
// {% elif ( name3 in ['homing_override','idle_timeout'] ) %}
// {% for name4, value4 in value3.items() %}
// {% if (("gcode" in name4) and ((gcode_cmd|lower) in (value4|lower))) %}
// {% if "homing_override" in name3 %}
// {% set ns.homing_override = ns.homing_override + 1 %}
// {% set _dummy = out.append('HOMING_OVERRIDE____[%d]: %s' % (ns.homing_override, name3|upper) ) %}
// {% elif "idle_timeout" in name3 %}
// {% set ns.idle_timeout = ns.idle_timeout + 1 %}
// {% set _dummy = out.append('IDLE_TIMEOUT_______[%d]: %s' % (ns.idle_timeout, name3|upper) ) %}
// {% endif %}
// {% endif %}
// {% endfor %}
// {% endif %}
// {% endfor %}
// {% endif %}
// {% endif %}
// {% endfor %}
// {% endif %}
// {% endfor %}
// {% elif get_variable_search %}
// {% if printer[names|first] %}
// {% set ns = namespace( out = printer[names|first] ) %}
// {% for name in names if _dummy0.break == 0 %}
// {% if loop.index > 1 %}  ;The current iteration of the loop. (1 indexed)
// {% if name in ns.out %}
// {% set ns.out = ns.out[name] %}
// {% elif name[0] in '0123456789' and ns.out is iterable and ns.out is not string and ns.out is not mapping and ns.out|length > name[0]|int %}
// {% set ns.out = ns.out[name|int] %}
// {% else %}
// {% set _dummy0.break = loop.index0 %}
// {% endif %}
// {% endif %}
// {% endfor %}
// {% if ns.out is boolean %}
// { action_respond_info('Type: boolean') }
// {% elif ns.out is float %}
// { action_respond_info('Type: float') }
// {% elif ns.out is integer %}
// { action_respond_info('Type: integer') }
// {% elif ns.out is mapping %}
// { action_respond_info('Type: mapping') }
// {% elif ns.out is string %}
// { action_respond_info('Type: string') }
// {% elif ns.out is iterable %}
// { action_respond_info('Type: iterable') }
// {% elif ns.out is none %}
// { action_respond_info('Type: none') }
// {% elif ns.out is undefined %}
// { action_respond_info('Type: undefined') }
// {% elif ns.out is callable %}
// { action_respond_info('Type: callable') }
// {% else %}
// { action_respond_info('Type: unknown') }
// {% endif %}
// {% if join and ns.out is iterable and ns.out is not string and ns.out is not mapping %}
// { action_respond_info('%s' % ns.out|join("\n")) }
// {% else %}
// {% if ns.out is mapping and join %}
// {% for key in ns.out|sort %}
// {% if _dummy0.break == 0 and (not('join=' in rawparams|lower)) %}
// { action_respond_info("printer['%s'].%s = %s" % (rawparams[9:], key, ns.out[key]) ) }
// {% elif _dummy0.break == 0 and ('join=' in rawparams|lower) %}
// {% set end = rawparams|length %}
// { action_respond_info("printer['%s'].%s = %s" % (rawparams[9:(end-7)], key, ns.out[key]) ) }
// {% endif %}
// {% endfor %}
// {% else %}
// { action_respond_info('%s' % ns.out) }
// {% endif %}
// {% endif %}
// {% if _dummy0.break != 0 %}
// {% set end2 = _dummy0.break|int %}
// { action_respond_info('"printer.%s" does not contain "%s"!' % (names[0:end2]|join('.'), names[end2])) }
// {% endif %}
// {% else %}
// {action_respond_info("Nothing found for \"SEARCH_PRINTER_OBJECTS %s\"" % rawparams)}
// {% endif %}
// {% elif search_vars_search %}
// {% set ns2 = namespace(flag = 0) %}  ; setup a flag variable so a message will be displayed if nothing is produced by the search
// {% for item in printer|sort  %}
// {% if ' ' in item %}
// {% set ns.path = ['printer', "['%s']" % (item), ''] %}
// {% else %}
// {% set ns.path = ['printer.', item, ''] %}
// {% endif %}
// {% if search in ns.path|lower %}
// {% set ns2.flag = 1%}
// { action_respond_info(ns.path|join) }
// {% endif %}
// {% if printer[item].items()|sort %}
// {% for childkey, child in printer[item].items() recursive %}
// {% set ns.path = ns.path[:loop.depth|int + 1] %}
// {% if ' ' in childkey %}
// {% set null = ns.path.append("['%s']" % (childkey)) %}
// {% else %}
// {% set null = ns.path.append(".%s" % (childkey)) %}
// {% endif %}
// {% if child is mapping  %}
// { loop(child.items()) }
// {% else %}
// {% if search in ns.path|lower %}
// {% set ns2.flag = 1%}
// { action_respond_info("%s : %s" % (ns.path|join, child)) }
// {% endif %}
// {% endif %}
// {% endfor %}
// {% endif %}
// {% endfor %}
// {% if ns2.flag == 0 %}
// {action_respond_info("Nothing found for \"SEARCH_PRINTER_OBJECTS %s\"" % rawparams)}
// {% endif %}
// {% endif %}
// {% if ( (gcode_command_search) and ( out|length > 0 ) ) %}
// {action_respond_info("Found a TOTAL of %d occurrances for '%s' command in USER MACROS." % ((ns.num + ns.delayed_num + ns.homing_override + ns.idle_timeout), gcode_cmd|upper)) }
// {action_respond_info("Found %d occurrance(s) in G-Code macros &\n found %d occurrance(s) in DELAYED G-Code macros &\n found %d occurrance(s) in HOMING_OVERRIDE macro &\n found %d occurrance(s) in IDLE_TIMEOUT macro"
// % (ns.num, ns.delayed_num, ns.homing_override, ns.idle_timeout)) }
// {action_respond_info("The following list of G-Code macros contain the command['%s']:" % gcode_cmd)}
// {% endif %}
// {% if parameter_search or variable_search or gcode_command_search or print_printer_parameters %}
// {% if out|length > 0 %}
// {action_respond_info(out|join("\n"))}
// {% else %}
// {action_respond_info("Nothing found for \"SEARCH_PRINTER_OBJECTS %s\"" % rawparams)}
// {% endif %}
// {% endif %}
// printer.configfile.config['gcode_macro SEARCH_PRINTER_OBJECTS'].description : Helper: Dump Klipper parameters located in printer object to terminal, which are specified by the given params; this combines 5 different searches into on PRINTER OBJECT search
// printer.configfile.config['gcode_macro _BedFansFast'].gcode :
// _general_Debug msg="_BedFansFast - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set FAST = user.bedfanvars.fast|float %}
// SET_FAN_SPEED FAN=Bedfan_Left SPEED={FAST}                         ;set fan speed
// SET_FAN_SPEED FAN=Bedfan_Right SPEED={FAST}                        ;set fan speed
// _general_Debug msg="_BedFansFast - exiting"
// printer.configfile.config['gcode_macro _BedFansFast'].description : Helper: Sets the speed of the BedFans to the speed dictated by the user.bedfanvars.fast
// printer.configfile.config['gcode_macro _PRINT_AR'].gcode :
// {% if params.SHOW_LCD|default('false') == 'true' %} M117 {params.T} {% endif %}
// {action_respond_info(params.T)}
// printer.configfile.config['gcode_macro _PRINT_AR'].description : Helper: Action response
// printer.configfile.config['gcode_macro TEST_WLED_ON'].gcode :
// _general_Debug msg="TEST_WLED_ON - entering"
// {% set STRIP = params.STRIP|default("Chamber_Lights")|string %}
// WLED_ON STRIP={STRIP}
// _general_Debug msg="TEST_WLED_ON - exiting"
// printer.configfile.config['gcode_macro TEST_WLED_ON'].description : Helper: Test the ability to turn on a WLED strip (resets to moonraker defaults)
// printer.configfile.config['gcode_macro GITHUB_BACKUP'].gcode :
// RUN_SHELL_COMMAND CMD=backup_to_github
// printer.configfile.config['gcode_macro GITHUB_BACKUP'].description : Helper: run a shell script to backup printer config to your GitHub Repo
// printer.configfile.config['gcode_macro _ATTACH_PROBE'].gcode :
// _Mag_Probe_Debug msg="_ATTACH_PROBE - entering"
// _MAGPROBE_STATUS_BUSY
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% if user.hw.mag_probe.ena %}
// {% if user.hw.mag_probe.klicky %} _ATTACH_KLICKY_PROBE {% endif %}
// {% if user.hw.mag_probe.euclid %} _ATTACH_EUCLID_PROBE {% endif %}
// {% endif %}
// _Mag_Probe_Debug msg="_ATTACH_PROBE - exiting"
// printer.configfile.config['gcode_macro _ATTACH_PROBE'].description : Helper: Mag Probe; Attach the correct MagProbe
// printer.configfile.config['led_effect set_bar_leds_rainbow'].layers :
// gradient 1.60 2 top (0.00,0.00,1.00),(0.00,0.00,0.00),(1.00,0.00,0.00),(0.0,0.0,0.0),(1.00,0.25,0.00),(0.00,0.00,0.00)
// printer.configfile.config['led_effect set_bar_leds_rainbow'].leds :
// neopixel:progress_bar_leds (1-33)
// printer.configfile.config['led_effect set_bar_leds_rainbow'].autostart : false
// printer.configfile.config['led_effect set_bar_leds_rainbow'].frame_rate : 5
// printer.configfile.config['gcode_macro G3201'].gcode :
// _general_Debug msg="G3201 - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set MeshToApply = user.filament.profile.MeshToApply|default() %}
// BED_MESH_CLEAR
// _CG28
// QUAD_GANTRY_LEVEL                    ; this does a ATTACH_PROBE, QGL, DOCK_PROBE
// CLEAN_NOZZLE
// ATTACH_PROBE_LOCK
// G28 Z
// STATUS_CALIBRATING_Z
// CALIBRATE_Z_BASE
// {% if MeshToApply != "NONE" %}
// {% if MeshToApply == "INSITU" %}
// BED_MESH_CALIBRATE PRINT_MIN={params.PRINT_MIN} PRINT_MAX={params.PRINT_MAX}
// BED_MESH_PROFILE SAVE=INSITU
// {% else %}
// BED_MESH_PROFILE LOAD={MeshToApply}
// {% endif %}
// M118 Applied {MeshToApply} mesh post sampling.
// {% endif %}
// DOCK_PROBE_UNLOCK
// _general_Debug msg="G3201 - exiting"
// printer.configfile.config['gcode_macro G3201'].description : Helper: Clears bed-mesh and performs G28, ATTACH_PROBE, QGL, DOCK_PROBE, CLEAN_NOZZLE, ATTACH_PROBE_LOCK, G28 Z, CALIBRATE_Z, applies bed-mesh, and DOCK_PROBE_UNLOCK
// printer.configfile.config['gcode_macro _COOL_WAIT'].gcode :
// _general_Debug msg="_COOL_WAIT - enter"
// M106 S250                                                  ;set part cooling fan speed
// {% set MINUTES = params.MINUTES|default(1)|int %}
// {% set MSG = params.MSG|default("Cooling...")|string %}
// STATUS_COOLING
// {% for i in range(0, MINUTES) %}
// M117 {MSG} {MINUTES-i} minute remaining.
// {% for s in range(0, 60) %}
// SET_LED LED=sb_leds INDEX=17 RED=0 GREEN=0 BLUE=0
// SET_LED LED=sb_leds INDEX=18 RED=0 GREEN=0 BLUE=.5
// G4 P500                                            ;wait 0.5 seconds
// SET_LED LED=sb_leds INDEX=17 RED=0 GREEN=0 BLUE=.5
// SET_LED LED=sb_leds INDEX=18 RED=0 GREEN=0 BLUE=0
// G4 P500                                            ;wait 0.5 seconds
// {% endfor %}
// {% endfor %}
// M107                                                        ;turn off part cooling fans
// _general_Debug msg="_COOL_WAIT - exit"
// printer.configfile.config['gcode_macro _COOL_WAIT'].description : Helper: Cooling cycle waiting routine
// printer.configfile.config['gcode_macro SET_LOGO_RAINBOW_LEDS_OFF'].gcode :
// _general_Debug msg="SET_LOGO_RAINBOW_LEDS_OFF - entering"
// SET_LED_EFFECT EFFECT=set_logo_leds_rainbow_barf STOP=1
// _general_Debug msg="SET_LOGO_RAINBOW_LEDS_OFF - exiting"
// printer.configfile.config['gcode_macro SET_LOGO_RAINBOW_LEDS_OFF'].description : Helper: Turn off the Stealthburner LOGO leds effect called "set_logo_leds_rainbow_barf" by using the SET_LED_EFFECT call
// printer.configfile.config['gcode_macro PARK'].gcode :
// _general_Debug msg="PARK - entering"
// {% if params.P and params.P|lower is not in ['bed','center','front','frontlow','rear'] %}
// {action_respond_info("\"PARK P=%s\" not valid use P=[BED,CENTER,FRONT,FRONTLOW,REAR]
// Default position BED will be used" % params.P|upper)}
// {% else %}
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set pos = params.P|default('bed')|lower %}
// _CG28                 ; home if not already homed
// G90                   ; absolute positioning
// G0 X{user.park[pos].x} Y{user.park[pos].y} Z{user.park[pos].z} F{user.speed.travel}
// {% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %} ; set back to relative
// {% endif %}
// _general_Debug msg="PARK - exiting"
// printer.configfile.config['gcode_macro PARK'].description : Helper: Park head depending on parameter P
// printer.configfile.config['led_effect set_bar_leds_progress'].layers :
// static  1  0 top (0.0, 0.0, 1.0)
// printer.configfile.config['led_effect set_bar_leds_progress'].leds :
// neopixel:progress_bar_leds (1-33)
// printer.configfile.config['led_effect set_bar_leds_progress'].autostart : false
// printer.configfile.config['led_effect set_bar_leds_progress'].frame_rate : 5
// printer.configfile.config['tmc2209 stepper_z'].uart_pin : PC6
// printer.configfile.config['tmc2209 stepper_z'].stealthchop_threshold : 0
// printer.configfile.config['tmc2209 stepper_z'].interpolate : false
// printer.configfile.config['tmc2209 stepper_z'].run_current : 0.3
// printer.configfile.config['tmc2209 stepper_z'].sense_resistor : 0.110
// printer.configfile.config['tmc2209 stepper_x'].uart_pin : PC4
// printer.configfile.config['tmc2209 stepper_x'].stealthchop_threshold : 0
// printer.configfile.config['tmc2209 stepper_x'].interpolate : false
// printer.configfile.config['tmc2209 stepper_x'].run_current : 0.8
// printer.configfile.config['tmc2209 stepper_x'].sense_resistor : 0.110
// printer.configfile.config['tmc2209 stepper_y'].uart_pin : PD11
// printer.configfile.config['tmc2209 stepper_y'].stealthchop_threshold : 0
// printer.configfile.config['tmc2209 stepper_y'].interpolate : false
// printer.configfile.config['tmc2209 stepper_y'].run_current : 0.8
// printer.configfile.config['tmc2209 stepper_y'].sense_resistor : 0.110
// printer.configfile.config['gcode_macro _ENABLE_PROGRESS_BAR'].gcode :
// _general_Debug msg="_ENABLE_PROGRESS_BAR - entering"
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=progressbar_enabled VALUE=1
// _general_Debug msg="_ENABLE_PROGRESS_BAR - exiting"
// printer.configfile.config['gcode_macro _ENABLE_PROGRESS_BAR'].description : Helper: Allow the progress bar to be used as a progress bar during a print
// printer.configfile.config['gcode_macro CANCEL_PRINT'].rename_existing : CANCEL_PRINT_BASE
// printer.configfile.config['gcode_macro CANCEL_PRINT'].description : Cancel the actual running print
// printer.configfile.config['gcode_macro CANCEL_PRINT'].gcode :
// _general_Debug msg="CANCEL_PRINT - entering"
// {% set user       = printer['gcode_macro _USER_VARIABLE'] %}
// {% set global     = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set filter_off = user.peripheral.filter.run_after_print %}
// {% set vent_on    = user.peripheral.vent.on_val %}
// {% set vent_off   = user.peripheral.vent.run_after_print %}
// {% set retract    = user.filament.retract.end if not printer.pause_resume.is_paused
// else user.filament.retract.cancel %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=execute VALUE=True
// SET_NOZZLE_LEDS_OFF
// STATUS_BUSY
// SET_VELOCITY_LIMIT ACCEL={user.speed.NPLimitAccel|float} ACCEL_TO_DECEL={user.speed.NPLimitDecel|float}
// M118 Cancel
// CANCEL_PRINT_BASE
// {% if global.state == 'Prepare' %}
// {% if not printer.extruder.can_extrude %}
// {action_respond_info("Extruder Temp to low heat to %3.1fC" % printer.configfile.settings.extruder.min_extrude_temp)}
// M109 S{printer.configfile.settings.extruder.min_extrude_temp}
// {% endif %}
// M83
// G1 E-{retract} F{user.speed.retract}
// {% endif %}
// CLEAR_PAUSE
// DISABLEFILAMENTSENSOR
// TURN_OFF_HEATERS
// CURRENT_NORMAL
// {% if params.PARK|default(0)|int == 1 or (not printer.pause_resume.is_paused and user.park.park_at_cancel) %}
// _TOOLHEAD_PARK P={params.PARK|default(0)} X={user.park.pause.x} Y={user.park.pause.y}
// {% endif %}
// {% if user.hw.chamber.fan %} M141 S{vent_on} {% endif %} ; vent chamber (setting fan to below ambient)
// _ADD_PRINT_TIME
// {% if params.ERROR|default(0)|int == 1 %}
// {% if user.hw.display.ena %} _LCD_KNOB COLOR=RED BLINK=0.2 {% endif %}
// _SD_PRINT_STATS R='abort'
// {% else %}
// {% if user.hw.display.ena %} _LCD_KNOB COLOR=BLUE {% endif %}
// _SD_PRINT_STATS R='canceled'
// {% endif %}
// _SD_PRINTER_STATS
// {% if user.hw.caselight.ena %} _CASELIGHT_OFF {% endif %}
// {% if user.hw.chamber.fan %} UPDATE_DELAYED_GCODE ID=_DELAY_VENT_OFF DURATION={vent_off} {% endif %}
// {% if user.hw.filter.ena %} UPDATE_DELAYED_GCODE ID=_DELAY_FILTER_OFF DURATION={filter_off} {% endif %}
// {% if user.unload_sd %} UPDATE_DELAYED_GCODE ID=_DELAY_SDCARD_RESET_FILE DURATION=10 {% endif %}
// {% if user.hw.display.ena %} UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=10  {% endif %}
// BED_MESH_CLEAR
// _COOL_WAIT MINUTES={user.filament.profile.PostPrintParkCool|float}
// SET_LED LED=sb_leds INDEX=17 RED=.2 GREEN=.5 BLUE=.2
// SET_LED LED=sb_leds INDEX=18 RED=.2 GREEN=.5 BLUE=.2
// STATUS_READY
// M118 Cancelled print, check nozzle clear.
// _general_Debug msg="CANCEL_PRINT - exiting"
// printer.configfile.config['gcode_macro BED_MESH_LOAD'].gcode :
// _Mag_Probe_Debug msg="BED_MESH_LOAD - entering"
// {% set name = '' if printer.save_variables.variables.plates is not defined
// else printer.save_variables.variables.plates.array[printer.save_variables.variables.plates.index].name + '-' %}
// {% set mesh_name = name + "Bed_Temp-" + printer.heater_bed.target|int|string + "C" %}
// {% if printer.configfile.config["bed_mesh " + mesh_name] is defined %}
// {action_respond_info("BED_MESH: \"%s\" loaded" % mesh_name)}
// BED_MESH_CLEAR
// BED_MESH_PROFILE LOAD={mesh_name}
// {% elif params.AUTO|default('false')|lower == 'true' %}
// {action_respond_info("BED_MESH: \"%s\" needs to be generated" % mesh_name)}
// BED_MESH_STORE SAVE=none PARK=false
// {% else %}
// {action_respond_info("BED_MESH: ERROR \"%s\" not defined" % mesh_name)}
// {% endif %}
// _Mag_Probe_Debug msg="BED_MESH_LOAD - exiting"
// printer.configfile.config['gcode_macro BED_MESH_LOAD'].description : Helper: Mag Probe; Load an existing mesh or generate a new one
// printer.configfile.config['gcode_macro _POWER_ON_RGB_PSU'].gcode :
// _general_Debug msg="_POWER_ON_RGB_PSU - entering"
// {action_call_remote_method("set_device_power",
// device="tasmota_plug_RGB",
// state="on")}
// _general_Debug msg="_POWER_ON_RGB_PSU - exiting"
// printer.configfile.config['gcode_macro _POWER_ON_RGB_PSU'].description : Helper: Turn on the Tasmota RGB_PSU smart plug
// printer.configfile.config['gcode_macro _TEST_PROBE1'].gcode :
// {% set LOOP = params.TEST_LOOP|float %}
// {% set PASS = printer.probe.last_z_result %}
// M118 Current Median is: {PASS}
// M118 Bed temp: {printer.heater_bed.temperature}
// M118 Time: {printer.toolhead.estimated_print_time}
// G0 Z25 F100
// G4 P2000
// SAVE_VARIABLE VARIABLE={LOOP} VALUE={printer.heater_bed.temperature},{PASS},{printer.toolhead.estimated_print_time}
// printer.configfile.config['gcode_macro _TEST_PROBE1'].description : Helper: CHK_HEAT_EXPANSION macro; save the results of the bed probing
// printer.configfile.config['gcode_macro _TEST_PROBE0'].gcode :
// {% set ZSpeed = printer["gcode_macro globalvariables"].zprobespeed|float %}
// {% set ZSamples = printer["gcode_macro globalvariables"].zprobesamples|int %}
// {% set ZTolerance = printer["gcode_macro globalvariables"].zprobetolerance|float %}
// {% set ZRetract = printer["gcode_macro globalvariables"].zproberetract|float %}
// {% set S_Retries = printer.configfile.config["probe"]["samples_tolerance_retries"]|int %}
// {% set LOOP = params.TEST_LOOP|float %}
// PROBE samples_result=median samples={ZSamples} speed={ZSpeed} samples_tolerance={ZTolerance} samples_tolerance_retries={S_Retries} sample_retract_dist={ZRetract}
// _TEST_PROBE1 TEST_LOOP={LOOP}
// printer.configfile.config['gcode_macro _TEST_PROBE0'].description : Helper: CHK_HEAT_EXPANSION macro; probes the bed 10 times
// printer.configfile.config['gcode_macro FILAMENT_UNLOAD'].gcode :
// _general_Debug msg="FILAMENT_UNLOAD - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% if printer.idle_timeout.state != "Printing" or printer.pause_resume.is_paused|lower == "true" %}
// {% if user.hw.runout.type == 'motion' %}
// _PRINT_AR T="RUNOUT Motion Sensor Enable: false"
// SET_FILAMENT_SENSOR SENSOR=runout ENABLE=0
// {% endif %}
// {% if user.hw.display.ena %} _LCD_KNOB COLOR=BLUE {% endif %}
// {% if not printer.extruder.can_extrude %}
// {action_respond_info("Extruder Temp to low heat to %3.1fC" % printer.configfile.settings.extruder.min_extrude_temp)}
// M109 S{printer.configfile.settings.extruder.min_extrude_temp}
// {% endif %}
// {% if user.hw.display.ena %} _LCD_KNOB {% endif %}
// _FILAMENT_BALL WAIT=3 ; ball up the filament tip and retract out past the extruder gears
// G1 E-{user.filament.unload_distance} F{user.speed.load}
// M109 S{printer.extruder.target} ; restore old extruder temperature
// _PRINT_AR T="Filament unloaded"
// SAVE_VARIABLE VARIABLE=filament_loaded VALUE=False
// {% if printer.gcode_move.absolute_extrude %} M82 {% endif %} ; set it back to absolute
// {% else %}
// _PRINT_AR T="Filament unloading disabled while printing!"
// {% endif %}
// _general_Debug msg="FILAMENT_UNLOAD - exiting"
// printer.configfile.config['gcode_macro FILAMENT_UNLOAD'].description : Helper: Unload filament and disable rounout while running
// printer.configfile.config['tmc2209 extruder'].uart_pin : EBBCan: PA15
// printer.configfile.config['tmc2209 extruder'].stealthchop_threshold : 0
// printer.configfile.config['tmc2209 extruder'].interpolate : false
// printer.configfile.config['tmc2209 extruder'].run_current : 0.55
// printer.configfile.config['tmc2209 extruder'].sense_resistor : 0.110
// printer.configfile.config.force_move.enable_force_move : True
// printer.configfile.config['gcode_macro _ATTACH_EUCLID_PROBE'].gcode :
// _Mag_Probe_Debug msg="_ATTACH_EUCLID_PROBE - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set move_z = [user.z_hop, printer.toolhead.position.z]|max %}     ; calc movement high
// G90                                                                  ; absolute positioning
// G0 Z{move_z} F{user.speed.z_hop}                                     ; move head up
// G0 X{user.probe.store.x} Y{user.probe.store.y} F{user.speed.travel}  ; step 1    G0 X50 Y306
// G0 X{user.probe.dock.x} F{user.speed.dock}                           ; step 2    G0 X0
// G0 X{user.probe.store.x} F{user.speed.dock}                          ; step 3    G0 X50
// {% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %} ; set back to relative
// _MAGPROBE_STATUS_READY
// _Mag_Probe_Debug msg="_ATTACH_EUCLID_PROBE - exiting"
// printer.configfile.config['gcode_macro _ATTACH_EUCLID_PROBE'].description : Helper: Mag Probe; Attach Euclid MagProbe
// printer.configfile.config['gcode_macro ADD_PLATE'].gcode :
// _general_Debug msg="ADD_PLATE - entering"
// {% set name = params.NAME|default('New')|string %}
// {% set offset = params.OFFSET|default(0.0)|float|round(3) %}
// {% if not printer.save_variables.variables.plates %}
// {action_respond_info("FLEXPLATE: Initialize Plate Array
// Add plate: %s with offset: %.3fmm at INDEX: 0" % (name,offset))}
// {% set plates = {'array': [{'name': name, 'offset': offset}], 'index' : 0} %}
// {% else %}
// {% set plates = printer.save_variables.variables.plates %}
// {action_respond_info("FLEXPLATE: Add plate: %s with offset: %.3fmm at INDEX: %d" % (name,offset,plates.array|length))}
// {% set _dummy = plates.array.append({'name': name, 'offset': offset}) %}
// {% endif %}
// SAVE_VARIABLE VARIABLE=plates VALUE="{plates}"
// _general_Debug msg="ADD_PLATE - exiting"
// printer.configfile.config['gcode_macro ADD_PLATE'].description : Helper: Add a flexplate to the list
// printer.configfile.config['mcu EBBCan'].canbus_uuid : befe3bd16119
// printer.configfile.config['board_pins tinyfan'].mcu : tinyfan
// printer.configfile.config['board_pins tinyfan'].aliases :
// FAN1_PWM=gpio0, FAN1_RPM=gpio7,
// FAN2_PWM=gpio1, FAN2_RPM=gpio8,
// FAN3_PWM=gpio2, FAN3_RPM=gpio9,
// FAN4_PWM=gpio3, FAN4_RPM=gpio10,
// AUX1_PWM=gpio4, AUX1_RPM=gpio26,
// AUX2_PWM=gpio5, AUX2_RPM=gpio27,
// AUX3_PWM=gpio6, AUX3_RPM=gpio28,
// G1=gpio29, G2=gpio11, G3=gpio12,
// G4=gpio13, G5=gpio14, G6=gpio15,
// LED=gpio16
// printer.configfile.config['gcode_macro Chamber_Lights_OFF'].gcode :
// _general_Debug msg="Chamber_Lights_OFF - entering"
// WLED_OFF STRIP=Chamber_Lights
// _general_Debug msg="Chamber_Lights_OFF - exiting"
// printer.configfile.config['gcode_macro Chamber_Lights_OFF'].description : Helper: Turn off the WLED server that controls the Chamber RGB lights
// printer.configfile.config['thermistor NTCALUG03-Mini-Lug'].resistance2 : 2483.8
// printer.configfile.config['thermistor NTCALUG03-Mini-Lug'].resistance3 : 336.75
// printer.configfile.config['thermistor NTCALUG03-Mini-Lug'].resistance1 : 32624.0
// printer.configfile.config['thermistor NTCALUG03-Mini-Lug'].temperature2 : 60.0
// printer.configfile.config['thermistor NTCALUG03-Mini-Lug'].temperature3 : 125.0
// printer.configfile.config['thermistor NTCALUG03-Mini-Lug'].temperature1 : 0.0
// printer.configfile.config['gcode_macro M190'].rename_existing : M99190
// printer.configfile.config['gcode_macro M190'].description : Helper: Wait for Bed Temperature with Bed Fan logic
// printer.configfile.config['gcode_macro M190'].gcode :
// _general_Debug msg="M190 - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set S = params.S|int %}
// {% set THRESHOLD = user.bedfanvars.threshold|int %}
// {% if S >= THRESHOLD %}
// _BedFansSlow
// {% else %}
// _BedFansOff
// {% endif %}
// M140 {% for p in params
// %}{'%s%s' % (p, params[p])}{%
// endfor %}
// {% if S != 0 %}
// TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={S|int} MAXIMUM={S|int + 5}
// {% endif %}
// {% if S >= THRESHOLD %}
// _BedFansFast
// {% endif %}
// _general_Debug msg="M190 - exiting"
// printer.configfile.config['gcode_macro _POWER_OFF_ESP_PSU'].gcode :
// _general_Debug msg="_POWER_OFF_ESP_PSU - entering"
// {action_call_remote_method("set_device_power",
// device="tasmota_plug_ESP",
// state="off")}
// _general_Debug msg="_POWER_OFF_ESP_PSU - exiting"
// printer.configfile.config['gcode_macro _POWER_OFF_ESP_PSU'].description : Helper: Turn off the Tasmota ESP_PSU smart plug
// printer.configfile.config['gcode_macro _MAG_PROBE'].gcode :
// _Mag_Probe_Debug msg="_MAG_PROBE - entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set _mag_probe = global._mag_probe %}
// {% set id = _mag_probe.id %}
// {% set id = 1 if id == 0 else id + 1 %} ; generate an id not equal to 0
// QUERY_PROBE ID={id}
// _PROBE_ACTION ACTION={params.ACTION} ID={id} {"RESPOND=" + params.RESPOND if params.RESPOND is defined else ""}
// {% set _dummy = _mag_probe.update({'id':id}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=_mag_probe VALUE="{_mag_probe}"
// _Mag_Probe_Debug msg="_MAG_PROBE - exiting"
// printer.configfile.config['gcode_macro _MAG_PROBE'].description : Helper: Mag Probe; Query MagProbe state and request action
// printer.configfile.config['thermistor Reprap-Thermistor-NTC-3950-100K'].resistance2 : 12540
// printer.configfile.config['thermistor Reprap-Thermistor-NTC-3950-100K'].resistance3 : 396
// printer.configfile.config['thermistor Reprap-Thermistor-NTC-3950-100K'].resistance1 : 125245
// printer.configfile.config['thermistor Reprap-Thermistor-NTC-3950-100K'].temperature2 : 80
// printer.configfile.config['thermistor Reprap-Thermistor-NTC-3950-100K'].temperature3 : 220
// printer.configfile.config['thermistor Reprap-Thermistor-NTC-3950-100K'].temperature1 : 20
// printer.configfile.config['gcode_shell_command plot_graph'].command : bash /home/pi/klipper_config/script/plot_graph.sh
// printer.configfile.config['gcode_shell_command plot_graph'].verbose : True
// printer.configfile.config['gcode_shell_command plot_graph'].timeout : 60.0
// printer.configfile.config.printer.square_corner_velocity : 5.0
// printer.configfile.config.printer.max_accel : 3000
// printer.configfile.config.printer.max_z_accel : 350
// printer.configfile.config.printer.max_velocity : 300
// printer.configfile.config.printer.max_z_velocity : 15
// printer.configfile.config.printer.kinematics : corexy
// printer.configfile.config['gcode_macro RESUME'].rename_existing : RESUME_BASE
// printer.configfile.config['gcode_macro RESUME'].description : Helper: Resume the actual running print
// printer.configfile.config['gcode_macro RESUME'].gcode :
// _general_Debug msg="RESUME - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set restore = global.restore %}
// {% if user.hw.display.ena %} _LCD_KNOB COLOR=RED {% endif %}
// RESUME_BASE VELOCITY={params.VELOCITY|default(user.speed.travel/60)}
// G0 E{user.filament.retract.pause} F{user.speed.retract}
// G0 F{restore.speed}
// {% if restore.absolute.extrude %}         M82 {% endif %} ; set back to absolute
// {% if not restore.absolute.coordinates %} G91 {% endif %} ; set back to relative
// _general_Debug msg="RESUME - exiting"
// printer.configfile.config['led_effect sb_logo_heating'].layers :
// chase  0.3  2 add (1.00,0.0,0),(0.00,0.00,0.0)
// printer.configfile.config['led_effect sb_logo_heating'].leds :
// neopixel:sb_leds (9,11,15,16,14,10)
// printer.configfile.config['led_effect sb_logo_heating'].autostart : false
// printer.configfile.config['led_effect sb_logo_heating'].frame_rate : 5
// printer.configfile.config['gcode_macro SET_NOZZLE_LEDS_OFF'].gcode :
// _general_Debug msg="SET_NOZZLE_LEDS_OFF - entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set nozzle_effect = global.current_led_state.nozzle_leds %}
// SET_LED_EFFECT EFFECT={nozzle_effect} STOP=1
// _general_Debug msg="SET_NOZZLE_LEDS_OFF - exiting"
// printer.configfile.config['gcode_macro SET_NOZZLE_LEDS_OFF'].description : Helper: Turn off the Stealthburner NOZZLE leds by using the SET_LED_EFFECT call
// printer.configfile.config['gcode_macro M900'].gcode :
// _general_Debug msg="M900 - entering"
// SET_PRESSURE_ADVANCE ADVANCE={params.K|default(0)}
// _general_Debug msg="M900 - exiting"
// printer.configfile.config['gcode_macro M900'].description : Helper: Set pressure advance
// printer.configfile.config['gcode_macro SET_LOGO_LEDS_ON'].gcode :
// _general_Debug msg="SET_LOGO_LEDS_ON - entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set logo_effect = global.current_led_state.logo_leds %}
// SET_LED_EFFECT EFFECT={logo_effect}
// _general_Debug msg="SET_LOGO_LEDS_ON - exiting"
// printer.configfile.config['gcode_macro SET_LOGO_LEDS_ON'].description : Helper: Turn on the stealthburner LOGO leds by using the SET_LED_EFFECT call
// printer.configfile.config['gcode_macro _SET_FILTER'].gcode :
// _general_Debug msg="_SET_FILTER - entering"
// SET_FAN_SPEED FAN=filter SPEED={params.S|default(0)}
// _general_Debug msg="_SET_FILTER - exiting"
// printer.configfile.config['gcode_macro _SET_FILTER'].description : Helper: Set Nevermore filter speed
// printer.configfile.config['gcode_macro _CASELIGHT_OFF'].gcode :
// _general_Debug msg="_CASELIGHT_OFF - entering"
// SET_PIN PIN=caselight VALUE=0
// _general_Debug msg="_CASELIGHT_OFF - exiting"
// printer.configfile.config['gcode_macro _CASELIGHT_OFF'].description : Helper: Turn OFF the 24V white CASE Lights
// printer.configfile.config['gcode_macro _PROBE_STOW'].gcode :
// DOCK_PROBE
// _error_if_probe_deployed ; Verify probe docked
// printer.configfile.config['gcode_macro _PROBE_STOW'].description : Helper:  Euclid Probe routine that Docks the Euclid Probe
// printer.configfile.config['delayed_gcode report_temperatures_loop'].gcode :
// _general_Debug msg="report_temperatures - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// M105
// {% if user.respond.display_info %}
// INFO_BEDFANS
// INFO_FAN_CHECK
// INFO_STATE_LEDS
// {% endif %}
// UPDATE_DELAYED_GCODE ID=report_temperatures_loop DURATION=3600
// _general_Debug msg="report_temperatures - exiting"
// printer.configfile.config['neopixel sb_leds'].initial_red : 0.0
// printer.configfile.config['neopixel sb_leds'].pin : EBBCan:PD3
// printer.configfile.config['neopixel sb_leds'].chain_count : 18
// printer.configfile.config['neopixel sb_leds'].initial_white : 0.0
// printer.configfile.config['neopixel sb_leds'].initial_green : 0.0
// printer.configfile.config['neopixel sb_leds'].initial_blue : 1.0
// printer.configfile.config['neopixel sb_leds'].color_order : GRB,GRB,GRB,GRB,GRB,GRB,GRB,GRB,GRB,GRB,GRB,GRB,GRB,GRB,GRB,GRB,GRBW,GRBW
// printer.configfile.config['gcode_macro _PROBE_ACTION'].gcode :
// _Mag_Probe_Debug msg="_PROBE_ACTION - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set _probe_action = global._probe_action %}
// {% set mag_probe = user.mag_probe %}
// {% set _check_state = global._check_state %}
// {% set man_state = _probe_action.man_state %}
// {% set action    = params.ACTION|default('undefined')|lower %}
// {% set id        = params.ID|default(0)|int %}
// {% set probe_id  = global.query_probe.id|default(0)|int %}
// {% set probe = 'attached' if printer.probe.last_query|int == 0
// else 'docked'   if printer.probe.last_query|int == 1 %}
// {% set error_id = 1 if printer.probe.last_query|lower == 'false'
// else 2 if id == 0 or id != probe_id
// else 3 if action is not in ['attach','dock','check_attach','check_dock','get_status']
// else 4 if action == 'check_dock'   and probe != 'docked'
// else 5 if action == 'check_attach' and probe != 'attached'
// else 0 %}
// {% set state = 'error'   if error_id  != 0
// else man_state if man_state != 'unknown'
// else probe %}
// {% if params.RESPOND|default(user.respond.probe_action)|int == 1 %}
// {% set txt = [] %}
// {% if man_state != 'unknown' %}{% set _dummy = txt.append("State was set to %s by SET_PROBE_STATUS" % man_state)%}{% endif %}
// {% if action == 'attach' and state == 'docked'   %}{% set _dummy = txt.append("Attach Probe")%}{% endif %}
// {% if action == 'attach' and state == 'attached' %}{% set _dummy = txt.append("Already attached")%}{% endif %}
// {% if action == 'dock'   and state == 'attached' %}{% set _dummy = txt.append("Dock Probe")%}{% endif %}
// {% if action == 'dock'   and state == 'docked'   %}{% set _dummy = txt.append("Already docked")%}{% endif %}
// {% if action == 'get_status' %}{% set _dummy = txt.append("Status: %s" % state)%}{% endif %}
// {% if txt|length > 0 %} {action_respond_info("MagProbe: %s" % txt|join("\n"))} {% endif %}
// {% endif %}
// {% if action == 'attach' and state == 'docked'   %} _ATTACH_PROBE {% endif %}
// {% if action == 'dock'   and state == 'attached' %} _DOCK_PROBE   {% endif %}
// {% set _dummy = _probe_action.update({'man_state': 'unknown' }) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=_probe_action VALUE="{_probe_action}"
// {% set _dummy = mag_probe.update({'state': state }) %}
// SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=mag_probe VALUE="{mag_probe}"
// {% set _dummy = _check_state.update({'error_id': error_id }) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=_check_state VALUE="{_check_state}"
// _CHECK_STATE
// _Mag_Probe_Debug msg="_PROBE_ACTION - exiting"
// printer.configfile.config['gcode_macro _PROBE_ACTION'].description : Helper: Mag Probe; Perform MagProbe action
// printer.configfile.config['gcode_macro _general_exit_point'].gcode :
// {% set function  = 'pre_' ~ params.FUNCTION %}
// RESTORE_GCODE_STATE NAME={function}
// printer.configfile.config['gcode_macro _general_exit_point'].description : Helper:  macro that restores the g-code state to its original state before a call was made to another macro
// printer.configfile.config.probe.samples_tolerance_retries : 10
// printer.configfile.config.probe.samples : 5
// printer.configfile.config.probe.pin : ^PG15
// printer.configfile.config.probe.lift_speed : 30.0
// printer.configfile.config.probe.sample_retract_dist : 0.8
// printer.configfile.config.probe.samples_result : median
// printer.configfile.config.probe.samples_tolerance : 0.0125
// printer.configfile.config.probe.x_offset : 0.500
// printer.configfile.config.probe.z_offset : 4.780
// printer.configfile.config.probe.speed : 7.5
// printer.configfile.config.probe.y_offset : 23.000
// printer.configfile.config['gcode_macro LIGHTS'].gcode :
// _general_Debug msg="LIGHTS - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set R = params.R|default(1)|float %}
// {% set G = params.G|default(1)|float %}
// {% set B = params.B|default(1)|float %}
// {% set W = params.W|default(0)|float %}
// {% set STRIP = params.STRIP|default('Chamber_Lights')|string %}
// {% set PS = params.PS|default(-1)|int %}
// {% set STATUS = params.STATUS|default('')|string %}
// {% if STATUS != '' %}
// {% set PS = user.status_presets.lookup[STATUS] %}
// {% endif %}
// {% if PS == user.status_presets.lookup.off %}
// LIGHTS_OFF
// {% elif PS >= 0 %}
// WLED_ON STRIP="Chamber_Lights" PRESET={PS}
// WLED_ON STRIP="Bottom_Lights" PRESET={PS}
// {% else %}
// SET_WLED STRIP="Chamber_Lights" RED={R} GREEN={G} BLUE={B} WHITE={W} TRANSMIT=1
// SET_WLED STRIP="Bottom_Lights" RED={R} GREEN={G} BLUE={B} WHITE={W} TRANSMIT=1
// {% endif %}
// _general_Debug msg="LIGHTS - exiting"
// printer.configfile.config['gcode_macro LIGHTS'].description : Helper: set WLED light strip; Example LIGHTS R=1 G=0 B=0 or LIGHTS PS=4 or e.g. LIGHTS STATUS=printing
// printer.configfile.config['temperature_fan Octopus_Driver_XYEZ_Fans'].tachometer_pin : ^tinyfan:FAN3_RPM
// printer.configfile.config['temperature_fan Octopus_Driver_XYEZ_Fans'].control : watermark
// printer.configfile.config['temperature_fan Octopus_Driver_XYEZ_Fans'].cycle_time : 0.00004
// printer.configfile.config['temperature_fan Octopus_Driver_XYEZ_Fans'].pin : tinyfan: FAN3_PWM
// printer.configfile.config['temperature_fan Octopus_Driver_XYEZ_Fans'].off_below : 0.2
// printer.configfile.config['temperature_fan Octopus_Driver_XYEZ_Fans'].max_temp : 100
// printer.configfile.config['temperature_fan Octopus_Driver_XYEZ_Fans'].shutdown_speed : 1.0
// printer.configfile.config['temperature_fan Octopus_Driver_XYEZ_Fans'].max_delta : 0.5
// printer.configfile.config['temperature_fan Octopus_Driver_XYEZ_Fans'].sensor_type : temperature_mcu
// printer.configfile.config['temperature_fan Octopus_Driver_XYEZ_Fans'].target_temp : 25.0
// printer.configfile.config['temperature_fan Octopus_Driver_XYEZ_Fans'].min_speed : 1.0
// printer.configfile.config['temperature_fan Octopus_Driver_XYEZ_Fans'].max_speed : 1.0
// printer.configfile.config['temperature_fan Octopus_Driver_XYEZ_Fans'].hardware_pwm : true
// printer.configfile.config['temperature_fan Octopus_Driver_XYEZ_Fans'].min_temp : 0
// printer.configfile.config['temperature_fan Octopus_Driver_XYEZ_Fans'].gcode_id : Octopus_Driver
// printer.configfile.config['temperature_fan Octopus_Driver_XYEZ_Fans'].max_power : 1.0
// printer.configfile.config['gcode_macro _magprobe_status_homing'].gcode :
// {% if printer['gcode_macro status_homing'] is defined %}
// _Mag_Probe_Debug msg="_magprobe_status_homing activating the LED STATUS_HOMING"
// STATUS_HOMING
// {% endif %}
// printer.configfile.config['gcode_macro _magprobe_status_homing'].description : Helper: Mag Probe, enable STATUS_HOMING LED state
// printer.configfile.config['temperature_fan Fan_EBB36_TH'].control : watermark
// printer.configfile.config['temperature_fan Fan_EBB36_TH'].cycle_time : 1.0
// printer.configfile.config['temperature_fan Fan_EBB36_TH'].target_temp : 35
// printer.configfile.config['temperature_fan Fan_EBB36_TH'].pin : EBBCan: PB9
// printer.configfile.config['temperature_fan Fan_EBB36_TH'].off_below : 0.1
// printer.configfile.config['temperature_fan Fan_EBB36_TH'].max_temp : 100
// printer.configfile.config['temperature_fan Fan_EBB36_TH'].shutdown_speed : 1.0
// printer.configfile.config['temperature_fan Fan_EBB36_TH'].max_delta : 0.5
// printer.configfile.config['temperature_fan Fan_EBB36_TH'].sensor_type : temperature_mcu
// printer.configfile.config['temperature_fan Fan_EBB36_TH'].max_speed : 1.0
// printer.configfile.config['temperature_fan Fan_EBB36_TH'].sensor_mcu : EBBCan
// printer.configfile.config['temperature_fan Fan_EBB36_TH'].min_speed : 1.0
// printer.configfile.config['temperature_fan Fan_EBB36_TH'].kick_start_time : 1.0
// printer.configfile.config['temperature_fan Fan_EBB36_TH'].min_temp : 0
// printer.configfile.config['temperature_fan Fan_EBB36_TH'].gcode_id : Fan_EBB36_TH
// printer.configfile.config['temperature_fan Fan_EBB36_TH'].max_power : 1.0
// printer.configfile.config['led_effect sb_bar_homing'].layers :
// gradient 1.00 2 top (0.00,0.00,1.00),(0.00,0.00,0.00),(1.00,0.25,0.00),(0.0,0.0,0.0)
// printer.configfile.config['led_effect sb_bar_homing'].leds :
// neopixel:progress_bar_leds (1-33)
// printer.configfile.config['led_effect sb_bar_homing'].autostart : false
// printer.configfile.config['led_effect sb_bar_homing'].frame_rate : 5
// printer.configfile.config['gcode_macro PARK_UpperRight'].gcode :
// _general_Debug msg="PARK_UpperRight - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set Z_MAX = printer.configfile.config.stepper_z.position_max|float -1 %}
// {% set X_MAX = printer.configfile.config.stepper_x.position_max|float -1 %}
// {% set Z_POS = printer.toolhead.position.z + 10 %}
// {% set defaultParkHeight = user.park.ParkHeightPercentage|float %}
// {% set ParkHeight = params.PARK_HEIGHT_PERCENT|default(defaultParkHeight)|float %}
// {% if ParkHeight < 0.2  %}
// {% set ParkHeight = 0.2 %}
// {% endif %}
// _general_entry_point function=PARK_UpperRight
// _CG28
// G0 X{X_MAX} Y20 Z{ [(Z_MAX*ParkHeight), [Z_POS, Z_MAX]|min]|max } F4000
// _general_exit_point function=PARK_UpperRight
// _general_Debug msg="PARK_UpperRight - exiting"
// printer.configfile.config['gcode_macro PARK_UpperRight'].description : Helper: Parks the toolhead in the upper-right position
// printer.configfile.config['gcode_macro _POWER_OFF_ESP2'].gcode :
// _general_Debug msg="_POWER_OFF_ESP2 - entering"
// {action_call_remote_method("set_device_power",
// device="tasmota_plug_ESP2",
// state="off")}
// _general_Debug msg="_POWER_OFF_ESP2 - exiting"
// printer.configfile.config['gcode_macro _POWER_OFF_ESP2'].description : Helper: Turn off the Tasmota ESP2 smart plug
// printer.configfile.config['heater_fan fan_hotend'].tachometer_pin : ^EBBCan: PB6
// printer.configfile.config['heater_fan fan_hotend'].heater : extruder
// printer.configfile.config['heater_fan fan_hotend'].cycle_time : 0.08
// printer.configfile.config['heater_fan fan_hotend'].pin : EBBCan: PA1
// printer.configfile.config['heater_fan fan_hotend'].off_below : 0.10
// printer.configfile.config['heater_fan fan_hotend'].heater_temp : 40
// printer.configfile.config['heater_fan fan_hotend'].fan_speed : 1.0
// printer.configfile.config['heater_fan fan_hotend'].max_power : 1.0
// printer.configfile.config['heater_fan fan_hotend'].kick_start_time : 0.2
// printer.configfile.config['gcode_macro set_fan_leds_on'].gcode :
// _general_Debug msg="set_fan_leds_on - entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set fan_effect = global.current_led_state.fan_leds %}
// SET_LED_EFFECT EFFECT={fan_effect}
// _general_Debug msg="set_fan_leds_on - exiting"
// printer.configfile.config['gcode_macro set_fan_leds_on'].description : Helper: Turn on the stealthburner fan leds by using the SET_LED_EFFECT call
// printer.configfile.config['gcode_macro status_homing'].gcode :
// _general_Debug msg="status_homing- entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set current_led_state = global.current_led_state %}
// SET_FAN_LEDS_OFF
// SET_LOGO_LEDS_OFF
// SET_NOZZLE_LEDS_OFF
// M117 off
// CHECK_PRINTER_STATE
// {% set progressbar_enabled = global.progressbar_enabled|int %}
// {% if progressbar_enabled == 0 %}
// SET_BAR_LEDS_OFF
// {% set _dummy = current_led_state.update({'bar_leds':'sb_bar_homing'}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=current_led_state VALUE="{current_led_state}"
// SET_BAR_LEDS_ON
// {% endif %}
// {% set _dummy = current_led_state.update({'fan_leds':'sb_fan_homing'}) %}
// {% set _dummy = current_led_state.update({'logo_leds':'sb_logo_homing'}) %}
// {% set _dummy = current_led_state.update({'nozzle_leds':'sb_nozzle_homing'}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=current_led_state VALUE="{current_led_state}"
// SET_FAN_LEDS_ON
// SET_LOGO_LEDS_ON
// M117 homing
// SET_NOZZLE_LEDS_ON
// _general_Debug msg="status_homing- exiting"
// printer.configfile.config['gcode_macro status_homing'].description : Helper: set the Stealthburner leds to the STATUS_HOMING LED_EFFECT
// printer.configfile.config['gcode_macro progress_bar_leds_off'].gcode :
// _general_Debug msg="progress_bar_leds_off - entering"
// SET_LED LED=progress_bar_leds RED=0 GREEN=0 BLUE=0
// _general_Debug msg="progress_bar_leds_off - exiting"
// printer.configfile.config['gcode_macro progress_bar_leds_off'].description : Helper: Turn off the progress_bar via the SET_LED command
// printer.configfile.config['gcode_macro DIM_LIGHTS'].gcode :
// _general_Debug msg="DIM_LIGHTS - entering"
// LIGHTS PS=47
// SET_LED LED=sb_leds INDEX=17 WHITE=0.5
// SET_LED LED=sb_leds INDEX=18 WHITE=0.5
// _general_Debug msg="DIM_LIGHTS - exiting"
// printer.configfile.config['gcode_macro DIM_LIGHTS'].description : Helper: Set NOZZLE lights to a dim preset
// printer.configfile.config['gcode_macro SET_FAN_LEDS_BY_NAME'].gcode :
// _general_Debug msg="SET_FAN_LEDS_BY_NAME - entering"
// {% set color_name = params.COLOR %}
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set color = global.sb_vars.colors[color_name|lower] %}
// _SET_FAN_LEDS R={color.r} G={color.g} B={color.b} W={color.w}
// _general_Debug msg="SET_FAN_LEDS_BY_NAME - exiting"
// printer.configfile.config['gcode_macro SET_FAN_LEDS_BY_NAME'].description : Helper: Sets the color of the stealthburner FAN leds by only using the name of the color
// printer.configfile.config['gcode_macro _PROBE_DEPLOY'].gcode :
// ATTACH_PROBE
// _error_if_probe_not_deployed ; Verify probe attached
// printer.configfile.config['gcode_macro _PROBE_DEPLOY'].description : Helper: Euclid Probe routine that Attaches the Euclid Probe
// printer.configfile.config['gcode_macro _CHECK_CONSITENT'].gcode :
// _general_Debug msg="_CHECK_CONSITENT - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set text = ["CONFIG: ERROR"] %}
// {% if user.run is not defined %}
// {% set _dummy = text.append("_USER_VARIABLE macro missing") %}
// {% elif not user.run %}
// {% set _dummy = text.append("_USER_VARIABLE macro not executed") %}
// {% endif %}
// {% if global.run is not defined %}
// {% set _dummy = text.append("_GLOBAL_VARS macro missing") %}
// {% elif not global.run %}
// {% set _dummy = text.append("_GLOBAL_VARS macro not executed") %}
// {% endif %}
// {% if 'save_variables' not in printer %}
// {% set _dummy = text.append("[save_variables] missing") %}
// {% endif %}
// {% if 'virtual_sdcard' not in printer %}
// {% set _dummy = text.append("[virtual_sdcard] missing") %}
// {% endif %}
// {% if text|length > 1 %}
// {action_respond_info(text|join("\n"))}
// {% endif %}
// _general_Debug msg="_CHECK_CONSITENT - exiting"
// printer.configfile.config['gcode_macro _CHECK_CONSITENT'].description : Helper: Check that some criteria are meet in the printer.cfg
// printer.configfile.config['thermistor ATC-Semitec-104NT-4-R025H42G'].resistance2 : 1074
// printer.configfile.config['thermistor ATC-Semitec-104NT-4-R025H42G'].resistance3 : 82.78
// printer.configfile.config['thermistor ATC-Semitec-104NT-4-R025H42G'].resistance1 : 100000
// printer.configfile.config['thermistor ATC-Semitec-104NT-4-R025H42G'].temperature2 : 160
// printer.configfile.config['thermistor ATC-Semitec-104NT-4-R025H42G'].temperature3 : 300
// printer.configfile.config['thermistor ATC-Semitec-104NT-4-R025H42G'].temperature1 : 25
// printer.configfile.config['gcode_macro _CASELIGHT_ON'].gcode :
// _general_Debug msg="_CASELIGHT_ON - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// SET_PIN PIN=caselight VALUE={user.peripheral.caselight.on_val}
// _general_Debug msg="_CASELIGHT_ON - exiting"
// printer.configfile.config['gcode_macro _CASELIGHT_ON'].description : Helper: Turn ON the 24V white CASE Lights
// printer.configfile.config['gcode_macro CHANGE_PLATE_VALUE'].gcode :
// _general_Debug msg="CHANGE_PLATE_VALUE - entering"
// {% if not printer.save_variables.variables.plates %}
// {action_respond_info("FLEXPLATE: No Plate Array defined. ABORDED")}
// {% else %}
// {% set plates = printer.save_variables.variables.plates %}
// {% set index = params.INDEX|default(plates.index)|int %}
// {% if index < 0 or index >= plates.array|length %}
// {action_respond_info("FLEXPLATE: Index out of range [0..%d]. ABORDED" % (plates.array|length-1))}
// {% else %}
// {% set change_txt = [] %}
// {% if 'NAME' in params|upper %}
// {% set _dummy = change_txt.append("name to %s" % params.NAME|string) %}
// {% set _dummy = plates.array[index].update({'name': params.NAME|string}) %}
// {% endif %}
// {% if 'OFFSET' in params|upper %}
// {% set _dummy = change_txt.append("offset to %.3fmm" % params.OFFSET|float|round(3)) %}
// {% set _dummy = plates.array[index].update({'offset': params.OFFSET|float|round(3)}) %}
// {% endif %}
// {% if change_txt|length > 0 %}
// {action_respond_info("FLEXPLATE: Changed %s at plate with INDEX %d" % (change_txt|join(" and "),index))}
// SAVE_VARIABLE VARIABLE=plates VALUE="{plates}"
// {% else %}
// {action_respond_info("FLEXPLATE: Nothing changed at plate with INDEX %d" % index)}
// {% endif %}
// {% endif %}
// {% endif %}
// _general_Debug msg="CHANGE_PLATE_VALUE - exiting"
// printer.configfile.config['gcode_macro CHANGE_PLATE_VALUE'].description : Helper: Change name or offset of an flexplate in the list
// printer.configfile.config.respond.default_type : echo
// printer.configfile.config['gcode_macro _DISPLAY_PRINT_TIME'].gcode :
// _general_Debug msg="_DISPLAY_PRINT_TIME - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set totaltime = params.SECONDS|int if 'SECONDS' in params|upper
// else printer.save_variables.variables.print_stats.time.total %}
// {% set prefix = params.PREFIX|default('Total') %}
// {% set h,m,s = (totaltime / 3600)|int, ((totaltime / 60) % 60)|int, (totaltime % 60)|int %}
// {action_respond_info("Print time %s %d:%02d:%02d" % (prefix,h,m,s))}
// M117 {prefix} {h}:{'%02d' % m}:{'%02d' % s}
// {% if user.hw.display.ena %} UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=10 {% endif %}
// _general_Debug msg="_DISPLAY_PRINT_TIME - exiting"
// printer.configfile.config['gcode_macro _DISPLAY_PRINT_TIME'].description : Helper: Print actual stored print time or convert seconds to h:m:s
// printer.configfile.config['gcode_macro _DOCK_PROBE'].gcode :
// _Mag_Probe_Debug msg="_DOCK_PROBE - entering"
// _MAGPROBE_STATUS_BUSY
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% if user.hw.mag_probe.ena %}
// {% if user.hw.mag_probe.klicky %} _DOCK_KLICKY_PROBE {% endif %}
// {% if user.hw.mag_probe.euclid %} _DOCK_EUCLID_PROBE {% endif %}
// {% endif %}
// _Mag_Probe_Debug msg="_DOCK_PROBE - exiting"
// printer.configfile.config['gcode_macro _DOCK_PROBE'].description : Helper: Mag Probe; Dock the correct MagProbe
// printer.configfile.config['gcode_macro M600'].gcode :
// _general_Debug msg="M600 - entering"
// PAUSE Y=10                        ; Pause, Y is the position in which to park the toolhead
// _general_Debug msg="M600 - exiting"
// printer.configfile.config['gcode_macro M600'].description : Helper: Filament change
// printer.configfile.config['gcode_macro M601'].gcode :
// _general_Debug msg="M601 - entering"
// RESUME                ; Resume
// _general_Debug msg="M601 - exiting"
// printer.configfile.config['gcode_macro M601'].description : Helper: Resume print job after a color change
// printer.configfile.config['delayed_gcode _DELAY_FILTER_OFF'].gcode :
// _general_Debug msg="_DELAY_FILTER_OFF - entering"
// {% if printer.print_stats.state|lower != "paused" and printer.print_stats.state|lower != "printing" %}
// _SET_FILTER
// _FILTER_INFO
// {% endif %}
// _general_Debug msg="_DELAY_FILTER_OFF - exiting"
// printer.configfile.config.virtual_sdcard.path : /home/pi/sdcard
// printer.configfile.config['led_effect sb_logo_cooling'].layers :
// chase  0.3  2 add (0.00,0.00,1.00),(0.00,0.00,0.0)
// printer.configfile.config['led_effect sb_logo_cooling'].leds :
// neopixel:sb_leds (9,11,15,16,14,10)
// printer.configfile.config['led_effect sb_logo_cooling'].autostart : false
// printer.configfile.config['led_effect sb_logo_cooling'].frame_rate : 5
// printer.configfile.config['gcode_macro _do_error_if_probe_not_deployed'].gcode :
// {% if printer.probe.last_query %}
// {action_raise_error("ERROR: Probe unsuccessfully deployed, please check printer.")}
// {% else %}
// M118 Euclid probe has been attached.
// {% endif %}
// printer.configfile.config['gcode_macro _do_error_if_probe_not_deployed'].description : Helper: Display error message if probe is not attached when it is supposed to be attached
// printer.configfile.config['gcode_macro status_part_ready'].gcode :
// _general_Debug msg="status_part_ready- entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set current_led_state = global.current_led_state %}
// SET_FAN_LEDS_OFF
// SET_LOGO_LEDS_OFF
// SET_NOZZLE_LEDS_OFF
// M117 off
// CHECK_PRINTER_STATE
// {% set progressbar_enabled = global.progressbar_enabled|int %}
// {% if progressbar_enabled == 0 %}
// SET_BAR_LEDS_OFF
// {% set _dummy = current_led_state.update({'bar_leds':'sb_bar_part_ready'}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=current_led_state VALUE="{current_led_state}"
// SET_BAR_LEDS_ON
// {% endif %}
// {% set _dummy = current_led_state.update({'fan_leds':'sb_fan_part_ready'}) %}
// {% set _dummy = current_led_state.update({'logo_leds':'sb_logo_part_ready'}) %}
// {% set _dummy = current_led_state.update({'nozzle_leds':'sb_nozzle_part_ready'}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=current_led_state VALUE="{current_led_state}"
// SET_FAN_LEDS_ON
// SET_LOGO_LEDS_ON
// M117 ready
// SET_NOZZLE_LEDS_ON
// _general_Debug msg="status_part_ready- exiting"
// printer.configfile.config['gcode_macro status_part_ready'].description : Helper: set the Stealthburner leds to the STATUS_PART_READY LED_EFFECT
// printer.configfile.config['gcode_macro Bottom_Lights_ON'].gcode :
// _general_Debug msg="Bottom_Lights_ON - entering"
// WLED_ON STRIP=Bottom_Lights
// _general_Debug msg="Bottom_Lights_ON - exiting"
// printer.configfile.config['gcode_macro Bottom_Lights_ON'].description : Helper:  Turn on the WLED server that controls the Bottom lights
// printer.configfile.config['temperature_sensor bed'].min_temp : 0
// printer.configfile.config['temperature_sensor bed'].sensor_type : gulfcoast-epcos-m3-hex-stud
// printer.configfile.config['temperature_sensor bed'].gcode_id : BedT2
// printer.configfile.config['temperature_sensor bed'].sensor_pin : PF5
// printer.configfile.config['temperature_sensor bed'].max_temp : 125
// printer.configfile.config['gcode_macro QUERY_PROBE'].rename_existing : QUERY_PROBE_BASE
// printer.configfile.config['gcode_macro QUERY_PROBE'].description : Helper: Mag Probe; Return the status of the z-probe and store ID
// printer.configfile.config['gcode_macro QUERY_PROBE'].gcode :
// _Mag_Probe_Debug msg="QUERY_PROBE - entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set query_probe = global.query_probe %}
// QUERY_PROBE_BASE
// {% set _dummy = query_probe.update({'id': params.ID|default(0) }) %}      ; call id 0 means invalid
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=query_probe VALUE="{query_probe}"
// _Mag_Probe_Debug msg="QUERY_PROBE - exiting"
// printer.configfile.config['temperature_sensor Q_TinyFan'].min_temp : 0
// printer.configfile.config['temperature_sensor Q_TinyFan'].sensor_type : temperature_mcu
// printer.configfile.config['temperature_sensor Q_TinyFan'].sensor_mcu : tinyfan
// printer.configfile.config['temperature_sensor Q_TinyFan'].gcode_id : TinyFanPCB
// printer.configfile.config['temperature_sensor Q_TinyFan'].max_temp : 125
// printer.configfile.config['gcode_macro SET_WLED'].gcode :
// {% set strip = params.STRIP|default('lights')|string %}
// {% set red = params.RED|default(0)|float %}
// {% set green = params.GREEN|default(0)|float %}
// {% set blue = params.BLUE|default(0)|float %}
// {% set white = params.WHITE|default(0)|float %}
// {% set index = params.INDEX|default(-1)|int %}
// {% set transmit = params.TRANSMIT|default(1)|int %}
// {action_call_remote_method("set_wled",
// strip=strip,
// red=red, green=green, blue=blue, white=white,
// index=index, transmit=transmit)}
// printer.configfile.config['gcode_macro SET_WLED'].description : Helper: SET_LED like functionality for WLED, applies to all active segments
// printer.configfile.config['gcode_macro _POWER_OFF_RGB_PSU'].gcode :
// _general_Debug msg="_POWER_OFF_RGB_PSU - entering"
// {action_call_remote_method("set_device_power",
// device="tasmota_plug_RGB",
// state="off")}
// _general_Debug msg="_POWER_OFF_RGB_PSU - exiting"
// printer.configfile.config['gcode_macro _POWER_OFF_RGB_PSU'].description : Helper: Turn off the Tasmota RGB_PSU smart plug
// printer.configfile.config['gcode_macro _ATTACH_KLICKY_PROBE'].gcode :
// _Mag_Probe_Debug msg="_ATTACH_KLICKY_PROBE - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set move_z = [user.z_hop, printer.toolhead.position.z]|max %}     ; calc movement high
// G90                                                                  ; absolute positioning
// G0 Z{move_z} F{user.speed.z_hop}                                     ; move head up
// G0 X{user.probe.store.x} Y{user.probe.store.y} F{user.speed.travel}  ; step 1
// G0 X{user.probe.dock.x} F{user.speed.dock}                           ; step 2
// G0 Y{user.probe.dock.y} F{user.speed.dock}                           ; step 3
// {% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %} ; set back to relative
// _MAGPROBE_STATUS_READY
// _Mag_Probe_Debug msg="_ATTACH_KLICKY_PROBE - exiting"
// printer.configfile.config['gcode_macro _ATTACH_KLICKY_PROBE'].description : Helper: Mag Probe; Attach Klicky MagProbe
// printer.configfile.config['gcode_macro status_calibrating_z'].gcode :
// _general_Debug msg="status_calibrating_z- entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set current_led_state = global.current_led_state %}
// SET_FAN_LEDS_OFF
// SET_LOGO_LEDS_OFF
// SET_NOZZLE_LEDS_OFF
// M117 off
// CHECK_PRINTER_STATE
// {% set progressbar_enabled = global.progressbar_enabled|int %}
// {% if progressbar_enabled == 0 %}
// SET_BAR_LEDS_OFF
// {% set _dummy = current_led_state.update({'bar_leds':'sb_bar_calibrating_z'}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=current_led_state VALUE="{current_led_state}"
// SET_BAR_LEDS_ON
// {% endif %}
// {% set _dummy = current_led_state.update({'fan_leds':'sb_fan_calibrating_z'}) %}
// {% set _dummy = current_led_state.update({'logo_leds':'sb_logo_calibrating_z'}) %}
// {% set _dummy = current_led_state.update({'nozzle_leds':'sb_nozzle_calibrating_z'}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=current_led_state VALUE="{current_led_state}"
// SET_FAN_LEDS_ON
// SET_LOGO_LEDS_ON
// M117 calibrating_z
// SET_NOZZLE_LEDS_ON
// _general_Debug msg="status_calibrating_z- exiting"
// printer.configfile.config['gcode_macro status_calibrating_z'].description : Helper: set the Stealthburner leds to the STATUS_CALIBRATING_Z LED_EFFECT
// printer.configfile.config['gcode_macro BED_MESH_STORE'].gcode :
// _Mag_Probe_Debug msg="BED_MESH_STORE - entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set bed_mesh_store = global.bed_mesh_store %}
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set name = '' if printer.save_variables.variables.plates is not defined
// else printer.save_variables.variables.plates.array[printer.save_variables.variables.plates.index].name + '-' %}
// {% set mesh_name = name + "Bed_Temp-" + printer.heater_bed.target|int|string + "C" %}
// {action_respond_info("BED_MESH: Generate \"%s\"" % mesh_name)}
// BED_MESH_CALIBRATE PROFILE={mesh_name}
// {% if params.PARK|default('true')|lower == 'true' %}
// G90                                                                   ; set absolute
// G0 Z{user.park.bed.z} F{user.speed.z_hop}                             ; lift first
// G0 X{user.park.bed.x} Y{user.park.bed.y} F{user.speed.travel}         ; park toolhead
// {% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}  ; set it back to relative
// {% endif %}
// {% if params.SAVE|default('none')|lower == 'now' %}
// _PRINT_AR T="BED_MESH: Save Config!"
// SAVE_CONFIG
// {% elif params.SAVE|default('none')|lower == 'later' %}
// _PRINT_AR T="BED_MESH: Save Config after print done"
// {% set _dummy = bed_mesh_store.update({'save_at_end': True }) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=bed_mesh_store VALUE="{bed_mesh_store}"
// {% endif %}
// _Mag_Probe_Debug msg="BED_MESH_STORE - exiting"
// printer.configfile.config['gcode_macro BED_MESH_STORE'].description : Helper: Mag Probe; Generate a mesh, name it and run save_config if requested
// printer.configfile.config['gcode_macro PRESSURE_ADVANCE_ADD'].gcode :
// _general_Debug msg="PRESSURE_ADVANCE_ADD - entering"
// {% if 'FILAMENT' not in params|upper %}
// {action_respond_info("PRESSURE ADVANCE: FILAMENT must be defined use \"PRESSURE_ADVANCE_ADD FILAMENT=id\" as a minimum")}
// {% else %}
// {% set cfg = printer.configfile.settings.extruder %}
// {% set id = params.FILAMENT|string %}
// {% set nozzle = params.NOZZLE|default(0.40)|float|round(2) %}
// {% if not printer.save_variables.variables.pressure_advance %}
// {action_respond_info("PRESSURE ADVANCE: Initialize with Filament %s" % (id))}
// {% set pa_dic = [{'id' : id,
// 'val': [{'nozzle': nozzle,
// 'pa'    : params.PRESSURE_ADVANCE|default(cfg.pressure_advance)|float|round(3),
// 'st'    : params.SMOOTH_TIME|default(cfg.pressure_advance_smooth_time)|float|round(3)}]}] %}
// {% else %}
// {% set pa_dic = printer.save_variables.variables.pressure_advance %}
// {% for filament in pa_dic %}
// {% if id == filament.id %}
// {% set id_index = loop.index0 %}
// {% for setup in filament.val %}
// {% if nozzle == setup.nozzle %}
// {% set change_txt = [] %}
// {% if 'PRESSURE_ADVANCE' in params|upper %}
// {% set _dummy = change_txt.append("PRESSURE ADVANCE") %}
// {% set _dummy = pa_dic[id_index].val[loop.index0].update({'pa': params.PRESSURE_ADVANCE|float|round(3)}) %}
// {% endif %}
// {% if 'SMOOTH_TIME' in params|upper %}
// {% set _dummy = change_txt.append("SMOOTH TIME") %}
// {% set _dummy = pa_dic[id_index].val[loop.index0].update({'st': params.SMOOTH_TIME|float|round(3)}) %}
// {% endif %}
// {% if change_txt|length > 0 %}
// {action_respond_info("PRESSURE ADVANCE: Changed %s at Filament %s Nozzle %s" % (change_txt|join(" and "),id,nozzle))}
// {% else %}
// {action_respond_info("PRESSURE ADVANCE: Nothing changed at Filament %s Nozzle %s" % (id,nozzle))}
// {% endif %}
// {% elif loop.last %}
// {action_respond_info("PRESSURE ADVANCE: Add setup for Nozzle %s at Filament %s" % (nozzle,id))}
// {% set _dummy = pa_dic[id_index].val.append({'nozzle': nozzle,
// 'pa'    : params.PRESSURE_ADVANCE|default(cfg.pressure_advance)|float|round(3),
// 'st'    : params.SMOOTH_TIME|default(cfg.pressure_advance_smooth_time)|float|round(3)}) %}
// {% endif%}
// {% endfor %}
// {% elif loop.last %}
// {action_respond_info("PRESSURE ADVANCE: Add setup for Filament %s" % (id))}
// {% set _dummy = pa_dic.append({'id' : id,
// 'val': [{'nozzle': nozzle,
// 'pa'    : params.PRESSURE_ADVANCE|default(cfg.pressure_advance)|float|round(3),
// 'st'    : params.SMOOTH_TIME|default(cfg.pressure_advance_smooth_time)|float|round(3)}]}) %}
// {% endif %}
// {% endfor %}
// {% endif %}
// SAVE_VARIABLE VARIABLE=pressure_advance VALUE="{pa_dic}"
// {% endif %}
// _general_Debug msg="PRESSURE_ADVANCE_ADD - exiting"
// printer.configfile.config['gcode_macro PRESSURE_ADVANCE_ADD'].description : Helper: Add or change pressure advance settings
// printer.configfile.config['gcode_macro OUTPUT_PROBE_MESSAGE'].gcode :
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set mag_probe = user.mag_probe %}
// {% if mag_probe.state == 'unknown' %}
// {% set probe_attached = undefined %}
// {% elif mag_probe.state == 'attached' %}
// {% set probe_attached = True %}
// {% elif mag_probe.state == 'docked' %}
// {% set probe_attached = False %}
// {% endif %}
// {% if probe_attached and (not printer.probe.last_query) %}
// MSG_PROBE_ATTACHED
// {% elif (not probe_attached) and  printer.probe.last_query %}
// MSG_PROBE_DOCKED
// {% else %}
// M118 "Confilicting information about Probe location, run '_MAG_PROBE ACTION='get_status' RESPOND=1' command"
// {% endif %}
// printer.configfile.config['gcode_macro OUTPUT_PROBE_MESSAGE'].description : Helper: Euclid Probe; prints an message indicating the output of a GET_PROBE_STATUS command
// printer.configfile.config['gcode_macro _POWER_OFF_Pi_PSU'].gcode :
// _general_Debug msg="_POWER_OFF_Pi_PSU - entering"
// {action_call_remote_method("set_device_power",
// device="tasmota_plug_Pi",
// state="off")}
// _general_Debug msg="_POWER_OFF_Pi_PSU - exiting"
// printer.configfile.config['gcode_macro _POWER_OFF_Pi_PSU'].description : Helper: Turn off the Tasmota Pi_PSU smart plug
// printer.configfile.config['thermistor 100k3950_airtemp'].resistance2 : 35900
// printer.configfile.config['thermistor 100k3950_airtemp'].resistance3 : 12933
// printer.configfile.config['thermistor 100k3950_airtemp'].resistance1 : 125245
// printer.configfile.config['thermistor 100k3950_airtemp'].temperature2 : 50
// printer.configfile.config['thermistor 100k3950_airtemp'].temperature3 : 80
// printer.configfile.config['thermistor 100k3950_airtemp'].temperature1 : 20
// printer.configfile.config['gcode_macro BED_MESH_CALIBRATE'].rename_existing : BED_MESH_CALIBRATE_BASE
// printer.configfile.config['gcode_macro BED_MESH_CALIBRATE'].description : Helper: Perform Mesh Bed Leveling with Klicky Probe or MagProbe automount probes
// printer.configfile.config['gcode_macro BED_MESH_CALIBRATE'].gcode :
// _general_Debug msg="BED_MESH_CALIBRATE - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set bed_mesh = global.bed_mesh %}
// {% set buffer = global.bed_mesh.buffer %}
// {% set last_area_start_x = global.bed_mesh.last_area_start_x %}
// {% set last_area_start_y = global.bed_mesh.last_area_start_y %}
// {% set last_area_end_x = global.bed_mesh.last_area_end_x %}
// {% set last_area_end_y = global.bed_mesh.last_area_end_y %}
// {% if params.FORCE_NEW_MESH != null %}
// { action_respond_info("Force New Mesh: %s" % (params.FORCE_NEW_MESH)) }
// {% endif %}
// {% if printer.bed_mesh.profile_name == '' %}
// { action_respond_info("No existing bed mesh found.") }
// {% set last_area_end_x=-1 %}
// {% endif %}
// _CG28
// {% if user.hw.mag_probe.ena %} BED_MESH_CLEAR {% endif %}
// {% set klicky_available = printer['gcode_macro _Probe_Variables'] != null %}
// {% set euclid_available = user.hw.mag_probe.euclid %}
// {% if klicky_available %}
// {% set V = user.klicky.verbose %}
// {% if V %}
// { action_respond_info("Bed Mesh Calibrate") }
// {% endif %}
// {% endif %}
// {% if params.PRINT_MIN %}
// { action_respond_info("print_min: %s" % params.PRINT_MIN) }
// { action_respond_info("print_max: %s" % params.PRINT_MAX) }
// {% set blTouchConfig = printer.configfile.config.bltouch %}
// {% if blTouchConfig %}
// {% set OffsetX = blTouchConfig.x_offset|default(0)|float %}
// {% set OffsetY = blTouchConfig.y_offset|default(0)|float %}
// {% endif %}
// {% set probeConfig = printer.configfile.config.probe %}
// {% if probeConfig %}
// {% set OffsetX = probeConfig.x_offset|default(0)|float %}
// {% set OffsetY = probeConfig.y_offset|default(0)|float %}
// {% endif %}
// {% set print_min_x = params.PRINT_MIN.split(",")[0]|float %}
// {% set print_min_y = params.PRINT_MIN.split(",")[1]|float %}
// {% set print_max_x = params.PRINT_MAX.split(",")[0]|float %}
// {% set print_max_y = params.PRINT_MAX.split(",")[1]|float %}
// {% if last_area_start_x > 0 %}
// { action_respond_info("last_bed_mesh: %s,%s %s,%s" % (last_area_start_x, last_area_start_y, last_area_end_x, last_area_end_y)) }
// {% endif %}
// {% if (params.FORCE_NEW_MESH != null) or (print_min_x < last_area_start_x) or (print_max_x > last_area_end_x) or (print_min_y < last_area_start_y) or (print_max_y > last_area_end_y)  %}
// {% if klicky_available %}
// _CheckProbe action=query
// Attach_Probe
// {% elif euclid_available %}
// {% if not printer.quad_gantry_level.applied %} QUAD_GANTRY_LEVEL PARK=false {% endif %}
// ATTACH_PROBE
// {% endif %}
// {% if (print_min_x < print_max_x) and (print_min_y < print_max_y) %}
// {% set bedMeshConfig = printer.configfile.config.bed_mesh %}
// {% set minimum_probe_count = 3 %}
// {% if bedMeshConfig.algorithm == "bicubic" %}
// {% set minimum_probe_count = 5 %}
// {% endif %}
// {% set probe_count = bedMeshConfig.probe_count.split(",") %}
// {% set probe_count_x = probe_count[0]|int %}
// {% if probe_count.__len__() > 1 %}
// {% set probe_count_y = probe_count[1]|int %}
// {% else %}
// {% set probe_count_y = probe_count_x|int %}
// {% endif %}
// {% set relative_reference_index = bedMeshConfig.relative_reference_index %}
// {% set mesh_min_x = bedMeshConfig.mesh_min.split(",")[0]|float %}
// {% set mesh_min_y = bedMeshConfig.mesh_min.split(",")[1]|float %}
// {% set mesh_max_x = bedMeshConfig.mesh_max.split(",")[0]|float %}
// {% set mesh_max_y = bedMeshConfig.mesh_max.split(",")[1]|float %}
// {% if print_max_x - print_min_x < (mesh_max_x - mesh_min_x) * 0.50 %}
// {% set probe_count_x = minimum_probe_count %}
// {% endif %}
// {% if print_max_y - print_min_y < (mesh_max_y - mesh_min_y) * 0.50 %}
// {% set probe_count_y = minimum_probe_count %}
// {% endif %}
// {% if print_min_x - buffer >= mesh_min_x %}
// {% set mesh_min_x = print_min_x - buffer %}
// {% endif %}
// {% if print_min_y - buffer >= mesh_min_y %}
// {% set mesh_min_y = print_min_y - buffer %}
// {% endif %}
// {% if print_max_x + buffer <= mesh_max_x %}
// {% set mesh_max_x = print_max_x + buffer %}
// {% endif %}
// {% if print_max_y + buffer <= mesh_max_y %}
// {% set mesh_max_y = print_max_y + buffer %}
// {% endif %}
// { action_respond_info("mesh_min: %s,%s" % (mesh_min_x, mesh_min_y)) }
// { action_respond_info("mesh_max: %s,%s" % (mesh_max_x, mesh_max_y)) }
// { action_respond_info("probe_count: %s,%s" % (probe_count_x,probe_count_y)) }
// ; Set variables so they're available outside of macro
// {% set _dummy = bed_mesh.update({'last_area_start_x':print_min_x }) %}
// {% set _dummy = bed_mesh.update({'last_area_start_y':print_min_y}) %}
// {% set _dummy = bed_mesh.update({'last_area_end_x':print_max_x }) %}
// {% set _dummy = bed_mesh.update({'last_area_end_y':print_max_y}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=bed_mesh VALUE="{bed_mesh}"
// {% if printer["gcode_macro status_meshing"] != null %}
// STATUS_MESHING
// {% endif %}
// {% if relative_reference_index == 0 or relative_reference_index == null %}
// BED_MESH_CALIBRATE_BASE mesh_min={mesh_min_x},{mesh_min_y} mesh_max={mesh_max_x},{mesh_max_y} probe_count={probe_count_x},{probe_count_y}
// {% else %}
// {% set relative_reference_index = ((probe_count_x * probe_count_y - 1) / 2)|int %}
// { action_respond_info("relative_reference_index: %s" % relative_reference_index) }
// BED_MESH_CALIBRATE_BASE mesh_min={mesh_min_x},{mesh_min_y} mesh_max={mesh_max_x},{mesh_max_y} probe_count={probe_count_x},{probe_count_y} relative_reference_index={relative_reference_index}
// {% endif %}
// {% else %}
// {% if printer["gcode_macro status_meshing"] != null %}
// STATUS_MESHING
// {% endif %}
// BED_MESH_CALIBRATE_BASE
// {% endif %}
// {% if klicky_available %}
// Dock_Probe
// {% elif euclid_available %}
// DOCK_PROBE
// {% endif %}
// {% else %}
// { action_respond_info("No need to recreate Bed Mesh since it's same as current mesh or smaller") }
// {% endif %}
// {% else %}
// {% if klicky_available %}
// _CheckProbe action=query
// Attach_Probe
// {% elif euclid_available %}
// {% if not printer.quad_gantry_level.applied %} QUAD_GANTRY_LEVEL PARK=false {% endif %}
// ATTACH_PROBE
// {% endif %}
// {% if printer["gcode_macro status_meshing"] != null %}
// STATUS_MESHING
// {% endif %}
// BED_MESH_CALIBRATE_BASE
// {% if klicky_available %}
// Dock_Probe
// {% elif euclid_available %}
// DOCK_PROBE
// {% endif %}
// {% endif %}
// {% if printer["gcode_macro status_ready"] != null %}
// STATUS_READY
// {% endif %}
// _general_Debug msg="BED_MESH_CALIBRATE - exiting"
// printer.configfile.config['gcode_macro MSG_PROBE_DOCKED'].gcode :
// M118 Euclid probe is in the DOCK!!
// printer.configfile.config['gcode_macro MSG_PROBE_DOCKED'].description : Helper: Euclid Probe; prints an message indicating the output of a QUERY_PROBE command when the Euclid probe is docked
// printer.configfile.config['gcode_macro WLED_CONTROL'].gcode :
// _general_Debug msg="WLED_CONTROL- entering"
// {% set strip = params.STRIP|default('lights')|string %}
// {% set brightness = params.BRIGHTNESS|default(-1)|int %}
// {% set intensity = params.INTENSITY|default(-1)|int %}
// {% set speed = params.SPEED|default(-1)|int %}
// {action_call_remote_method("set_wled_state",
// strip=strip,
// brightness=brightness,
// intensity=intensity,
// speed=speed)}
// _general_Debug msg="WLED_CONTROL- exiting"
// printer.configfile.config['gcode_macro WLED_CONTROL'].description : Helper: Control effect values and brightness for WLED strips
// printer.configfile.config['temperature_fan Out-take_Left_Side_Controller'].tachometer_pin : ^tinyfan:FAN2_RPM
// printer.configfile.config['temperature_fan Out-take_Left_Side_Controller'].control : watermark
// printer.configfile.config['temperature_fan Out-take_Left_Side_Controller'].cycle_time : 0.00004
// printer.configfile.config['temperature_fan Out-take_Left_Side_Controller'].pin : tinyfan:FAN2_PWM
// printer.configfile.config['temperature_fan Out-take_Left_Side_Controller'].off_below : 0.4
// printer.configfile.config['temperature_fan Out-take_Left_Side_Controller'].max_delta : 1.0
// printer.configfile.config['temperature_fan Out-take_Left_Side_Controller'].sensor_type : temperature_host
// printer.configfile.config['temperature_fan Out-take_Left_Side_Controller'].target_temp : 25.0
// printer.configfile.config['temperature_fan Out-take_Left_Side_Controller'].min_speed : 1.0
// printer.configfile.config['temperature_fan Out-take_Left_Side_Controller'].max_speed : 1.0
// printer.configfile.config['temperature_fan Out-take_Left_Side_Controller'].hardware_pwm : true
// printer.configfile.config['temperature_fan Out-take_Left_Side_Controller'].min_temp : 0
// printer.configfile.config['temperature_fan Out-take_Left_Side_Controller'].gcode_id : Out-take_Left
// printer.configfile.config['temperature_fan Out-take_Left_Side_Controller'].max_temp : 100
// printer.configfile.config['gcode_macro SET_LOGO_LEDS_BY_NAME'].gcode :
// _general_Debug msg="SET_LOGO_LEDS_BY_NAME - entering"
// {% set color_name = params.COLOR %}
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set color = global.sb_vars.colors[color_name|lower] %}
// _SET_LOGO_LEDS R={color.r} G={color.g} B={color.b} W={color.w}
// _general_Debug msg="SET_LOGO_LEDS_BY_NAME - exiting"
// printer.configfile.config['gcode_macro SET_LOGO_LEDS_BY_NAME'].description : Helper: Sets the color of the stealthburner LOGO leds by only using the name of the color
// printer.configfile.config['gcode_macro _POWER_OFF_RGB2'].gcode :
// _general_Debug msg="_POWER_OFF_RGB2 - entering"
// {action_call_remote_method("set_device_power",
// device="tasmota_plug_RGB2",
// state="off")}
// _general_Debug msg="_POWER_OFF_RGB2 - exiting"
// printer.configfile.config['gcode_macro _POWER_OFF_RGB2'].description : Helper: Turn off the Tasmota RGB2 smart plug
// printer.configfile.config['gcode_macro INFO__USER_VARIABLE'].gcode :
// _general_Debug msg="INFO__USER_VARIABLE - entering"
// {% set ns = namespace( flag = 0 ) %}
// {% set ns2 = namespace(flag = 0, loop_flag = 0 ) %}
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set search_vars_search = True if params.VAR else False %}
// {% set search = params.VAR|default('')|string|lower %}
// {% if '.' is in params.VAR %}
// {% set ns.flag = 1 %}
// {% set ns.search = search.split('.') %}
// {% set ns.length = (ns.search|length) - 1 %}
// {% set search = ns.search[ns.length] %}
// {% endif %}
// {% if search_vars_search == False %}
// {% set print_printer_parameters = True %}
// {% else %}
// {% set print_printer_parameters = False %}
// {% endif %}
// {% if print_printer_parameters %}
// {% set ns.path = ["INFO__USER_VARIABLE <+++++++++++++++++", ''] %}
// { action_respond_info(ns.path|join) }
// {% endif %}
// {% for item in user|sort %}
// {% if ns.flag == 0 %}
// {% if ' ' in item %}
// {% set ns.path = ['user', "['%s']" % (item), ''] %}
// {% else %}
// {% set ns.path = ['user.', item, ''] %}
// {% endif %}
// {% if search in ns.path|lower %}
// {% set ns2.flag = 1%}
// { action_respond_info(ns.path|join) }
// {% endif %}
// {% set ns2.loop_flag = 0 %}
// {%
// if (user[item] is not boolean)
// and (user[item] is not float)
// and (user[item] is not integer)
// and (user[item] is not none)
// and (user[item] is not undefined)
// and (user[item] is not callable)
// %}
// {% set ns2.loop_flag = 1 %}
// {% endif %}
// {% if ns2.loop_flag %}
// {% if user[item].items()|sort %}
// {% for childkey, child in user[item].items() recursive %}
// {% set ns.path = ns.path[:loop.depth|int + 1] %}
// {% if ' ' in childkey %}
// {% set null = ns.path.append("['%s']" % (childkey)) %}
// {% else %}
// {% set null = ns.path.append(".%s" % (childkey)) %}
// {% endif %}
// {% if child is mapping  %}
// { loop(child.items()|sort) }
// {% else %}
// {% if search in ns.path|lower %}
// {% set ns2.flag = 1%}
// { action_respond_info("%s : %s" % (ns.path|join, child)) }
// {% endif %}
// {% endif %}
// {% endfor %}
// {% endif %}
// {% else %}
// {% if search in ns.path|lower %}
// {% set ns2.flag = 1%}
// { action_respond_info("%s : %s" % (ns.path|join, (user[item])|string)) }
// {% endif %}
// {% endif %}
// {% else %}
// {% if item == ns.search[(ns.length-ns.length)] %}
// {% if ' ' in item %}
// {% set ns.path = ['user', "['%s']" % (item), ''] %}
// {% else %}
// {% set ns.path = ['user.', item, ''] %}
// {% endif %}
// {% if search in ns.path|lower %}
// {% set ns2.flag = 1%}
// { action_respond_info(ns.path|join) }
// {% endif %}
// {% set ns2.loop_flag = 0 %}
// {%
// if (user[item] is not boolean)
// and (user[item] is not float)
// and (user[item] is not integer)
// and (user[item] is not none)
// and (user[item] is not undefined)
// and (user[item] is not callable)
// %}
// {% set ns2.loop_flag = 1 %}
// {% endif %}
// {% if ns2.loop_flag %}
// {% if user[item].items()|sort %}
// {% for childkey, child in user[item].items() recursive %}
// {% set ns.path = ns.path[:loop.depth|int + 1] %}
// {% if ' ' in childkey %}
// {% set null = ns.path.append("['%s']" % (childkey)) %}
// {% else %}
// {% set null = ns.path.append(".%s" % (childkey)) %}
// {% endif %}
// {% if child is mapping  %}
// { loop(child.items()|sort) }
// {% else %}
// {% if search in ns.path|lower %}
// {% set ns2.flag = 1%}
// { action_respond_info("%s : %s" % (ns.path|join, child)) }
// {% endif %}
// {% endif %}
// {% endfor %}
// {% endif %}
// {% else %}
// {% if search in ns.path|lower %}
// {% set ns2.flag = 1%}
// { action_respond_info("%s : %s" % (ns.path|join, (user[item])|string)) }
// {% endif %}
// {% endif %}
// {% else %}
// {% endif %}
// {% endif %}
// {% endfor %}
// {% if print_printer_parameters %}
// {% set ns.path = ["End of INFO__USER_VARIABLE +++++++++++++++++>", ''] %}
// { action_respond_info(ns.path|join) }
// {% endif %}
// {% if ns2.flag == 0 and not print_printer_parameters %}
// {action_respond_info("Nothing found for \"INFO__USER_VARIABLE %s\"" % rawparams)}
// {% endif %}
// _general_Debug msg="INFO__USER_VARIABLE - exiting"
// printer.configfile.config['gcode_macro INFO__USER_VARIABLE'].description : Helper: print out all values in [gcode_macro _USER_VARIABLE] space or the speciifed parameter
// printer.configfile.config['gcode_macro _ADD_PRINT_TIME'].gcode :
// _general_Debug msg="_ADD_PRINT_TIME - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set time = printer.print_stats.total_duration %}
// {% set filament = printer.print_stats.filament_used|float %}
// {% set filtertime = time if user.var.filter else 0 %}
// {% if not printer.save_variables.variables.print_stats %}
// {% set print_stats = {'time': {'total': time, 'service': time, 'filter': filtertime}, 'filament': filament}%}
// {% else %}
// {% set print_stats = printer.save_variables.variables.print_stats %}
// {% set _dummy = print_stats.time.update({'total':(print_stats.time.total + time)|int}) %}
// {% set _dummy = print_stats.time.update({'service':(print_stats.time.service + time)|int}) %}
// {% set _dummy = print_stats.time.update({'filter':(print_stats.time.filter + filtertime)|int}) %}
// {% set _dummy = print_stats.update({'filament':(print_stats.filament + filament)|float}) %}
// {% endif %}
// SAVE_VARIABLE VARIABLE=print_stats VALUE="{print_stats}"
// _general_Debug msg="_ADD_PRINT_TIME - exiting"
// printer.configfile.config['gcode_macro _ADD_PRINT_TIME'].description : Helper: Store print time values in variables
// printer.configfile.config['gcode_macro status_meshing'].gcode :
// _general_Debug msg="status_meshing- entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set current_led_state = global.current_led_state %}
// SET_FAN_LEDS_OFF
// SET_LOGO_LEDS_OFF
// SET_NOZZLE_LEDS_OFF
// M117 off
// CHECK_PRINTER_STATE
// {% set progressbar_enabled = global.progressbar_enabled|int %}
// {% if progressbar_enabled == 0 %}
// SET_BAR_LEDS_OFF
// {% set _dummy = current_led_state.update({'bar_leds':'sb_bar_meshing'}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=current_led_state VALUE="{current_led_state}"
// SET_BAR_LEDS_ON
// {% endif %}
// {% set _dummy = current_led_state.update({'fan_leds':'sb_fan_meshing'}) %}
// {% set _dummy = current_led_state.update({'logo_leds':'sb_logo_meshing'}) %}
// {% set _dummy = current_led_state.update({'nozzle_leds':'sb_nozzle_meshing'}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=current_led_state VALUE="{current_led_state}"
// SET_FAN_LEDS_ON
// SET_LOGO_LEDS_ON
// M117 meshing
// SET_NOZZLE_LEDS_ON
// _general_Debug msg="status_meshing- exiting"
// printer.configfile.config['gcode_macro status_meshing'].description : Helper: set the Stealthburner leds to the STATUS_MESHING LED_EFFECT
// printer.configfile.config['gcode_macro _SET_Z_CURRENT'].gcode :
// _general_Debug msg="_SET_Z_CURRENT - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set _set_z_current = global._set_z_current %}
// {% set val = params.VAL|default('CONFIG') %}
// {% set z_run = user.homing.z_current       if val == 'HOME'
// else printer.configfile.settings['tmc2209 stepper_z'].run_current if 'tmc2209 stepper_z' in printer.configfile.settings
// else printer.configfile.settings['tmc5160 stepper_z'].run_current if 'tmc5160 stepper_z' in printer.configfile.settings %}
// {% if val != _set_z_current.last_val %}
// {% set _dummy = _set_z_current.update({'last_val': val }) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=_set_z_current VALUE="{_set_z_current}"
// {% if params.RESPOND|default(user.respond.z_current)|int == 1 %}
// {action_respond_info("Home&Probe: RunCur %.2fA rms" % z_run|float)}
// {% endif %}
// SET_TMC_CURRENT STEPPER=stepper_z  CURRENT={z_run}
// SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT={z_run}
// SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT={z_run}
// SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT={z_run}
// M400
// {% endif %}
// _general_Debug msg="_SET_Z_CURRENT - exiting"
// printer.configfile.config['gcode_macro _SET_Z_CURRENT'].description : Helper: Set Z-drive motor current
// printer.configfile.config['gcode_macro progress_bar_leds_on'].gcode :
// _general_Debug msg="progress_bar_leds_on - entering"
// SET_BAR_LEDS_OFF
// {% for I in range(1,33, 3) %}
// SET_LED LED=progress_bar_leds RED=1 GREEN=0 BLUE=0 TRANSMIT=0 index={I}
// SET_LED LED=progress_bar_leds RED=0 GREEN=1 BLUE=0 TRANSMIT=0 index={I+1}
// SET_LED LED=progress_bar_leds RED=0 GREEN=0 BLUE=1 TRANSMIT=0 index={I+2}
// {% endfor %}
// SET_LED LED=progress_bar_leds RED=0 GREEN=0 BLUE=1 TRANSMIT=1 index=33
// _general_Debug msg="progress_bar_leds_on - exiting"
// printer.configfile.config['gcode_macro progress_bar_leds_on'].description : Helper: Turn on the progress_bar via the SET_LED command
// printer.configfile.config['neopixel tinyfan'].initial_red : 0
// printer.configfile.config['neopixel tinyfan'].initial_green : 0
// printer.configfile.config['neopixel tinyfan'].pin : tinyfan:LED
// printer.configfile.config['neopixel tinyfan'].initial_blue : 1
// printer.configfile.config['gcode_macro WLED_ON'].gcode :
// _general_Debug msg="WLED_ON - entering"
// {% set strip = params.STRIP|string %}
// {% set preset = params.PRESET|default(1)|int %}
// {action_call_remote_method("set_wled_state",
// strip=strip,
// state=True,
// preset=preset)}
// _general_Debug msg="WLED_ON - exiting"
// printer.configfile.config['gcode_macro WLED_ON'].description : Helper: Turn on the WLED strip using optional preset
// printer.configfile.config['led_effect set_logo_leds_rainbow_barf'].layers :
// static  1  0 top (1.0, 0.0, 0.0),(1.0, 0.0, 0.0),(0.0, 0.0, 1.0),(0.0, 0.0, 1.0),(0.0, 0.0, 1.0),(1.0, 0.0, 0.0),(1.0, 0.0, 0.0)
// printer.configfile.config['led_effect set_logo_leds_rainbow_barf'].leds :
// neopixel:sb_leds (9,10,11,12,13,14,15,16)
// printer.configfile.config['led_effect set_logo_leds_rainbow_barf'].autostart : false
// printer.configfile.config['led_effect set_logo_leds_rainbow_barf'].frame_rate : 5
// printer.configfile.config['gcode_macro _SET_FAN_LEDS'].gcode :
// _general_Debug msg="_SET_FAN_LEDS - entering"
// {% set r = params.R|default(0)|float %}
// {% set g = params.G|default(0)|float %}
// {% set b = params.B|default(0)|float %}
// {% set w = params.W|default(0)|float %}
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set led = user.sb_vars.fan_led_name %}
// {% set idx = user.sb_vars.fan_idx %}
// _SET_SB_LEDS LED={led} R={r} G={g} B={b} W={w} IDX="{idx}"
// _general_Debug msg="_SET_FAN_LEDS - exiting"
// printer.configfile.config['gcode_macro _SET_FAN_LEDS'].description : Helper: Sets the color of the stealthburner FAN leds
// printer.configfile.config['gcode_macro M204'].rename_existing : M204.1
// printer.configfile.config['gcode_macro M204'].description : Helper: Set and limit acceleration to cfg value
// printer.configfile.config['gcode_macro M204'].gcode :
// _general_Debug msg="M204 - entering"
// {% set accel = params.S|float                      if 'S' in params and params.S|float > 0
// else [params.P|float,params.T|float]|min if 'P' in params and 'T' in params and
// params.P|float > 0 and params.T|float > 0 %}
// {% if accel is defined %}
// {% set lim_accel          = [accel,     printer.configfile.settings.printer.max_accel         ]|min %}
// {% set lim_accel_to_decel = [accel / 2, printer.configfile.settings.printer.max_accel_to_decel]|min %}
// SET_VELOCITY_LIMIT ACCEL={lim_accel} ACCEL_TO_DECEL={lim_accel_to_decel}
// {% else %}
// {action_respond_info("Invalid M204 command \"M204 %s\"" % rawparams)}
// {% endif %}
// _general_Debug msg="M204 - exiting"
// printer.configfile.config.mcu.baud : 250000
// printer.configfile.config.mcu.restart_method : command
// printer.configfile.config.mcu.serial : /dev/serial/by-id/usb-Klipper_stm32f446xx_0F003E00095053424E363420-if00
// printer.configfile.config['led_effect sb_fan_busy'].layers :
// breathing  3 1 top (1,0,0)
// printer.configfile.config['led_effect sb_fan_busy'].leds :
// neopixel:sb_leds (1-8)
// printer.configfile.config['led_effect sb_fan_busy'].autostart : false
// printer.configfile.config['led_effect sb_fan_busy'].frame_rate : 5
// printer.configfile.config['led_effect sb_nozzle_part_ready'].layers :
// breathing  3 1 top (0.0, 1.0, 0.0)
// printer.configfile.config['led_effect sb_nozzle_part_ready'].leds :
// neopixel:sb_leds (17,18)
// printer.configfile.config['led_effect sb_nozzle_part_ready'].autostart : false
// printer.configfile.config['led_effect sb_nozzle_part_ready'].frame_rate : 2
// printer.configfile.config.extruder.control : pid
// printer.configfile.config.extruder.rotation_distance : 22.6789511
// printer.configfile.config.extruder.sensor_type : ATC-Semitec-104NT-4-R025H42G
// printer.configfile.config.extruder.min_temp : 10
// printer.configfile.config.extruder.enable_pin : !EBBCan: PD2
// printer.configfile.config.extruder.pressure_advance : 0.055
// printer.configfile.config.extruder.dir_pin : !EBBCan: PD1
// printer.configfile.config.extruder.pid_kp : 37.239
// printer.configfile.config.extruder.full_steps_per_rotation : 200
// printer.configfile.config.extruder.heater_pin : EBBCan: PB13
// printer.configfile.config.extruder.pid_kd : 65.635
// printer.configfile.config.extruder.pid_ki : 5.282
// printer.configfile.config.extruder.filament_diameter : 1.750
// printer.configfile.config.extruder.gear_ratio : 50:10
// printer.configfile.config.extruder.sensor_pin : EBBCan: PA3
// printer.configfile.config.extruder.nozzle_diameter : 0.4
// printer.configfile.config.extruder.pressure_advance_smooth_time : 0.030
// printer.configfile.config.extruder.step_pin : EBBCan: PD0
// printer.configfile.config.extruder.max_power : 1.0
// printer.configfile.config.extruder.microsteps : 32
// printer.configfile.config.extruder.min_extrude_temp : 170
// printer.configfile.config.extruder.max_temp : 270
// printer.configfile.config.board_pins.aliases :
// EXP1_1=PE8, EXP1_2=PE7,
// EXP1_3=PE9, EXP1_4=PE10,
// EXP1_5=PE12, EXP1_6=PE13,
// EXP1_7=PE14, EXP1_8=PE15,
// EXP1_9=<GND>, EXP1_10=<5V>,
// EXP2_1=PA6, EXP2_2=PA5,
// EXP2_3=PB1, EXP2_4=PA4,
// EXP2_5=PB2, EXP2_6=PA7,
// EXP2_7=PC15, EXP2_8=<RST>,
// EXP2_9=<GND>, EXP2_10=<5V>
// printer.configfile.config['output_pin lock_M106'].pin : rpi: gpio16
// printer.configfile.config['output_pin lock_M106'].value : 0
// printer.configfile.config.adxl345.cs_pin : EBBCan: PB12
// printer.configfile.config.adxl345.spi_software_sclk_pin : EBBCan: PB10
// printer.configfile.config.adxl345.spi_software_mosi_pin : EBBCan: PB11
// printer.configfile.config.adxl345.spi_software_miso_pin : EBBCan: PB2
// printer.configfile.config.adxl345.axes_map : x,y,z
// printer.configfile.config['gcode_macro RESETRGB'].gcode :
// _general_Debug msg="RESETRGB - entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set current_led_state = global.current_led_state %}
// _LIGHTS_FLICKER
// SET_NOZZLE_LEDS_OFF
// {% set _dummy = current_led_state.update({'nozzle_leds':'set_nozzle_leds_white'}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=current_led_state VALUE="{current_led_state}"
// SET_NOZZLE_LEDS_ON
// _general_Debug msg="RESETRGB - exiting"
// printer.configfile.config['gcode_macro RESETRGB'].description : Helper: Default preset for RGB LEDs and printer lights, usually READY preset
// printer.configfile.config['gcode_macro _SET_LOGO_LEDS'].gcode :
// _general_Debug msg="_SET_LOGO_LEDS - entering"
// {% set r = params.R|default(0)|float %}
// {% set g = params.G|default(0)|float %}
// {% set b = params.B|default(0)|float %}
// {% set w = params.W|default(0)|float %}
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set led = user.sb_vars.logo_led_name %}
// {% set idx = user.sb_vars.logo_idx %}
// _SET_SB_LEDS LED={led} R={r} G={g} B={b} W={w} IDX="{idx}"
// _general_Debug msg="_SET_LOGO_LEDS - exiting"
// printer.configfile.config['gcode_macro _SET_LOGO_LEDS'].description : Helper: Sets the color of the stealthburner LOGO leds
// printer.configfile.config['led_effect sb_bar_busy'].layers :
// breathing  3 1 top (1,0,0)
// printer.configfile.config['led_effect sb_bar_busy'].leds :
// neopixel:progress_bar_leds (1-33)
// printer.configfile.config['led_effect sb_bar_busy'].autostart : false
// printer.configfile.config['led_effect sb_bar_busy'].frame_rate : 5
// printer.configfile.config['gcode_macro M117'].rename_existing : M117.1
// printer.configfile.config['gcode_macro M117'].description : Helper: Display Message to Klipper Screen Status line
// printer.configfile.config['gcode_macro M117'].gcode :
// _general_Debug msg="M117 - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set ns = namespace(printing=false) %}
// {% if rawparams|trim == '' %}
// UPDATE_DELAYED_GCODE ID=_lights_ready DURATION=3
// {% else %}
// {% for key, value in user.status_presets.lookup.items() %}
// {% if key.upper() in rawparams.upper() %}
// UPDATE_DELAYED_GCODE ID=_lights_ready DURATION=0
// LIGHTS STRIP="Chamber_Lights" STATUS='{key}'
// LIGHTS STRIP="Bottom_Lights" STATUS='{key}'
// {% if key == 'printing' %}
// {% set ns.printing=true %}
// {% elif ns.printing %}
// {% set ns.printing=false %}
// {% endif %}
// {% endif %}
// {% endfor %}
// {% endif %}
// {% if ns.printing %}
// M117.1
// {% else %}
// M117.1 {rawparams}
// {% endif %}
// M118 {rawparams}
// _general_Debug msg="M117 - exiting"
// printer.configfile.config['gcode_macro M115'].rename_existing : M115.1
// printer.configfile.config['gcode_macro M115'].description : Helper: Print host and all MCUs versions in this printer
// printer.configfile.config['gcode_macro M115'].gcode :
// _general_Debug msg="M115 - entering"
// {% set out = ['mcu build version:'] %}
// {% for name1 in printer %}
// {% for name2 in printer[name1] %}
// {% if name2 is in ['mcu_version'] %}
// {% set _dummy = out.append("%s: %s" % (name1, printer[name1][name2])) %}
// {% endif %}
// {% endfor %}
// {% endfor %}
// {action_respond_info(out|join("\n"))}
// M115.1
// _general_Debug msg="M115 - exiting"
// printer.configfile.config['gcode_macro CASELIGHT'].gcode :
// _general_Debug msg="CASELIGHT - entering"
// {% if printer['output_pin caselight'].value == 0 %}
// _CASELIGHT_ON
// {% else %}
// _CASELIGHT_OFF
// {% endif %}
// _general_Debug msg="CASELIGHT - exiting"
// printer.configfile.config['gcode_macro CASELIGHT'].description : Helper: Toggle the 24V white CASE Lights
// printer.configfile.config['temperature_sensor J_Chamber_ZDragChain_PT100'].sensor_pin : PF8
// printer.configfile.config['temperature_sensor J_Chamber_ZDragChain_PT100'].rtd_nominal_r : 100
// printer.configfile.config['temperature_sensor J_Chamber_ZDragChain_PT100'].spi_bus : spi1
// printer.configfile.config['temperature_sensor J_Chamber_ZDragChain_PT100'].rtd_reference_r : 430
// printer.configfile.config['temperature_sensor J_Chamber_ZDragChain_PT100'].sensor_type : MAX31865
// printer.configfile.config['temperature_sensor J_Chamber_ZDragChain_PT100'].min_temp : 0
// printer.configfile.config['temperature_sensor J_Chamber_ZDragChain_PT100'].rtd_num_of_wires : 4
// printer.configfile.config['temperature_sensor J_Chamber_ZDragChain_PT100'].gcode_id : ChambZdrag
// printer.configfile.config['temperature_sensor J_Chamber_ZDragChain_PT100'].max_temp : 480
// printer.configfile.config['gcode_macro _VENT_INFO'].gcode :
// _general_Debug msg="_VENT_INFO - entering"
// {% set txt = "off" if printer['temperature_fan chamber'].target == 0
// else "target temp: %2dC" % printer['temperature_fan chamber'].target %}
// {action_respond_info("Chamber fan %s" % txt)}
// _general_Debug msg="_VENT_INFO - exiting"
// printer.configfile.config['gcode_macro _VENT_INFO'].description : Helper: Print chamber fan temperature
// printer.configfile.config['gcode_macro _FILAMENT_BALL'].gcode :
// _general_Debug msg="_FILAMENT_BALL - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// G92 E0   ; zero the extruder
// M83      ; relative extrusion
// G1 E2 F{user.speed.retract * 2}
// G1 E-2
// G1 E4
// G1 E-4
// G1 E8
// G1 E-8
// G1 E-25
// G4 P{params.WAIT|default(0)|int * 1000}
// _general_Debug msg="_FILAMENT_BALL - exiting"
// printer.configfile.config['gcode_macro _FILAMENT_BALL'].description : Helper: Round the filament tip
// printer.configfile.config['led_effect sb_logo_homing'].layers :
// gradient 1.00 2.00 top (0.00,0.00,1.00),(0.00,0.00,0.00),(1.00,0.30,0.00)
// printer.configfile.config['led_effect sb_logo_homing'].leds :
// neopixel:sb_leds (9-16)
// printer.configfile.config['led_effect sb_logo_homing'].autostart : false
// printer.configfile.config['led_effect sb_logo_homing'].frame_rate : 5
// printer.configfile.config['gcode_macro SET_HEATER_TEMPERATURE'].rename_existing : _SET_HEATER_TEMPERATURE
// printer.configfile.config['gcode_macro SET_HEATER_TEMPERATURE'].description : Helper: BEDFAN macro; set fan speeds to low and start monitoring the bed fans
// printer.configfile.config['gcode_macro SET_HEATER_TEMPERATURE'].gcode :
// _general_Debug msg="SET_HEATER_TEMPERATURE - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set bedfanvars = global.bedfanvars %}
// {% set HEATER = params.HEATER|default("None") %}
// {% set TARGET = params.TARGET|default(0)|int %}
// {% set THRESHOLD = user.bedfanvars.threshold|int %}
// {% set CURRENT_CHAMBERTEMP = printer["temperature_sensor J_Chamber_ZDragChain_PT100"].temperature|float %}
// {% if HEATER|lower == "extruder" %}
// M104 S{TARGET}
// {% elif HEATER|lower == "heater_bed" %}
// M99140 S{TARGET}
// {% else %}
// {action_respond_info("Heater %s not supported" % HEATER)}
// {% endif %}
// {% if HEATER|lower == "heater_bed" %}
// {% if TARGET >= THRESHOLD %}
// {% set CHAMBERFAN_TARTGET_TEMP = printer["temperature_fan chamber"].target|float %}              ;current chamberfan target temperature
// {% set CHAMBER_THERSHOLD = user.filament.profile.defaultEnclosure|float %}                       ;desired temperature for chamber
// {% if CHAMBERFAN_TARTGET_TEMP < CHAMBER_THERSHOLD %}
// M141 S{CHAMBER_THERSHOLD}                                                                    ;set chamber temperature for Exhaust fan and Bed fans
// {% endif %}
// _BedFansSlow
// {% set _dummy = bedfanvars.update({'lasttemp':CURRENT_CHAMBERTEMP}) %}
// {% set _dummy = bedfanvars.update({'flag':0}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=bedfanvars VALUE="{bedfanvars}"
// UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=5
// {% else %}
// _BedFansOff
// {% set _dummy = bedfanvars.update({'lasttemp':CURRENT_CHAMBERTEMP}) %}
// {% set _dummy = bedfanvars.update({'flag':0}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=bedfanvars VALUE="{bedfanvars}"
// UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=0
// {% endif %}
// {% endif %}
// _general_Debug msg="SET_HEATER_TEMPERATURE -exiting"
// printer.configfile.config['gcode_macro SET_NOZZLE_LEDS_BY_NAME'].gcode :
// _general_Debug msg="SET_NOZZLE_LEDS_BY_NAME - entering"
// {% set color_name = params.COLOR %}
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set color = global.sb_vars.colors[color_name|lower] %}
// _SET_NOZZLE_LEDS R={color.r} G={color.g} B={color.b} W={color.w}
// _general_Debug msg="SET_NOZZLE_LEDS_BY_NAME - exiting"
// printer.configfile.config['gcode_macro SET_NOZZLE_LEDS_BY_NAME'].description : Helper: Sets the color of the Stealthburner NOZZLE leds by only using the name of the color
// printer.configfile.config.idle_timeout.gcode :
// {% if printer.webhooks.state|lower == 'ready' %}
// {% if printer.pause_resume.is_paused|lower == 'false' %}
// {action_respond_info("TURN_OFF_HEATERS: Execute Idle Timeout")}
// TURN_OFF_HEATERS
// {% endif %}
// {% endif %}
// printer.configfile.config.idle_timeout.timeout : 7200
// printer.configfile.config['gcode_macro _SET_SB_LEDS'].gcode :
// {% set r = params.R|default(0)|float %}
// {% set g = params.G|default(0)|float %}
// {% set b = params.B|default(0)|float %}
// {% set w = params.W|default(0)|float %}
// {% set led = params.LED|string %}
// {% set idx = (params.IDX|string).split(',') %}
// {% set transmit_last = params.TRANSMIT|default(1) %}
// {% for led_index in idx %}
// {% set transmit=transmit_last if loop.last else 0 %}
// SET_LED LED={led} RED={r} GREEN={g} BLUE={b} WHITE={w} INDEX={led_index} TRANSMIT={transmit}
// {% endfor %}
// printer.configfile.config['gcode_macro _SET_SB_LEDS'].description : Helper: Sets the color of the leds which are specified by LED name and by IDX number for the Stealthburner LEDS
// printer.configfile.config['gcode_macro NOZZLECLEAN'].gcode :
// _general_Debug msg="NOZZLECLEAN - entering"
// {% set user   = printer['gcode_macro _USER_VARIABLE'] %}
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set pos    = user.purge.purge %}
// {% set move_z = [user.z_hop,printer.toolhead.position.z]|max %} ; calc movement high
// {% set bucket_pos = global.bucket_pos %}
// SET_GCODE_OFFSET Z=0.0
// {% if user.hw.display.ena %}
// _PRINT_AR T="Clean Nozzle" SHOW_LCD=true
// {% else %}
// _PRINT_AR T="Clean Nozzle"
// {% endif %}
// _CG28                                                 ; home if not already homed
// STATUS_CLEANING                                       ; set status LEDs
// G90                                                   ; absolute positioning
// G1 Z{move_z} F{user.speed.z_hop}                      ; move head up
// G1 Y{pos.y} F{user.speed.travel}                      ; move to purge bucket location
// G1 X{pos.x[bucket_pos]} F{user.speed.travel}          ; move to purge bucket location
// G1 Z{pos.z} F{user.speed.z_hop}                       ; lower Z
// {% if user.purge.enable_purge %}
// {% if not printer.extruder.can_extrude %}
// {action_respond_info("Extruder Temp to low, heating to %3.1fC" % printer.configfile.settings.extruder.min_extrude_temp)}
// M109 S{printer.configfile.settings.extruder.min_extrude_temp}
// {% endif %}
// G92 E0                               ; reset Extruder
// M83                                  ; relative extrusion
// G1 E2 F500                           ; purge filament
// G1 E2 F800                           ; purge filament
// G1 E-1 F800                          ; retract filament
// G4 P500
// {% endif %}
// _WIPE
// {% if user.purge.enable_purge %}
// M109 S{printer.extruder.target} ; restore old extruder temperature
// {% endif %}
// {% if user.hw.display.ena %} UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=1  {% endif %}
// {% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %} ; set it back to relative
// {% if user.purge.enable_purge %}
// {% if printer.gcode_move.absolute_extrude %}         M82 {% endif %} ; set it back to absolute
// {% endif %}
// SET_GCODE_OFFSET Z={printer.gcode_move.homing_origin.z} MOVE=1
// _general_Debug msg="NOZZLECLEAN - exiting"
// printer.configfile.config['gcode_macro NOZZLECLEAN'].description : Helper: Move to bucket and purge and scrub nozzle
// printer.configfile.config['gcode_macro _POWER_OFF_IR_PSU'].gcode :
// _general_Debug msg="_POWER_OFF_IR_PSU - entering"
// {action_call_remote_method("set_device_power",
// device="tasmota_plug_IR",
// state="off")}
// _general_Debug msg="__POWER_OFF_IR_PSU - exiting"
// printer.configfile.config['gcode_macro _POWER_OFF_IR_PSU'].description : Helper: Turn off the Tasmota IR_PSU smart plug
// printer.configfile.config['gcode_macro PROBE_CALIBRATE'].rename_existing : PROBE_CALIBRATE_BASE
// printer.configfile.config['gcode_macro PROBE_CALIBRATE'].description : Helper: Mag Probe; Calibrate the probe's z_offset and undock MagProbe
// printer.configfile.config['gcode_macro PROBE_CALIBRATE'].gcode :
// _Mag_Probe_Debug msg="PROBE_CALIBRATE - entering"
// _MAGPROBE_STATUS_CALIBRATING_Z
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% if user.hw.mag_probe.ena == 'true' and printer.gcode_move.gcode_position.z < user.z_hop %}
// {action_respond_info("PROBE_ACCURACY: High must be above %.2f" % user.z_hop)}
// G90 ; absolute positioning
// G0 Z{user.z_hop} F{user.speed.z_hop} ; move head up
// {% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %} ; set back to relative
// {% endif %}
// {% if user.hw.mag_probe.ena == 'true' %}
// SAVE_GCODE_STATE NAME=STATE_PROBE_CALIBRATE_ATTACH
// ATTACH_PROBE
// RESTORE_GCODE_STATE NAME=STATE_PROBE_CALIBRATE_ATTACH MOVE=1 MOVE_SPEED={(user.speed.travel|float / 60)}
// {% endif %}
// {% if user.hw.mag_probe.ena == 'true' %}
// _MAGPROBE_STATUS_CALIBRATING_Z
// {% endif %}
// PROBE_CALIBRATE_BASE {rawparams}
// {% if user.hw.mag_probe.ena == 'true' %}
// _MAGPROBE_STATUS_READY
// {% endif %}
// {% if user.hw.mag_probe.ena == 'true' %}
// SAVE_GCODE_STATE NAME=STATE_PROBE_CALIBRATE_DETACH
// DETACH_PROBE
// RESTORE_GCODE_STATE NAME=STATE_PROBE_CALIBRATE_DETACH MOVE=1 MOVE_SPEED={(user.speed.travel|float / 60)}
// {% endif %}
// _Mag_Probe_Debug msg="PROBE_CALIBRATE - exiting"
// printer.configfile.config['delayed_gcode prerun'].gcode :
// _general_Debug msg=" prerun- entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set current_led_state = global.current_led_state %}
// {% set z_offset = printer.configfile.config.probe.z_offset|float %}
// {% set nozzle_diameter = printer.configfile.config.extruder.nozzle_diameter|float %}
// {% set pressure_advance = printer.extruder.pressure_advance|float %}
// {% set pressure_advance_smooth_time = printer.configfile.config.extruder.pressure_advance_smooth_time|float %}
// M117 Printer online.
// TURN_OFF_HEATERS
// STOP_LED_EFFECTS
// SET_FAN_LEDS_ON
// SET_LOGO_LEDS_ON
// CHECK_PRINTER_STATE
// {% set progressbar_enabled = global.progressbar_enabled|int %}
// {% if progressbar_enabled == 0 %}
// {% set _dummy = current_led_state.update({'bar_leds':'set_bar_leds_rainbow'}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=current_led_state VALUE="{current_led_state}"
// SET_BAR_LEDS_ON
// {% endif %}
// {% for s in range(0, 30) %}
// SET_LED LED=sb_leds INDEX=17 RED=1 GREEN=0 BLUE=1
// SET_LED LED=sb_leds INDEX=18 RED=.5 GREEN=.5 BLUE=.5
// G4 P100
// SET_LED LED=sb_leds INDEX=17 RED=.5 GREEN=.5 BLUE=.5
// SET_LED LED=sb_leds INDEX=18 RED=1 GREEN=0 BLUE=1
// G4 P50
// {% endfor %}
// IS_PROBE_ATTACHED_AT_BOOT
// SET_VELOCITY_LIMIT ACCEL={user.speed.NPLimitAccel|float} ACCEL_TO_DECEL={user.speed.NPLimitDecel|float}
// M118 Z-Offset is set at {z_offset}mm.
// M118 Nozzle diameter is set at {nozzle_diameter}mm.
// M118 Pressure Advance is set at {pressure_advance}.
// M118 Pressure advance Smooth Time is set at {pressure_advance_smooth_time}.
// FILAMENT_ABOUT
// {% set _dummy = current_led_state.update({'nozzle_leds':'set_nozzle_leds_white'}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=current_led_state VALUE="{current_led_state}"
// SET_NOZZLE_LEDS_ON
// CASELIGHT
// _general_Debug msg=" prerun- exiting"
// printer.configfile.config['gcode_macro PRESSURE_ADVANCE_LIST'].gcode :
// _general_Debug msg="PRESSURE_ADVANCE_LIST - entering"
// {% if not printer.save_variables.variables.pressure_advance %}
// {action_respond_info("PRESSURE ADVANCE: No filament defined ABORDED")}
// {% else %}
// {% set pa_dic = printer.save_variables.variables.pressure_advance %}
// {% set out = ["PRESSURE ADVANCE: Defined filaments"] %}
// {% for filament in pa_dic|sort(attribute='id') %}
// {% set _dummy = out.append("%s" % filament.id) %}
// {% for setup in filament.val|sort(attribute='nozzle') %}
// {% set _dummy = out.append("Nozzle: %1.02f | Pressure Advance: %1.03f | Smooth Time: %1.03f" %
// (setup.nozzle, setup.pa, setup.st)) %}
// {% endfor %}
// {% endfor %}
// {action_respond_info(out|join("\n"))}
// {% endif %}
// _general_Debug msg="PRESSURE_ADVANCE_LIST - exiting"
// printer.configfile.config['gcode_macro PRESSURE_ADVANCE_LIST'].description : Helper: List all filament pressure advance settings
// printer.configfile.config['mcu tinyfan'].baud : 250000
// printer.configfile.config['mcu tinyfan'].restart_method : command
// printer.configfile.config['mcu tinyfan'].serial : /dev/serial/by-id/usb-Klipper_rp2040_E66138935F916E28-if00
// printer.configfile.config['led_effect sb_logo_calibrating_z'].layers :
// breathing  3 1 top (1.00, 0.25, 0.00)
// printer.configfile.config['led_effect sb_logo_calibrating_z'].leds :
// neopixel:sb_leds (9-16)
// printer.configfile.config['led_effect sb_logo_calibrating_z'].autostart : false
// printer.configfile.config['led_effect sb_logo_calibrating_z'].frame_rate : 5
// printer.configfile.config['gcode_macro SET_NOZZLE_LEDS_ON'].gcode :
// _general_Debug msg="SET_NOZZLE_LEDS_ON - entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set nozzle_effect = global.current_led_state.nozzle_leds %}
// SET_LED_EFFECT EFFECT={nozzle_effect}
// _general_Debug msg="SET_NOZZLE_LEDS_ON - exiting"
// printer.configfile.config['gcode_macro SET_NOZZLE_LEDS_ON'].description : Helper: Turn on the stealthburner NOZZLE leds by using the SET_LED_EFFECT call
// printer.configfile.config['led_effect sb_nozzle_homing'].layers :
// gradient 1.00 1.00 top (0.00,0.00,1.00),(0.00,0.00,0.00),(1.00,0.28,0.00)
// printer.configfile.config['led_effect sb_nozzle_homing'].leds :
// neopixel:sb_leds (17,18)
// printer.configfile.config['led_effect sb_nozzle_homing'].autostart : false
// printer.configfile.config['led_effect sb_nozzle_homing'].frame_rate : 2
// printer.configfile.config['gcode_macro CURRENT_NORMAL'].gcode :
// _general_Debug msg="CURRENT_NORMAL - entering"
// M117 Decreased motor currents.
// SET_TMC_CURRENT STEPPER=stepper_x CURRENT={ printer["tmc2209 stepper_x"].run_current }
// SET_TMC_CURRENT STEPPER=stepper_y CURRENT={ printer["tmc2209 stepper_y"].run_current }
// SET_TMC_CURRENT STEPPER=stepper_z CURRENT={ printer["tmc2209 stepper_z"].run_current }
// SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT={ printer["tmc2209 stepper_z1"].run_current }
// SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT={ printer["tmc2209 stepper_z2"].run_current }
// SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT={ printer["tmc2209 stepper_z3"].run_current }
// _general_Debug msg="CURRENT_NORMAL - exiting"
// printer.configfile.config['gcode_macro CURRENT_NORMAL'].description : Helper: Lowers stepper current for NON-printing routines
// printer.configfile.config['temperature_sensor O_Electronic_Case_Temp'].pullup_resistor : 4700
// printer.configfile.config['temperature_sensor O_Electronic_Case_Temp'].sensor_pin : tinyfan: gpio26
// printer.configfile.config['temperature_sensor O_Electronic_Case_Temp'].sensor_type : FYSETC-HT-NTC100K-3950_airtemp
// printer.configfile.config['temperature_sensor O_Electronic_Case_Temp'].min_temp : -200
// printer.configfile.config['temperature_sensor O_Electronic_Case_Temp'].gcode_id : Case_Temp
// printer.configfile.config['temperature_sensor O_Electronic_Case_Temp'].max_temp : 125
// printer.configfile.config['gcode_macro _HEAT_WAIT'].gcode :
// _general_Debug msg="_HEAT_WAIT - entering"
// {% set MINUTES = params.MINUTES|default(10)|int %}
// {% set MSG = params.MSG|default("Warming...")|string %}
// STATUS_HEATING
// {% for i in range(0, MINUTES) %}
// M117 {MSG} {MINUTES-i} minute remaining.
// {% for s in range(0, 60) %}
// SET_LED LED=sb_leds INDEX=17 RED=.5 GREEN=0 BLUE=0
// SET_LED LED=sb_leds INDEX=18 RED=0 GREEN=0 BLUE=.5
// G4 P500                                            ;wait 0.5 seconds
// SET_LED LED=sb_leds INDEX=17 RED=0 GREEN=0 BLUE=.5
// SET_LED LED=sb_leds INDEX=18 RED=.5 GREEN=0 BLUE=0
// G4 P500                                            ;wait 0.5 seconds
// {% endfor %}
// {% endfor %}
// _general_Debug msg="_HEAT_WAIT - exiting"
// printer.configfile.config['gcode_macro _HEAT_WAIT'].description : Helper: Heating cycle, waiting routine
// printer.configfile.config['controller_fan In-take_Right_Side_Controller'].tachometer_pin : ^tinyfan:FAN1_RPM
// printer.configfile.config['controller_fan In-take_Right_Side_Controller'].heater : extruder, heater_bed
// printer.configfile.config['controller_fan In-take_Right_Side_Controller'].cycle_time : 0.00004
// printer.configfile.config['controller_fan In-take_Right_Side_Controller'].pin : tinyfan:FAN1_PWM
// printer.configfile.config['controller_fan In-take_Right_Side_Controller'].off_below : 0.2
// printer.configfile.config['controller_fan In-take_Right_Side_Controller'].idle_speed : 1.0
// printer.configfile.config['controller_fan In-take_Right_Side_Controller'].stepper : stepper_x, stepper_y, stepper_z, stepper_z1, stepper_z2, stepper_z3
// printer.configfile.config['controller_fan In-take_Right_Side_Controller'].fan_speed : 1.0
// printer.configfile.config['controller_fan In-take_Right_Side_Controller'].idle_timeout : 1200
// printer.configfile.config['controller_fan In-take_Right_Side_Controller'].hardware_pwm : true
// printer.configfile.config['gcode_macro _Z_MOVE_CHECK'].gcode :
// _Mag_Probe_Debug msg="_Z_MOVE_CHECK - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set param = [] %}
// {% for key in params %} ; generate base macro call
// {% if key == 'Z' %}
// {% set z_target = params.Z|float if printer.gcode_move.absolute_coordinates
// else params.Z|float + printer.gcode_move.gcode_position.z %}
// {% set z_move_ok = True if z_target >= user.z_hop or
// z_target >= printer.gcode_move.gcode_position.z
// else False %}
// {% if z_move_ok %}
// {% set _dummy = param.append(key + params[key]) %}
// {% else %}
// {action_respond_info("%s: Z Move (%.3f mm -> %.3f mm) not allowed" %
// (params.CALLER, printer.gcode_move.gcode_position.z, z_target))}
// {% endif %}
// {% elif key != 'CALLER' %}
// {% set _dummy = param.append(key + params[key]) %}
// {% endif %}
// {% endfor %}
// {params.CALLER}.1 {param|join(" ")} ; call G0 or G1 base macro with all parameters
// _Mag_Probe_Debug msg="_Z_MOVE_CHECK - exiting"
// printer.configfile.config['gcode_macro _Z_MOVE_CHECK'].description : Helper: Mag Probe; Check limit and perform move
// printer.configfile.config.extended_template.path : /home/pi/klipper_config/ACTIVE/CONFIG/KLIPPER_FUNCTIONS/function_config.yaml
// printer.configfile.config['filament_motion_sensor runout'].detection_length : 14
// printer.configfile.config['filament_motion_sensor runout'].switch_pin : ^PG12
// printer.configfile.config['filament_motion_sensor runout'].insert_gcode :
// M117 Insert Detected
// {action_respond_info("RUNOUT: Filament inserted")}
// printer.configfile.config['filament_motion_sensor runout'].runout_gcode :
// M117 Runout Detected
// {action_respond_info("RUNOUT: Filament runout")}
// PAUSE
// printer.configfile.config['filament_motion_sensor runout'].pause_on_runout : False
// printer.configfile.config['filament_motion_sensor runout'].extruder : extruder
// printer.configfile.config['led_effect sb_logo_meshing'].layers :
// breathing  3 1 top (1.0, 1.0, 0.0)
// printer.configfile.config['led_effect sb_logo_meshing'].leds :
// neopixel:sb_leds (9-16)
// printer.configfile.config['led_effect sb_logo_meshing'].autostart : false
// printer.configfile.config['led_effect sb_logo_meshing'].frame_rate : 5
// printer.configfile.config['gcode_macro _POWER_ON_ESP_PSU'].gcode :
// _general_Debug msg="_POWER_ON_ESP_PSU - entering"
// {action_call_remote_method("set_device_power",
// device="tasmota_plug_ESP",
// state="on")}
// _general_Debug msg="_POWER_ON_ESP_PSU - exiting"
// printer.configfile.config['gcode_macro _POWER_ON_ESP_PSU'].description : Helper: Turn on the Tasmota ESP_PSU smart plug
// printer.configfile.config['gcode_macro DOCK_PROBE'].gcode :
// _Mag_Probe_Debug msg="DOCK_PROBE - entering"
// DETACH_PROBE
// _Mag_Probe_Debug msg="DOCK_PROBE - exiting"
// printer.configfile.config['gcode_macro DOCK_PROBE'].description : Helper: Mag Probe; Dock the MagProbe by calling DETACH_PROBE macro
// printer.configfile.config['delayed_gcode _lights_ready'].gcode :
// _general_Debug msg="_lights_ready - entering"
// LIGHTS STATUS=complete
// _general_Debug msg="_lights_ready - exiting"
// printer.configfile.config['gcode_macro info_bedfans'].gcode :
// _general_Debug msg="info_bedfans - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set chambertemp = printer["temperature_sensor J_Chamber_ZDragChain_PT100"].temperature|float %}
// {% set threshold = user.bedfanvars.threshold|int %}
// {% set defaultenclosure = user.filament.profile.defaultEnclosure %}
// {% set flag = global.bedfanvar.flag|int %}
// {% set lasttemp = global.bedfanvars.lasttemp %}
// {% set offset = user.bedfanvars.offset|int %}
// {% set string1 = "INFO_BEDFANS <+++++++++++++++++" %}
// {% set string1 = string1 ~ "\nHeater_threshold = %d;" %}
// {% set string1 = string1 ~ "\nChamberTEMP_threshold = %.2f;" %}
// {% set string1 = string1 ~ "\nFLAG = %d;" %}
// {% set string1 = string1 ~ "\nLAST_CHAMBER_TEMP = %.2f;" %}
// {% set string1 = string1 ~ "\ncurrent_CHAMBER_TEMP = %.2f;" %}
// {% set string1 = string1 ~ "\nOFFSET = %d;" %}
// {% set string1 = string1 ~ "\nEnd of INFO_BEDFANS +++++++++++++++++>" %}
// {action_respond_info(string1 % (threshold, defaultenclosure, flag, lasttemp, chambertemp, offset)) }
// _general_Debug msg="info_bedfans - exiting"
// printer.configfile.config['gcode_macro info_bedfans'].description : Helper: Display information on Bed Fan variables
// printer.configfile.config['gcode_macro RST_SERVICE'].gcode :
// _general_Debug msg="RST_SERVICE - entering"
// {% if printer.save_variables.variables.print_stats %}
// {% set print_stats = printer.save_variables.variables.print_stats %}
// {% set _dummy = print_stats.time.update({'service': 0}) %}
// SAVE_VARIABLE VARIABLE=print_stats VALUE="{print_stats}"
// {action_respond_info("Time since last service reseted to zero")}
// {% endif %}
// _general_Debug msg="RST_SERVICE - exiting"
// printer.configfile.config['gcode_macro RST_SERVICE'].description : Reset Service interval time
// printer.configfile.config['tmc2209 stepper_z1'].uart_pin : PC7
// printer.configfile.config['tmc2209 stepper_z1'].stealthchop_threshold : 0
// printer.configfile.config['tmc2209 stepper_z1'].interpolate : false
// printer.configfile.config['tmc2209 stepper_z1'].run_current : 0.3
// printer.configfile.config['tmc2209 stepper_z1'].sense_resistor : 0.110
// printer.configfile.config['tmc2209 stepper_z3'].uart_pin : PE4
// printer.configfile.config['tmc2209 stepper_z3'].stealthchop_threshold : 0
// printer.configfile.config['tmc2209 stepper_z3'].interpolate : false
// printer.configfile.config['tmc2209 stepper_z3'].run_current : 0.3
// printer.configfile.config['tmc2209 stepper_z3'].sense_resistor : 0.110
// printer.configfile.config['tmc2209 stepper_z2'].uart_pin : PE1
// printer.configfile.config['tmc2209 stepper_z2'].stealthchop_threshold : 0
// printer.configfile.config['tmc2209 stepper_z2'].interpolate : false
// printer.configfile.config['tmc2209 stepper_z2'].run_current : 0.3
// printer.configfile.config['tmc2209 stepper_z2'].sense_resistor : 0.110
// printer.configfile.config['led_effect sb_nozzle_calibrating_z'].layers :
// breathing  3 1 top (1.00, 0.25, 0.00)
// printer.configfile.config['led_effect sb_nozzle_calibrating_z'].leds :
// neopixel:sb_leds (17,18)
// printer.configfile.config['led_effect sb_nozzle_calibrating_z'].autostart : false
// printer.configfile.config['led_effect sb_nozzle_calibrating_z'].frame_rate : 2
// printer.configfile.config['gcode_macro TURN_OFF_HEATERS'].rename_existing : _TURN_OFF_HEATERS
// printer.configfile.config['gcode_macro TURN_OFF_HEATERS'].description : Helper: BEDFAN macro; Turn off bed fans and turn off heaters
// printer.configfile.config['gcode_macro TURN_OFF_HEATERS'].gcode :
// _general_Debug msg="TURN_OFF_HEATERS- entering"
// M141 S35                       ;set chamber temperature for Exhaust fan and Bed fans to 35C
// _BedFansOff
// _TURN_OFF_HEATERS
// _general_Debug msg="TURN_OFF_HEATERS- exiting"
// printer.configfile.config['verify_heater heater_bed'].max_error : 120
// printer.configfile.config['verify_heater heater_bed'].check_gain_time : 60
// printer.configfile.config['verify_heater heater_bed'].hysteresis : 5
// printer.configfile.config['verify_heater heater_bed'].heating_gain : 2
// printer.configfile.config['led_effect sb_fan_leveling'].layers :
// breathing  3 1 top (0.5, 0.1, 0.4)
// printer.configfile.config['led_effect sb_fan_leveling'].leds :
// neopixel:sb_leds (1-8)
// printer.configfile.config['led_effect sb_fan_leveling'].autostart : false
// printer.configfile.config['led_effect sb_fan_leveling'].frame_rate : 5
// printer.configfile.config['led_effect sb_logo_part_ready'].layers :
// breathing  3 1 top (0.0, 1.0, 0.0)
// printer.configfile.config['led_effect sb_logo_part_ready'].leds :
// neopixel:sb_leds (9-16)
// printer.configfile.config['led_effect sb_logo_part_ready'].autostart : false
// printer.configfile.config['led_effect sb_logo_part_ready'].frame_rate : 5
// printer.configfile.config['gcode_macro status_busy'].gcode :
// _general_Debug msg="status_busy- entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set current_led_state = global.current_led_state %}
// SET_FAN_LEDS_OFF
// SET_LOGO_LEDS_OFF
// SET_NOZZLE_LEDS_OFF
// M117 off
// CHECK_PRINTER_STATE
// {% set progressbar_enabled = global.progressbar_enabled|int %}
// {% if progressbar_enabled == 0 %}
// SET_BAR_LEDS_OFF
// {% set _dummy = current_led_state.update({'bar_leds':'sb_bar_busy'}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=current_led_state VALUE="{current_led_state}"
// SET_BAR_LEDS_ON
// {% endif %}
// {% set fan_busy = 'sb_fan_busy' %}
// {% set logo_busy = 'sb_logo_busy' %}
// {% set nozzle_busy = 'sb_nozzle_busy' %}
// {% set _dummy = current_led_state.update({'fan_leds':fan_busy}) %}
// {% set _dummy = current_led_state.update({'logo_leds':logo_busy}) %}
// {% set _dummy = current_led_state.update({'nozzle_leds':nozzle_busy}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=current_led_state VALUE="{current_led_state}"
// SET_FAN_LEDS_ON
// SET_LOGO_LEDS_ON
// M117 busy
// SET_NOZZLE_LEDS_ON
// _general_Debug msg="status_busy- exiting"
// printer.configfile.config['gcode_macro status_busy'].description : Helper: set the Stealthburner leds to the STATUS_BUSY LED_EFFECT
// printer.configfile.config['gcode_macro _PRINT_OFFSET'].gcode :
// _general_Debug msg="_PRINT_OFFSET - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set text = ["GCODE OFFSET for Z applied from:"] %}
// {% if user.hw.auto_z_offset.manu %}
// {% set _dummy = text.append("Plate %s %.3fmm" %
// (printer.save_variables.variables.plates.array[printer.save_variables.variables.plates.index].name,
// printer.save_variables.variables.plates.array[printer.save_variables.variables.plates.index].offset)) %}
// {% endif %}
// {% if user.hw.auto_z_offset.auto %}
// {% set _dummy = text.append("Z_CALIBRATE %.3fmm" % printer.z_calibration.last_z_offset) %}
// {% endif %}
// {% set _dummy = text.append("User %.3fmm" % user.var.z_adjust) %}
// {% set _dummy = text.append("Total %.3fmm" % printer.gcode_move.homing_origin.z) %}
// {action_respond_info(text|join("\n"))}
// _general_Debug msg="_PRINT_OFFSET - exiting"
// printer.configfile.config['gcode_macro _PRINT_OFFSET'].description : Helper: Print gcode offsets defined by script or user in PRINT_START
// printer.configfile.config['gcode_macro FILAMENT_LOAD'].gcode :
// _general_Debug msg="FILAMENT_LOAD - entering"
// {% set user   = printer['gcode_macro _USER_VARIABLE'] %}
// {% set pos    = user.purge.purge %}
// {% set move_z = [user.z_hop,printer.toolhead.position.z]|max %}                     ; calc movement high
// {% set defaultTN = user.filament.profile.defaultTempNozzle|float %}
// {% set TEMP = params.TEMP|default(defaultTN)|float %}
// {% if printer.idle_timeout.state != "Printing" or printer.pause_resume.is_paused|lower == "true" %}
// {% if user.hw.runout.type == 'motion' %} SET_FILAMENT_SENSOR SENSOR=runout ENABLE=0 {% endif %}
// _CG28                                     ; home if not already homed
// G90                                       ; absolute positioning
// G1 Z{move_z} F{user.speed.z_hop}          ; move head to minimum
// G1 X{pos.x} Y{pos.y} F{user.speed.travel} ; move to purge bucket location
// {% if user.hw.display.ena %} _LCD_KNOB COLOR=BLUE {% endif %}
// {% if not printer.extruder.can_extrude %}
// {action_respond_info("Extruder Temp to low, heating to %3.1fC" % printer.configfile.settings.extruder.min_extrude_temp)}
// M109 S{printer.configfile.settings.extruder.min_extrude_temp}
// {% endif %}
// {% if user.hw.display.ena %} _LCD_KNOB {% endif %}
// G1 Z{pos.z} F{user.speed.z_hop}
// M83                                                   ; set extruder to relative
// G1 E{user.filament.load_distance} F{user.speed.load}  ; quickly load filament
// {% if user.hw.runout.type == 'motion' %}
// _PRINT_AR T="RUNOUT Motion Sensor Enable: true"
// SET_FILAMENT_SENSOR SENSOR=runout ENABLE=1
// {% endif %}
// G1 E{user.filament.load_extrude} F{user.speed.retract} ; slower load filament
// G1 E-{user.filament.retract.pause}
// _WIPE ; clean nozzle
// G1 Z{move_z} F{user.speed.z_hop}
// G1 X{pos.x} Y{pos.y} F{user.speed.travel}              ; move to purge bucket location
// M109 S{TEMP}                                           ; restore old extruder temperature
// _PRINT_AR T="Filament loaded"
// SAVE_VARIABLE VARIABLE=filament_loaded VALUE=True
// {% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %} ; set it back to relativ
// {% if printer.gcode_move.absolute_extrude %}         M82 {% endif %} ; set it back to absolute
// {% else %}
// _PRINT_AR T="Filament loading disabled while printing!"
// {% endif %}
// _general_Debug msg="FILAMENT_LOAD - exiting"
// printer.configfile.config['gcode_macro FILAMENT_LOAD'].description : Helper: Load filament and disable rounout while running
// printer.configfile.config['led_effect sb_nozzle_standby'].layers :
// breathing  3 1 top (0.01, 0.01, 0.01)
// printer.configfile.config['led_effect sb_nozzle_standby'].leds :
// neopixel:sb_leds (17,18)
// printer.configfile.config['led_effect sb_nozzle_standby'].autostart : false
// printer.configfile.config['led_effect sb_nozzle_standby'].frame_rate : 2
// printer.configfile.config['delayed_gcode _DELAY_VENT_OFF'].gcode :
// _general_Debug msg="_DELAY_VENT_OFF - entering"
// {% if printer.print_stats.state|lower != "paused" and printer.print_stats.state|lower != "printing" %}
// M141
// _VENT_INFO
// {% endif %}
// _general_Debug msg="_DELAY_VENT_OFF - exiting"
// printer.configfile.config['gcode_macro ATTACH_PROBE'].gcode :
// _Mag_Probe_Debug msg="ATTACH_PROBE - entering"
// _MAG_PROBE ACTION=ATTACH
// _MAG_PROBE ACTION=CHECK_ATTACH
// _Mag_Probe_Debug msg="ATTACH_PROBE - exiting"
// printer.configfile.config['gcode_macro ATTACH_PROBE'].description : Helper: Mag Probe; Attaching the MagProbe if not already attached
// printer.configfile.config['temperature_sensor M_Y-Axis_Frame_Temp'].min_temp : 0
// printer.configfile.config['temperature_sensor M_Y-Axis_Frame_Temp'].sensor_type : PartsBuilt-NTC3950-Bead_airtemp
// printer.configfile.config['temperature_sensor M_Y-Axis_Frame_Temp'].gcode_id : YFrame
// printer.configfile.config['temperature_sensor M_Y-Axis_Frame_Temp'].sensor_pin : PF6
// printer.configfile.config['temperature_sensor M_Y-Axis_Frame_Temp'].max_temp : 120
// printer.configfile.config['led_effect sb_fan_part_ready'].layers :
// breathing  3 1 top (0.0, 1.0, 0.0)
// printer.configfile.config['led_effect sb_fan_part_ready'].leds :
// neopixel:sb_leds (1-8)
// printer.configfile.config['led_effect sb_fan_part_ready'].autostart : false
// printer.configfile.config['led_effect sb_fan_part_ready'].frame_rate : 5
// printer.configfile.config['gcode_macro DUMP_DICTIONARY'].gcode :
// {% set stop_gcode = params.GCODE|default(-1)|int %}
// {% set stop_configfile = params.STOP_CFG|default(-1)|int %}
// {% set stop_bed_mesh = params.STOP_MESH|default(-1)|int %}
// {% set only_rename_existing = params.RENAME|default(0)|int %}
// {% set only_gcode_macros_description = params.DESC|default(0)|int %}
// {% set retain_case_of_gcode_name = params.RETAIN_CASE|default(0)|int %}
// {% set error_message = True if (((only_rename_existing == 1 ) and (stop_configfile == 0 ) ) or (only_gcode_macros_description == 1 and stop_configfile == 0 )) else False %}
// {% if error_message %}
// {% if (only_rename_existing == 1 ) and (stop_configfile == 0 ) %}
// { action_respond_info("The following params where specified:\nSTOP_CFG = %d\nRENAME = %d" % (stop_configfile,only_rename_existing)) }
// { action_respond_info("This combination of parameters will not produce a result because printer.configfile has been totally removed from the search!\nPlease change the STOP_CFG parameter to a 1 or 2 ") }
// {% elif only_gcode_macros_description == 1 and stop_configfile == 0 %}
// { action_respond_info("The following params where specified:\nSTOP_CFG = %d\nDESC = %d" % (stop_configfile,only_gcode_macros_description)) }
// { action_respond_info("This combination of parameters will not produce a result because printer.configfile has been totally removed from the search!\nPlease change the STOP_CFG parameter to a 1 or 2 ") }
// {%endif %}
// {% endif %}
// {% set ns = namespace(rename_existing=0, flag=0, gcode_description=0, homing_override=0,
// idle_timeout=0, GCflag_homing_override=0, GCflag_idle_timeout=0, homing_override_axes='', stored_commands=['','']) %}
// {% if not error_message %}
// {% set flag = 0 %}
// {% for item in printer|sort  %}
// {% if item|lower == 'configfile' and stop_configfile == 0 %}
// {% elif (item|lower != 'configfile' and only_rename_existing == 1 ) or
// (item|lower != 'configfile' and only_gcode_macros_description == 1 ) %}
// {% else %}
// {% if (item|lower == 'configfile' and only_rename_existing == 1 ) or
// ( item|lower == 'configfile' and only_gcode_macros_description == 1 ) %}
// {% set ns.path = ['',''] %}
// {% if flag != 0 %}
// {% set ns.flag = 1 %}
// { action_respond_info(ns.path|join) }
// {% else %}
// {% set flag = 1 %}
// {% endif %}
// {% else %}
// {% if ' ' in item %}
// {% set ns.path = ['printer', "['%s']" % (item), ''] %}
// {% else %}
// {% set ns.path = ['printer.', item, ''] %}
// {% endif %}
// {% set ns.flag = 1 %}
// { action_respond_info(ns.path|join) }
// {% endif %}
// {% if printer[item].items()|sort %}
// {% if only_gcode_macros_description == 1 %}
// {% for childkey, child in printer[item].items() recursive %}
// {% set ns.path = ns.path[:loop.depth|int + 1] %}
// {%if only_gcode_macros_description == 1 %}
// {% if childkey in ['config','settings'] %}
// {% set null = ns.path.append("") %}
// {% else %}
// {% if retain_case_of_gcode_name == 1 %}
// {% if ' ' in childkey %}
// {% set null = ns.path.append("['%s']" % (childkey)) %}
// {% else %}
// {% set null = ns.path.append(".%s" % (childkey)) %}
// {% endif %}
// {% else %}
// {% if ' ' in childkey %}
// {% set null = ns.path.append("['%s']" % (childkey|lower)) %}
// {% else %}
// {% set null = ns.path.append(".%s" % (childkey|lower)) %}
// {% endif %}
// {% endif %}
// {% endif %}
// {% endif %}
// {% if child is mapping and (childkey|string != 'config' or stop_configfile != 1) and
// ( childkey|string != 'settings' or stop_configfile != 2 ) %}
// { loop(child.items()) }
// {% else %}
// {% if ((childkey|string == 'config') and (stop_configfile == 1 )) %}
// {% if not only_gcode_macros_description %}
// {% set ns.flag = 1 %}
// { action_respond_info("%s:" % (ns.path|join)) }
// {% endif %}
// {% elif ((childkey|string == 'settings') and (stop_configfile == 2 )) %}
// {% if not only_gcode_macros_description %}
// {% set ns.flag = 1 %}
// { action_respond_info("%s:" % (ns.path|join)) }
// {% endif %}
// {% elif ((childkey|string == 'description') and (only_gcode_macros_description == 1 )) %}
// {% set ns.gcode_description = ns.gcode_description + 1 %}
// {% set name_length = (ns.path|join|length) %}
// {% set full_path = ns.path|join %}
// {% set ns.flag = 1 %}
// { action_respond_info("%s : %s" % ( full_path, child)) }
// {% elif ((childkey|string == 'gcode') and (stop_gcode == 0 ) and not(only_gcode_macros_description)) %}
// {% set ns.flag = 1 %}
// { action_respond_info("%s:" % (ns.path|join)) }
// {% else %}
// {% if only_gcode_macros_description == 1 %}
// {% else %}
// {% set ns.flag = 1 %}
// { action_respond_info("%s : %s" % (ns.path|join, child)) }
// {% endif %}
// {% endif %}
// {% endif %}
// {% endfor %}
// {% else %}
// {% for childkey, child in printer[item].items() recursive %}
// {% set ns.path = ns.path[:loop.depth|int + 1] %}
// {% if only_rename_existing == 1 %}
// {% if childkey in ['config','settings'] %}
// {% set null = ns.path.append("") %}
// {% else %}
// {% if ' ' in childkey %}
// {% set null = ns.path.append("['%s']" % (childkey)) %}
// {% else %}
// {% set null = ns.path.append(".%s" % (childkey)) %}
// {% endif %}
// {% endif %}
// {% if ((childkey|string == 'homing_override') ) %}
// {% set child_homing_override_string = child|string %}
// {% if "{'gcode': " in child_homing_override_string %}
// {% set ns.homing_override = ns.homing_override + 1 %}
// {% set null = ns.path.append("%s" % (childkey)) %}
// {% set ns.GCflag_homing_override = 1 %}
// {% endif %}
// {% elif ((childkey|string == 'idle_timeout') ) %}
// {% set child_idle_timeout_string = child|string %}
// {% if "{'gcode': " in child_idle_timeout_string %}
// {% set ns.idle_timeout = ns.idle_timeout + 1 %}
// {% set null = ns.path.append("%s" % (childkey)) %}
// {% set ns.GCflag_idle_timeout = 1 %}
// {% endif %}
// {% endif %}
// {% else %}
// {% if ' ' in childkey %}
// {% set null = ns.path.append("['%s']" % (childkey)) %}
// {% else %}
// {% set null = ns.path.append(".%s" % (childkey)) %}
// {% endif %}
// {% endif %}
// {% if child is mapping and (childkey|string != 'config' or stop_configfile != 1 )
// and ( childkey|string != 'settings' or stop_configfile != 2 ) %}
// { loop(child.items()) }
// {% else %}
// {% if ((childkey|string == 'mesh_matrix' or childkey|string == 'probed_matrix')
// and (stop_bed_mesh == 0 or stop_bed_mesh == 1 )) %}
// {% set ns.flag = 1 %}
// { action_respond_info("%s:" % (ns.path|join)) }
// {% elif ((childkey|string == 'points') and (stop_bed_mesh == 1 )) %}
// {% set ns.flag = 1 %}
// { action_respond_info("%s:" % (ns.path|join)) }
// {% elif ((childkey|string == 'config') and (stop_configfile == 1 )) %}
// {% if only_rename_existing != 1 %}
// {% set ns.flag = 1 %}
// { action_respond_info("%s:" % (ns.path|join)) }
// {% endif %}
// {% elif ((childkey|string == 'settings') and (stop_configfile == 2 )) %}
// {% if only_rename_existing != 1 %}
// {% set ns.flag = 1 %}
// { action_respond_info("%s:" % (ns.path|join)) }
// {% endif %}
// {% elif ((childkey|string == 'axes') and (only_rename_existing == 1 )) %}
// {% set upper_child = child|upper %}
// {% set ns.homing_override_axes = ",".join(upper_child) %}
// {% elif ((childkey|string == 'rename_existing') and (only_rename_existing == 1 )) %}
// {% set ns.rename_existing = ns.rename_existing + 1 %}
// {% set name_length = (ns.path|join|length) - 18 %}
// {% set full_path = ns.path|join %}
// {% set ns.flag = 1 %}
// { action_respond_info("%s renamed existing to %s" % ( full_path[13:name_length], child)) }
// {% elif ((childkey|string == 'gcode') and (stop_gcode == 0 ) and (only_rename_existing != 1 )) %}
// { action_respond_info("%s:" % (ns.path|join)) }
// {% elif ((childkey|string == 'gcode') and (only_rename_existing == 1 ) and (ns.homing_override > 0 or ns.idle_timeout > 0 )) %}
// {% set child_gcode_string = child|string %}
// {% if child_gcode_string != '' %}
// {% if ns.GCflag_homing_override == 1 %}
// {% set name_length = (ns.path|join|length) - 6 %}
// {% set full_path = ns.path|join %}
// {% set ns.flag = 1 %}
// {% set ns.rename_existing = ns.rename_existing + 1 %}
// {% if ns.homing_override_axes == '' %}
// {% set null = ns.stored_commands.append("G28 {} is being overridden by [%s]" % (full_path[1:name_length]) ) %}
// {% else %}
// { action_respond_info("G28{%s} is being overriden by [%s]" % (ns.homing_override_axes, full_path[1:name_length])) }
// {% endif %}
// {% set ns.GCflag_homing_override = 0 %}
// {% elif ns.GCflag_idle_timeout == 1 %}
// {% set name_length = (ns.path|join|length) - 6 %}
// {% set full_path = ns.path|join %}
// {% set ns.flag = 1 %}
// {% set ns.rename_existing = ns.rename_existing + 1 %}
// { action_respond_info("A MACRO exists for [%s].gcode:%s" % (full_path[1:name_length], child)) }
// {% set ns.GCflag_idle_timeout = 0 %}
// {% endif %}
// {% else %}
// {% if ns.GCflag_homing_override == 1 %}
// {% set ns.GCflag_homing_override = 0 %}
// {% elif ns.GCflag_idle_timeout == 1 %}
// {% set ns.GCflag_idle_timeout = 0 %}
// {% endif %}
// {% endif %}
// {% elif ((childkey|string == 'idle_timeout' ) and only_rename_existing == 1 )  %}
// {% else %}
// {% if only_rename_existing == 1 %}
// {% else %}
// {% set ns.flag = 1 %}
// { action_respond_info("%s : %s" % (ns.path|join, child)) }
// {% endif %}
// {% endif %}
// {% endif %}
// {% endfor %}
// {% endif %}
// {% endif %}
// {% endif %}
// {% endfor %}
// {% endif %}
// {% if ns.flag == 0 %}
// {action_respond_info("Nothing found for \"DUMP_DICTIONARY %s\"" % rawparams)}
// {% elif ns.rename_existing > 0 %}
// {% if ns.stored_commands != "" %}
// {% set full_path = ns.stored_commands|join %}
// {% set name_length = ( full_path|length) %}
// {% set split1 = full_path[:5] %}
// {% set split2 = full_path[5:]%}
// { action_respond_info("%s" % (split1+ns.homing_override_axes+split2)) }
// {% endif %}
// {action_respond_info("")}
// {action_respond_info("DUMP_DICTIONARY found a TOTAL of %d renamed macro(s)" % ns.rename_existing)}
// {% elif ns.gcode_description > 0 %}
// {action_respond_info("")}
// {action_respond_info("DUMP_DICTIONARY found a TOTAL of %d macro description(s) " % ns.gcode_description)}
// {% endif %}
// printer.configfile.config['gcode_macro DUMP_DICTIONARY'].description : Helper: Dump all Klipper parameters located in printer object to terminal, helps find names and values of variables for use in macros
// printer.configfile.config['gcode_macro _SET_ACC'].gcode :
// _general_Debug msg="_SET_ACC - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set _set_acc = global._set_acc %}
// {% set val = params.VAL|default('CONFIG') %}
// {% set accel = user.homing.accel  if val == 'HOME'
// else printer.configfile.settings.printer.max_accel %}
// {% set accel_to_decel = user.homing.accel|int / 2 if val == 'HOME'
// else printer.configfile.settings.printer.max_accel_to_decel %}
// {% if val != _set_acc.last_val %}
// {% set _dummy = _set_acc.update({'last_val': val }) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=_set_acc VALUE="{_set_acc}"
// {% if params.RESPOND|default(user.respond.acc)|int == 1 %}
// {action_respond_info("Home&Probe: ACCEL: %d ACCEL_TO_DECEL: %d" % (accel|int, accel_to_decel|int))}
// {% endif %}
// SET_VELOCITY_LIMIT ACCEL={accel} ACCEL_TO_DECEL={accel_to_decel}
// {% endif %}
// _general_Debug msg="_SET_ACC - exiting"
// printer.configfile.config['gcode_macro _SET_ACC'].description : Helper: Set accel and accel_to_decel value
// printer.configfile.config['gcode_macro M107'].rename_existing : M107.1
// printer.configfile.config['gcode_macro M107'].description : Helper: Part Cooling Fan Off
// printer.configfile.config['gcode_macro M107'].gcode :
// _general_Debug msg="M107 - entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set fancheckvars = global.fancheckvars %}
// {% set _dummy = fancheckvars.update({'part_cooling_fan_enabled':0}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=fancheckvars VALUE="{fancheckvars}"
// M107.1 {rawparams}
// _general_Debug msg="M107 - exiting"
// printer.configfile.config['verify_heater extruder'].max_error : 120
// printer.configfile.config['verify_heater extruder'].check_gain_time : 20
// printer.configfile.config['verify_heater extruder'].hysteresis : 5
// printer.configfile.config['verify_heater extruder'].heating_gain : 2
// printer.configfile.config['thermistor FYSETC-HT-NTC100K-3950_airtemp'].resistance2 : 22770.473
// printer.configfile.config['thermistor FYSETC-HT-NTC100K-3950_airtemp'].resistance3 : 7210.884
// printer.configfile.config['thermistor FYSETC-HT-NTC100K-3950_airtemp'].resistance1 : 115684.676
// printer.configfile.config['thermistor FYSETC-HT-NTC100K-3950_airtemp'].temperature2 : 58
// printer.configfile.config['thermistor FYSETC-HT-NTC100K-3950_airtemp'].temperature3 : 88
// printer.configfile.config['thermistor FYSETC-HT-NTC100K-3950_airtemp'].temperature1 : 23
// printer.configfile.config['gcode_macro status_leveling'].gcode :
// _general_Debug msg="status_leveling- entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set current_led_state = global.current_led_state %}
// SET_FAN_LEDS_OFF
// SET_LOGO_LEDS_OFF
// SET_NOZZLE_LEDS_OFF
// M117 off
// CHECK_PRINTER_STATE
// {% set progressbar_enabled = global.progressbar_enabled|int %}
// {% if progressbar_enabled == 0 %}
// SET_BAR_LEDS_OFF
// {% set _dummy = current_led_state.update({'bar_leds':'sb_bar_leveling'}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=current_led_state VALUE="{current_led_state}"
// SET_BAR_LEDS_ON
// {% endif %}
// {% set _dummy = current_led_state.update({'fan_leds':'sb_fan_leveling'}) %}
// {% set _dummy = current_led_state.update({'logo_leds':'sb_logo_leveling'}) %}
// {% set _dummy = current_led_state.update({'nozzle_leds':'sb_nozzle_leveling'}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=current_led_state VALUE="{current_led_state}"
// SET_FAN_LEDS_ON
// SET_LOGO_LEDS_ON
// M117 leveling
// SET_NOZZLE_LEDS_ON
// _general_Debug msg="status_leveling- exiting"
// printer.configfile.config['gcode_macro status_leveling'].description : Helper: set the Stealthburner leds to the STATUS_LEVELING LED_EFFECT
// printer.configfile.config['gcode_macro PROBE'].rename_existing : PROBE_BASE
// printer.configfile.config['gcode_macro PROBE'].description : Helper: Mag Probe; Probe Z-height at current XY position and dock/undock MagProbe
// printer.configfile.config['gcode_macro PROBE'].gcode :
// _Mag_Probe_Debug msg="PROBE - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% if user.hw.mag_probe.ena == 'true' and printer.gcode_move.gcode_position.z < user.z_hop %}
// {action_respond_info("PROBE_ACCURACY: High must be above %.2f" % user.z_hop)}
// G90 ; absolute positioning
// G0 Z{user.z_hop} F{user.speed.z_hop} ; move head up
// {% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %} ; set back to relative
// {% endif %}
// {% if user.hw.mag_probe.ena == 'true' %}
// SAVE_GCODE_STATE NAME=STATE_PROBE
// ATTACH_PROBE
// RESTORE_GCODE_STATE NAME=STATE_PROBE MOVE=1 MOVE_SPEED={(user.speed.travel|float / 60)}
// {% endif %}
// PROBE_BASE {rawparams}
// G1 Z{user.z_hop} F{user.speed.z_hop} ; move head up to remove trigger
// {% if user.hw.mag_probe.ena == 'true' and params.DOCK|default(1)|int == 1 %}  ; use DOCK=0 to omit the probe docking
// DETACH_PROBE
// RESTORE_GCODE_STATE NAME=STATE_PROBE MOVE=1 MOVE_SPEED={(user.speed.travel|float / 60)}
// {% endif %}
// {% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %} ; set back to relative
// _Mag_Probe_Debug msg="PROBE - exiting"
// printer.configfile.config['gcode_macro PRINT_END'].gcode :
// _general_Debug msg="PRINT_END - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// SET_VELOCITY_LIMIT ACCEL={user.speed.NPLimitAccel|float} ACCEL_TO_DECEL={user.speed.NPLimitDecel|float}
// {% set filter_off = user.peripheral.filter.run_after_print %}
// {% set vent_on    = user.peripheral.vent.on_val %}
// {% set vent_off   = user.peripheral.vent.run_after_print %}
// {% set max = printer.toolhead.axis_maximum %}
// {% set act = printer.toolhead.position %}
// {% set safe = {'x': 20.0 if act.x|float < (max.x|float - 20.0) else -20.0,
// 'y': 20.0 if act.y|float < (max.y|float - 20.0) else -20.0,
// 'z':  2.0 if act.z|float < (max.z|float -  2.0) else (max.z|float - act.z|float)} %}
// M400                                                              ; wait for buffer to clear
// SAVE_GCODE_STATE NAME=STATE_PRINT_END
// G92 E0                                                            ; zero the extruder
// M83                                                               ; relative extrusion
// G1 E-{user.filament.retract.end} F{user.speed.retract}            ; retract filament
// G91                                                               ; relative positioning
// G0 X{safe.x} Y{safe.y} Z{safe.z} F{user.speed.travel}             ; move nozzle to remove stringing
// DISABLEFILAMENTSENSOR
// TURN_OFF_HEATERS                                                  ; turn off heaters
// CURRENT_NORMAL
// M107                                                              ; turn off fan
// {% if user.hw.chamber.fan %} M141 S{vent_on} {% endif %}          ; vent chamber (setting fan to below ambient)
// G90                                                               ; absolute positioning
// M400                                                              ; wait for buffer to clear
// G0 X{user.park.pause.x} Y{user.park.pause.y} F{user.speed.travel} ; park nozzle at brush bin
// _ADD_PRINT_TIME
// _SD_PRINT_STATS R='done'
// _SD_PRINTER_STATS
// {% if user.hw.display.ena %} _LCD_KNOB COLOR=GREEN {% endif %}
// {% if user.hw.caselight.ena %} _CASELIGHT_OFF {% endif %}
// {% if user.hw.chamber.fan %} UPDATE_DELAYED_GCODE ID=_DELAY_VENT_OFF DURATION={vent_off} {% endif %}
// {% if user.hw.filter.ena %} UPDATE_DELAYED_GCODE ID=_DELAY_FILTER_OFF DURATION={filter_off} {% endif %}
// {% if user.hw.endstop_temp.ena %}
// {action_respond_info("PRINT_END
// BED temp: act %3.1fC
// Endstop temp: start %3.1fC end %3.1fC" % (printer['temperature_sensor bed'].temperature if 'temperature_sensor bed' in printer
// else printer.heater_bed.temperature,
// printer['gcode_macro PRINT_START'].var.temp.endstop,
// printer['temperature_sensor endstop'].temperature))}
// {% endif %}
// {% if user.unload_sd|lower == 'true' %} UPDATE_DELAYED_GCODE ID=_DELAY_SDCARD_RESET_FILE DURATION=10 {% endif %}
// UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=10
// RESTORE_GCODE_STATE NAME=STATE_PRINT_END
// _COOL_WAIT MINUTES={user.filament.profile.PostPrintCool|float}
// M220 S100 ; set feedrate percentage back to default
// M221 S100 ; set speed percentage back to default
// SET_NOZZLE_LEDS_OFF
// SET_LED LED=sb_leds INDEX=17 RED=.2 GREEN=.5 BLUE=.2
// SET_LED LED=sb_leds INDEX=18 RED=.2 GREEN=.5 BLUE=.2
// STATUS_READY
// M118 Finished printing, check nozzle clear.
// _general_Debug msg="PRINT_END - exiting"
// printer.configfile.config['gcode_macro PRINT_END'].description : Helper: All commands after the print
// printer.configfile.config['gcode_macro TOGGLE_LAYER_OUTPUT'].gcode :
// _general_Debug msg="TOGGLE_LAYER_OUTPUT - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set respond = user.respond %}
// {% set _dummy = respond.update({'layer':1}) if respond.layer|int == 0 else respond.update({'layer':0}) %}
// SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=respond VALUE="{respond}"
// _general_Debug msg="TOGGLE_LAYER_OUTPUT - exiting"
// printer.configfile.config['gcode_macro TOGGLE_LAYER_OUTPUT'].description : Helper: Enable/Disable Console output of _LAYER
// printer.configfile.config['led_effect sb_nozzle_leveling'].layers :
// breathing  3 1 top (0.5, 0.1, 0.4)
// printer.configfile.config['led_effect sb_nozzle_leveling'].leds :
// neopixel:sb_leds (17,18)
// printer.configfile.config['led_effect sb_nozzle_leveling'].autostart : false
// printer.configfile.config['led_effect sb_nozzle_leveling'].frame_rate : 2
// printer.configfile.config['gcode_macro TEST_SET_WLED'].gcode :
// _general_Debug msg="TEST_SET_WLED - entering"
// {% set INDEX = params.INDEX|default(1)|int %}
// {% set RED = params.RED|default(1)|float %}
// {% set GREEN = params.GREEN|default(0)|float %}
// {% set BLUE = params.BLUE|default(0)|float %}
// {% set WHITE = params.WHITE|default(0)|float %}
// {% set STRIP = params.STRIP|default("Chamber_Lights")|string %}
// SET_WLED STRIP={STRIP} RED={RED} GREEN={GREEN} BLUE={BLUE} WHITE={WHITE} INDEX={INDEX}
// _general_Debug msg="TEST_SET_WLED - exiting"
// printer.configfile.config['gcode_macro TEST_SET_WLED'].description : Helper: Test the WLED strip to see if an issue exists where a single pixel would not turn back on or turn on with low brightness
// printer.configfile.config['output_pin reset_line_RP2040'].shutdown_value : 0
// printer.configfile.config['output_pin reset_line_RP2040'].pin : rpi:gpiochip0/gpio5
// printer.configfile.config['output_pin reset_line_RP2040'].value : 0
// printer.configfile.config['gcode_macro _magprobe_status_leveling'].gcode :
// {% if printer['gcode_macro status_leveling'] is defined %}
// _Mag_Probe_Debug msg="_magprobe_status_leveling activating the LED STATUS_LEVELING"
// STATUS_LEVELING
// {% endif %}
// printer.configfile.config['gcode_macro _magprobe_status_leveling'].description : Helper: Mag Probe, enable STATUS_LEVELING LED state
// printer.configfile.config.z_thermal_adjust.gcode_id : ZFrame
// printer.configfile.config.z_thermal_adjust.z_adjust_off_above : 99999999.0
// printer.configfile.config.z_thermal_adjust.sensor_pin : PF7
// printer.configfile.config.z_thermal_adjust.sensor_type : Generic 3950
// printer.configfile.config.z_thermal_adjust.smooth_time : 2.0
// printer.configfile.config.z_thermal_adjust.min_temp : 0
// printer.configfile.config.z_thermal_adjust.max_z_adjustment : 99999999.0
// printer.configfile.config.z_thermal_adjust.temp_coeff : 0.0
// printer.configfile.config.z_thermal_adjust.max_temp : 120
// printer.configfile.config['gcode_macro ZUP'].gcode :
// _general_Debug msg="ZUP- entering"
// SET_GCODE_OFFSET Z_ADJUST=0.01 MOVE=1
// _general_Debug msg="ZUP- exiting"
// printer.configfile.config['gcode_macro ZUP'].description : Helper: Helps in setting SET_GCODE_OFFSET to get the perfect squish; this moves z +0.01mm
// printer.configfile.config['delayed_gcode _update_leds_loop'].gcode :
// _general_Debug msg="_update_leds_loop - entering"
// CHECK_PRINTER_STATE
// _set_leds
// UPDATE_DELAYED_GCODE ID=_update_leds_loop DURATION=60
// _general_Debug msg="_update_leds_loop - exiting"
// printer.configfile.config['gcode_macro status_cooling'].gcode :
// _general_Debug msg="status_cooling- entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set current_led_state = global.current_led_state %}
// SET_FAN_LEDS_OFF
// SET_LOGO_LEDS_OFF
// SET_NOZZLE_LEDS_OFF
// M117 off
// CHECK_PRINTER_STATE
// {% set progressbar_enabled = global.progressbar_enabled|int %}
// {% if progressbar_enabled == 0 %}
// SET_BAR_LEDS_OFF
// {% set _dummy = current_led_state.update({'bar_leds':'sb_bar_cooling'}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=current_led_state VALUE="{current_led_state}"
// SET_BAR_LEDS_ON
// {% endif %}
// {% set _dummy = current_led_state.update({'fan_leds':'sb_fan_cooling'}) %}
// {% set _dummy = current_led_state.update({'logo_leds':'sb_logo_cooling'}) %}
// {% set _dummy = current_led_state.update({'nozzle_leds':'sb_nozzle_cooling'}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=current_led_state VALUE="{current_led_state}"
// SET_FAN_LEDS_ON
// SET_LOGO_LEDS_ON
// M117 cooling
// SET_NOZZLE_LEDS_ON
// _general_Debug msg="status_cooling- exiting"
// printer.configfile.config['gcode_macro status_cooling'].description : Helper: set the Stealthburner leds to the STATUS_COOLING LED_EFFECT
// printer.configfile.config['gcode_macro _WIPE'].gcode :
// _general_Debug msg="_WIPE - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set bucket_pos = global.bucket_pos %}
// {% set wipe     = user.purge.wipe %}
// G90 ; absolute positioning
// G0 Z{wipe.travel.z} F{user.speed.z_hop}
// G0 X{wipe.end.x[bucket_pos]} F{user.speed.wipe}
// G0 Y{wipe.end.y}
// G0 Z{wipe.start.z} F{user.speed.z_hop}
// {% for moves in range(0, wipe.cnt) %} ; move head diagonal to brush
// {% for coordinate in [wipe.start.x[bucket_pos], wipe.end.x[bucket_pos]] %}
// G0 X{coordinate} Y{wipe.start.y + wipe.offset * moves}
// {% endfor %}
// {% endfor %}
// G0 X{wipe.end.x[bucket_pos]} Y{wipe.end.y} Z{wipe.end.z}
// _general_Debug msg="_WIPE - exiting"
// printer.configfile.config['gcode_macro _WIPE'].description : Helper: Wipe nozzle at bucket
// printer.configfile.config['gcode_macro RESONANCES_TEST'].gcode :
// _general_Debug msg="RESONANCES_TEST - enter"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// _CG28                                                 ; home if needed
// TURN_OFF_HEATERS                                      ; turn off heaters
// M107                                                  ; turn off fan
// {% if user.hw.chamber.fan %} M141 {% endif %}         ; exhaust fan off
// {% if user.hw.filter.ena %} _SET_FILTER {% endif %}   ; filter off
// _PRINT_AR T="INPUT SHAPER: Noise values, check if sensor is installed"
// MEASURE_AXES_NOISE                                    ; get noise value in log
// _PRINT_AR T="INPUT SHAPER: Resonance Tests starting"
// _PRINT_AR T="INPUT SHAPER: Mesasure X axis"
// TEST_RESONANCES AXIS=X                                ; measure X
// _PRINT_AR T="INPUT SHAPER: Mesasure Y axis"
// TEST_RESONANCES AXIS=Y                                ; measure Y
// _PRINT_AR T="INPUT SHAPER: Resonance Tests done"
// _PRINT_AR T="INPUT SHAPER: Generate graph in backround"
// RUN_SHELL_COMMAND CMD=plot_graph PARAMS=SHAPER
// _general_Debug msg="RESONANCES_TEST - exit"
// printer.configfile.config['gcode_macro RESONANCES_TEST'].description : Helper: Run input shaper test
// printer.configfile.config.firmware_retraction.retract_length : 0.75
// printer.configfile.config.firmware_retraction.unretract_extra_length : 0
// printer.configfile.config.firmware_retraction.unretract_speed : 30
// printer.configfile.config.firmware_retraction.retract_speed : 50
// printer.configfile.config['led_effect sb_bar_cooling'].layers :
// chase  1.0  8.0 add (0.00,0.00,1.00),(0.00,0.00,0.0)
// printer.configfile.config['led_effect sb_bar_cooling'].leds :
// neopixel:progress_bar_leds (1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,32,33,31,28,26,24,22,20,18,16,14,12,10,8,6,4,2)
// printer.configfile.config['led_effect sb_bar_cooling'].autostart : false
// printer.configfile.config['led_effect sb_bar_cooling'].frame_rate : 5
// printer.configfile.config['gcode_macro _magprobe_status_meshing'].gcode :
// {% if printer['gcode_macro status_meshing'] is defined %}
// _Mag_Probe_Debug msg="_magprobe_status_meshing activating the LED STATUS_MESHING"
// STATUS_MESHING
// {% endif %}
// printer.configfile.config['gcode_macro _magprobe_status_meshing'].description : Helper: Mag Probe, enable STATUS_MESHING LED state
// printer.configfile.config['thermistor PartsBuilt-NTC3950-Bead_airtemp'].resistance2 : 26474.732
// printer.configfile.config['thermistor PartsBuilt-NTC3950-Bead_airtemp'].resistance3 : 8506.278
// printer.configfile.config['thermistor PartsBuilt-NTC3950-Bead_airtemp'].resistance1 : 118576.221
// printer.configfile.config['thermistor PartsBuilt-NTC3950-Bead_airtemp'].temperature2 : 56
// printer.configfile.config['thermistor PartsBuilt-NTC3950-Bead_airtemp'].temperature3 : 86
// printer.configfile.config['thermistor PartsBuilt-NTC3950-Bead_airtemp'].temperature1 : 23
// printer.configfile.config['temperature_sensor L_X-Axis_Frame_Temp'].min_temp : 0
// printer.configfile.config['temperature_sensor L_X-Axis_Frame_Temp'].sensor_type : PartsBuilt-NTC3950-Bead_airtemp
// printer.configfile.config['temperature_sensor L_X-Axis_Frame_Temp'].gcode_id : XFrame
// printer.configfile.config['temperature_sensor L_X-Axis_Frame_Temp'].sensor_pin : PF4
// printer.configfile.config['temperature_sensor L_X-Axis_Frame_Temp'].max_temp : 120
// printer.configfile.config['gcode_macro _EXECUTE_AT_INIT'].gcode :
// _general_Debug msg="_EXECUTE_AT_INIT - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% if 'gcode_macro _MENU_LIMITS' is in printer %} _MENU_LIMITS INDEX=4 {% endif %}
// {% if printer.save_variables.variables.filament_sensor %} _RESTORE_FILAMENT_SENSOR {% endif %}
// {% if user.hw.filter.ena %} _CHECK_FILTER {% endif %}
// {% if user.hw.relay.ena %} _HEATER_ON {% endif %}
// {% if user.hw.display.ena %} UPDATE_DELAYED_GCODE ID=_DISPLAY_INIT DURATION=2 {% endif %}
// UPDATE_DELAYED_GCODE ID=CHECK_ALL_FANS_LOOP DURATION=1
// RESETRGB
// UPDATE_DELAYED_GCODE ID=prerun DURATION=1
// UPDATE_DELAYED_GCODE ID=_update_leds_loop DURATION=5
// UPDATE_DELAYED_GCODE ID=report_temperatures_loop DURATION=5
// _PRINT_AR T="Klipper INIT done"
// _general_Debug msg="_EXECUTE_AT_INIT - exiting"
// printer.configfile.config['gcode_macro _EXECUTE_AT_INIT'].description : Helper: Everything that should run at klipper start
// printer.configfile.config['delayed_gcode bedfanloop'].gcode :
// _general_Debug msg="bedfanloop - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set bedfanvars = global.bedfanvars %}
// {% set THRESHOLD = user.bedfanvars.threshold|int %}                                                          ;target bed temperature you set
// {% set CHAMBER_THERSHOLD = user.filament.profile.defaultEnclosure %}                                         ;desired temperature for chamber
// {% set CURRENT_CHAMBERTEMP = printer["temperature_sensor J_Chamber_ZDragChain_PT100"].temperature %}         ;current chamber temperature
// {% set LAST_CHAMBERTEMP = global.bedfanvars.lasttemp %}                                                      ;previous chamber temperature
// {% set OFFSET = user.bedfanvars.offset|int %}                                                                ;window witdth for chamber temperature
// {% set FLAG = global.bedfanvars.flag|int %}                                                                  ;indicates the state of this macro
// {% if printer.heater_bed.target >= THRESHOLD %}
// {% if printer.heater_bed.temperature|int >= (printer.heater_bed.target|int - 1) %}
// {% if FLAG == 0 %}
// _BedFansFast
// {% set _dummy = bedfanvars.update({'lasttemp':CURRENT_CHAMBERTEMP}) %}
// {% set _dummy = bedfanvars.update({'flag':2}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=bedfanvars VALUE="{bedfanvars}"
// UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=8
// {% elif (FLAG != 0) %}
// {% if CURRENT_CHAMBERTEMP < LAST_CHAMBERTEMP  %}
// {% if CURRENT_CHAMBERTEMP < (CHAMBER_THERSHOLD-OFFSET) %}
// {% if FLAG != 3 %}
// _BedFansFastPlus_02
// {% set _dummy = bedfanvars.update({'flag':3}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=bedfanvars VALUE="{bedfanvars}"
// {% endif %}
// {% endif %}
// {% else %}
// {% if CURRENT_CHAMBERTEMP >= CHAMBER_THERSHOLD %}
// {% if FLAG != 4 %}
// _BedFansOff
// {% set _dummy = bedfanvars.update({'flag':4}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=bedfanvars VALUE="{bedfanvars}"
// {% endif %}
// {% endif %}
// {% endif %}
// {% set _dummy = bedfanvars.update({'lasttemp':CURRENT_CHAMBERTEMP}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=bedfanvars VALUE="{bedfanvars}"
// UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=8
// {% endif %}
// {% else %}
// {% set _dummy = bedfanvars.update({'lasttemp':CURRENT_CHAMBERTEMP}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=bedfanvars VALUE="{bedfanvars}"
// UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=8
// {% endif %}
// {% endif %}
// _general_Debug msg="bedfanloop - exiting"
// printer.configfile.config['gcode_macro PARK_Center'].gcode :
// _general_Debug msg="PARK_Center - entering"
// {% set Z = params.Z|default(40)|float %}
// _general_entry_point function=PARK_Center
// {% set X_MID = printer.configfile.config.stepper_x.position_max|float / 2.0 %}
// {% set Y_MID = printer.configfile.config.stepper_y.position_max|float / 2.0 %}
// _CG28
// G0 X{X_MID} Y{Y_MID} Z{Z} F4000
// _general_exit_point function=PARK_Center
// _general_Debug msg="PARK_Center - exiting"
// printer.configfile.config['gcode_macro PARK_Center'].description : Helper: Parks the toolhead in the center position
// printer.configfile.config['gcode_macro RST_FILTER'].gcode :
// _general_Debug msg="RST_FILTER - entering"
// {% if printer.save_variables.variables.print_stats %}
// {% set print_stats = printer.save_variables.variables.print_stats %}
// {% set _dummy = print_stats.time.update({'filter': 0}) %}
// SAVE_VARIABLE VARIABLE=print_stats VALUE="{print_stats}"
// {action_respond_info("Flter used time reseted to zero")}
// {% endif %}
// _general_Debug msg="RST_FILTER - exiting"
// printer.configfile.config['gcode_macro RST_FILTER'].description : Reset Nevermore interval time
// printer.configfile.config['gcode_macro PRIME_LINE'].gcode :
// _general_Debug msg="PRIME_LINE - entering"
// {% set user     = printer['gcode_macro _USER_VARIABLE'] %}
// {% set prime        = user.prime %}
// {% set prime_height = params.PRIME_HEIGHT|default(prime.pos.z) %}     ; get parameter or set default
// {% set move_z       = [user.z_hop,printer.toolhead.position.z]|max %} ; calc movement high
// {% if prime.dir|string == 'X+' %}
// {% set first_line   = 'X%s E%s F%s'  % (prime.length_per_seg, prime.extrude_per_seg, user.speed.prime) %}
// {% set second_line  = 'X-%s E%s F%s' % (prime.length_per_seg, prime.extrude_per_seg, user.speed.prime) %}
// {% set move_to_side = 'Y%s' % prime.spacing %}
// {% elif prime.dir|string == 'X-' %}
// {% set first_line   = 'X-%s E%s F%s' % (prime.length_per_seg, prime.extrude_per_seg, user.speed.prime) %}
// {% set second_line  = 'X%s E%s F%s'  % (prime.length_per_seg, prime.extrude_per_seg, user.speed.prime) %}
// {% set move_to_side = 'Y%s' % prime.spacing %}
// {% elif prime.dir|string == 'Y+' %}
// {% set first_line   = 'Y%s E%s F%s'  % (prime.length_per_seg, prime.extrude_per_seg, user.speed.prime) %}
// {% set second_line  = 'Y-%s E%s F%s' % (prime.length_per_seg, prime.extrude_per_seg, user.speed.prime) %}
// {% set move_to_side = 'X%s' % prime.spacing %}
// {% elif prime.dir|string == 'Y-' %}
// {% set first_line   = 'Y-%s E%s F%s' % (prime.length_per_seg, prime.extrude_per_seg, user.speed.prime) %}
// {% set second_line  = 'Y%s E%s F%s'  % (prime.length_per_seg, prime.extrude_per_seg, user.speed.prime) %}
// {% set move_to_side = 'X%s' % prime.spacing %}
// {% else %}
// {action_raise_error("_USER_VARIABLE.prime.dir is not spezified as X+, X-, Y+ or Y-")}
// {% endif %}
// {% if user.hw.display.ena %}
// _PRINT_AR T="Prime Line" SHOW_LCD=true
// {% else %}
// _PRINT_AR T="Prime Line"
// {% endif %}
// _CG28                                                 ; home if not already homed
// G92 E0                                                ; reset Extruder
// G90                                                   ; absolute positioning
// G1 Z{move_z} F{user.speed.z_hop}                      ; move head up
// G1 X{prime.pos.x} Y{prime.pos.y} F{user.speed.travel} ; move to start position
// G1 Z{prime_height} F{user.speed.z_hop}                ; move Z Axis down
// G91                                                   ; relative positioning
// {% for segment in range(prime.seg|int) %}             ; draw the first line
// G1 {first_line}
// {% endfor %}
// G1 {move_to_side}                                     ; move to side
// {% for segment in range(prime.seg|int) %}             ; draw the second line
// G1 {second_line}
// {% endfor %}
// G92 E0                                                ; reset Extruder
// {% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %} ; set it back to relative
// {% if printer.gcode_move.absolute_extrude %}         M82 {% endif %} ; set it back to absolute
// {% if user.hw.display.ena %} UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=1 {% endif %}
// _general_Debug msg="PRIME_LINE - exiting"
// printer.configfile.config['gcode_macro PRIME_LINE'].description : Helper: Purge nozzle at defined position
// printer.configfile.config['gcode_macro check_printer_state'].gcode :
// _general_Debug msg="check_printer_state - entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set progressbar_enabled = global.progressbar_enabled|int %}
// {% if printer.extruder.target == 0 %}
// _DISABLE_PROGRESS_BAR
// {% else %}
// {% if printer.idle_timeout.state == "Printing" and progressbar_enabled == 0 %}
// _ENABLE_PROGRESS_BAR
// SET_BAR_LEDS_OFF
// {% endif %}
// {% endif %}
// _general_Debug msg="check_printer_state - exiting"
// printer.configfile.config['gcode_macro check_printer_state'].description : Helper: change the enable or disable state of the progress bar based on the state of the extruder heater and the state of the printer
// printer.configfile.config['gcode_macro _error_if_probe_deployed'].gcode :
// G4 P300
// _MAG_PROBE ACTION='get_status' RESPOND=0
// _do_error_if_probe_deployed
// printer.configfile.config['gcode_macro _error_if_probe_deployed'].description : Helper: Euclid Probe safety, to Verify Euclid probe is docked
// printer.configfile.config['gcode_macro _FILAMENT_READY'].gcode :
// _general_Debug msg="_FILAMENT_READY - entering"
// {% set user         = printer['gcode_macro _USER_VARIABLE'] %}
// {% set NZLD         = printer.configfile.config.extruder.nozzle_diameter|float %}
// {% set purgeRetract = user.filament.profile.purgeRetract|float %}
// SET_VELOCITY_LIMIT ACCEL={user.filament.profile.LimitAccel|float} ACCEL_TO_DECEL={user.filament.profile.LimitDecel|float}
// G1 X0 Y19.8 Z0.3 F1500.0
// G1 E{(12.5 * NZLD)} F3600
// M400
// G1 X0 Y0 Z0.3 F1500.0
// G1 X130 Y0.0 Z0.3 F1500.0 E{(37.5 * NZLD)}
// G1 X130 Y0.3 Z0.3 F5000.0
// G1 X010 Y0.3 Z0.3 F1500.0 E{(75.0 * NZLD)}
// M400
// G92 E0
// G1 E-{purgeRetract} F3000
// G1 Z5.0 F3000
// G1 Y10 F4000
// _general_Debug msg="_FILAMENT_READY - exiting"
// printer.configfile.config['gcode_macro _FILAMENT_READY'].description : Helper: Performs filament specific purge line and readies for print
// printer.configfile.config['gcode_macro _general_Debug'].gcode :
// {% set message  = params.MSG %}
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set debug = user.respond.debug|default(False) %}
// {% if debug %}
// { action_respond_info(message) }
// {% endif %}
// printer.configfile.config['gcode_macro _general_Debug'].description : Helper: If this call which contains a message on the name of the current routine is placed at the beginning and ending of the current routine then this can be used to determine where an error occurred (which routine the error occurred in) if _USER_VARIABLE respond.debug is set to True
// printer.configfile.config['led_effect sb_fan_meshing'].layers :
// breathing  3 1 top (1.0, 1.0, 0.0)
// printer.configfile.config['led_effect sb_fan_meshing'].leds :
// neopixel:sb_leds (1-8)
// printer.configfile.config['led_effect sb_fan_meshing'].autostart : false
// printer.configfile.config['led_effect sb_fan_meshing'].frame_rate : 5
// printer.configfile.config['gcode_macro _CHECK_FILTER'].gcode :
// _general_Debug msg="_CHECK_FILTER - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% if user.hw.filter.ena and
// printer.save_variables.variables.print_stats %}
// {% set Fh = (printer.save_variables.variables.print_stats.time.filter / 3600)|int %}
// {% if Fh >= user.peripheral.filter.warning %}
// M117 Change Filter!
// {action_respond_info("Change Filter material at Micro!")}
// {% if user.hw.display.ena %} UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=10 {% endif %}
// {% endif %}
// {% endif %}
// _general_Debug msg="_CHECK_FILTER - exiting"
// printer.configfile.config['gcode_macro _CHECK_FILTER'].description : Helper: Print filter exchange warning
// printer.configfile.config.quad_gantry_level.retries : 10
// printer.configfile.config.quad_gantry_level.horizontal_move_z : 15
// printer.configfile.config.quad_gantry_level.retry_tolerance : 0.00375
// printer.configfile.config.quad_gantry_level.gantry_corners :
// -60,-10
// 360,370
// printer.configfile.config.quad_gantry_level.points :
// 50,25
// 50,225
// 250,225
// 250,25
// printer.configfile.config.quad_gantry_level.speed : 200
// printer.configfile.config.quad_gantry_level.max_adjust : 15
// printer.configfile.config['led_effect sb_logo_printing'].layers :
// gradient  0.3  1 add (0.3, 0.0, 0.0),(0.3, 0.3, 0.0),(0.3, 0.1, 0.0)
// printer.configfile.config['led_effect sb_logo_printing'].leds :
// neopixel:sb_leds (9-16)
// printer.configfile.config['led_effect sb_logo_printing'].autostart : false
// printer.configfile.config['led_effect sb_logo_printing'].frame_rate : 5
// printer.configfile.config.z_calibration.max_deviation : 1.0
// printer.configfile.config.z_calibration.start_gcode : _SET_Z_CURRENT VAL=HOME
// DETACH_PROBE
// printer.configfile.config.z_calibration.speed : 300
// printer.configfile.config.z_calibration.before_switch_gcode : ATTACH_PROBE
// G0 Z20
// printer.configfile.config.z_calibration.end_gcode : _SET_Z_CURRENT
// DETACH_PROBE
// printer.configfile.config.z_calibration.switch_xy_position : 207, 278.5
// printer.configfile.config.z_calibration.nozzle_xy_position : 202, 303.5
// printer.configfile.config.z_calibration.probing_first_fast : true
// printer.configfile.config.z_calibration.switch_offset : 0.13875
// printer.configfile.config.z_calibration.clearance : 5
// printer.configfile.config['gcode_macro _DISABLE_PROGRESS_BAR'].gcode :
// _general_Debug msg="_DISABLE_PROGRESS_BAR - entering"
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=progressbar_enabled VALUE=0
// _general_Debug msg="_DISABLE_PROGRESS_BAR - exiting"
// printer.configfile.config['gcode_macro _DISABLE_PROGRESS_BAR'].description : Helper: Disable Progress bar so that the Progress bar LEDs can be used for another purpose
// printer.configfile.config['bed_mesh default'].tension : 0.2
// printer.configfile.config['bed_mesh default'].min_x : 50.5
// printer.configfile.config['bed_mesh default'].min_y : 48.0
// printer.configfile.config['bed_mesh default'].y_count : 7
// printer.configfile.config['bed_mesh default'].mesh_y_pps : 2
// printer.configfile.config['bed_mesh default'].x_count : 7
// printer.configfile.config['bed_mesh default'].points :
// 0.018750, 0.033750, 0.028750, 0.027500, 0.026250, 0.021250, 0.027500
// 0.007500, 0.023750, 0.016250, 0.016250, 0.020000, 0.015000, 0.013750
// -0.007500, 0.005000, 0.001250, 0.002500, 0.008750, 0.008750, 0.007500
// -0.008750, 0.002500, -0.003750, 0.000000, 0.010000, 0.012500, 0.010000
// -0.010000, 0.001250, -0.003750, -0.005000, -0.001250, 0.002500, -0.002500
// 0.007500, 0.020000, 0.008750, 0.010000, 0.010000, 0.012500, 0.011250
// 0.033750, 0.047500, 0.035000, 0.028750, 0.030000, 0.030000, 0.035000
// printer.configfile.config['bed_mesh default'].version : 1
// printer.configfile.config['bed_mesh default'].algo : bicubic
// printer.configfile.config['bed_mesh default'].mesh_x_pps : 2
// printer.configfile.config['bed_mesh default'].max_x : 250.48
// printer.configfile.config['bed_mesh default'].max_y : 247.98
// printer.configfile.config['delayed_gcode _CLEAR_DISPLAY'].gcode :
// _general_Debug msg="_CLEAR_DISPLAY - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% if user.hw.display.ena %} M117 {% endif %}
// _general_Debug msg="_CLEAR_DISPLAY - exiting"
// printer.configfile.config['delayed_gcode probe_accuracy_set_next_state'].gcode :
// {% set tmacro = printer['gcode_macro _GLOBAL_VARS'] %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=state VALUE='"{ tmacro.next_state }"'
// printer.configfile.config['bed_mesh MESHJTM110'].tension : 0.2
// printer.configfile.config['bed_mesh MESHJTM110'].min_x : 50.5
// printer.configfile.config['bed_mesh MESHJTM110'].min_y : 48.0
// printer.configfile.config['bed_mesh MESHJTM110'].y_count : 7
// printer.configfile.config['bed_mesh MESHJTM110'].mesh_y_pps : 2
// printer.configfile.config['bed_mesh MESHJTM110'].x_count : 7
// printer.configfile.config['bed_mesh MESHJTM110'].points :
// 0.018750, 0.033750, 0.028750, 0.027500, 0.026250, 0.021250, 0.027500
// 0.007500, 0.023750, 0.016250, 0.016250, 0.020000, 0.015000, 0.013750
// -0.007500, 0.005000, 0.001250, 0.002500, 0.008750, 0.008750, 0.007500
// -0.008750, 0.002500, -0.003750, 0.000000, 0.010000, 0.012500, 0.010000
// -0.010000, 0.001250, -0.003750, -0.005000, -0.001250, 0.002500, -0.002500
// 0.007500, 0.020000, 0.008750, 0.010000, 0.010000, 0.012500, 0.011250
// 0.033750, 0.047500, 0.035000, 0.028750, 0.030000, 0.030000, 0.035000
// printer.configfile.config['bed_mesh MESHJTM110'].version : 1
// printer.configfile.config['bed_mesh MESHJTM110'].algo : bicubic
// printer.configfile.config['bed_mesh MESHJTM110'].mesh_x_pps : 2
// printer.configfile.config['bed_mesh MESHJTM110'].max_x : 250.48
// printer.configfile.config['bed_mesh MESHJTM110'].max_y : 247.98
// printer.configfile.config['gcode_macro M106'].rename_existing : M106.1
// printer.configfile.config['gcode_macro M106'].description : Helper: Set fan with manual override and lock option; Part Cooling Fan On/Off
// printer.configfile.config['gcode_macro M106'].gcode :
// _general_Debug msg="M106 - entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set fancheckvars = global.fancheckvars %}
// {% set S = params.S|float %}
// {% if printer['output_pin lock_M106'].value|int == 0 or params.M|default(0) == '1' %}
// {% if S > 0.0  %}
// {% set _dummy = fancheckvars.update({'part_cooling_fan_enabled':1}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=fancheckvars VALUE="{fancheckvars}"
// {% else %}
// {% set _dummy = fancheckvars.update({'part_cooling_fan_enabled':0}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=fancheckvars VALUE="{fancheckvars}"
// {% endif %}
// M106.1 {rawparams}
// {% else %}
// {action_respond_info("M106 update is locked")}
// {% endif %}
// _general_Debug msg="M106 - exiting"
// printer.configfile.config['gcode_macro SET_FILAMENT_SENSOR'].rename_existing : SET_FILAMENT_SENSOR_BASE
// printer.configfile.config['gcode_macro SET_FILAMENT_SENSOR'].description : Helper: Sets the filament sensor on/off and save value to file
// printer.configfile.config['gcode_macro SET_FILAMENT_SENSOR'].gcode :
// _general_Debug msg="SET_FILAMENT_SENSOR - entering"
// {% if printer.save_variables.variables.filament_sensor is not defined %}
// {% set filament_sensor = {params.SENSOR|string: params.ENABLE|int} %}
// {% else %}
// {% set filament_sensor = printer.save_variables.variables.filament_sensor %}
// {% set _dummy = filament_sensor.update({params.SENSOR|string: params.ENABLE|int}) %}
// {% endif %}
// SET_FILAMENT_SENSOR_BASE SENSOR={params.SENSOR} ENABLE={params.ENABLE}
// SAVE_VARIABLE VARIABLE=filament_sensor VALUE="{filament_sensor}"
// _general_Debug msg="SET_FILAMENT_SENSOR - exiting"
// printer.configfile.config['gcode_macro PRESSURE_ADVANCE_REMOVE'].gcode :
// _general_Debug msg="PRESSURE_ADVANCE_REMOVE - entering"
// {% if 'FILAMENT' not in params|upper %}
// {action_respond_info("PRESSURE ADVANCE: FILAMENT must be defined use \"PRESSURE_ADVANCE_REMOVE FILAMENT=id\" as a minimum")}
// {% else %}
// {% if not printer.save_variables.variables.pressure_advance %}
// {action_respond_info("PRESSURE ADVANCE: Nothing to remove, no save_variable defined yet")}
// {% else %}
// {% set id = params.FILAMENT|string %}
// {% set pa_dic = printer.save_variables.variables.pressure_advance %}
// {% for filament in pa_dic %}
// {% if id == filament.id %}
// {% if 'NOZZLE' in params|upper %}
// {% set nozzle = params.NOZZLE|float|round(2) %}
// {% set id_index = loop.index0 %}
// {% for setup in filament.val %}
// {% if nozzle == setup.nozzle %}
// {action_respond_info("PRESSURE ADVANCE: Remove Nozzle %s at Filament %s" % (nozzle,id))}
// {% set _dummy = pa_dic[id_index].val.pop(loop.index0) %}
// {% elif loop.last %}
// {action_respond_info("PRESSURE ADVANCE: Nothing to remove, Nozzle %s at Filament %s not defined" % (nozzle,id))}
// {% endif%}
// {% endfor %}
// {% else %}
// {action_respond_info("PRESSURE ADVANCE: Remove Filament %s" % id)}
// {% set _dummy = pa_dic.pop(loop.index0) %}
// {% endif %}
// {% elif loop.last %}
// {action_respond_info("PRESSURE ADVANCE: Nothing to remove, Filament %s not defined" % id)}
// {% endif %}
// {% endfor %}
// {% endif %}
// SAVE_VARIABLE VARIABLE=pressure_advance VALUE="{pa_dic}"
// {% endif %}
// _general_Debug msg="PRESSURE_ADVANCE_REMOVE - exiting"
// printer.configfile.config['gcode_macro PRESSURE_ADVANCE_REMOVE'].description : Helper: Remove a filament or a nezzle setup
// printer.configfile.config['gcode_macro PAUSE'].rename_existing : PAUSE_BASE
// printer.configfile.config['gcode_macro PAUSE'].description : Pause the actual running print
// printer.configfile.config['gcode_macro PAUSE'].gcode :
// _general_Debug msg="PAUSE - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set restore = {'absolute': {'coordinates': printer.gcode_move.absolute_coordinates,
// 'extrude'    : printer.gcode_move.absolute_extrude},
// 'speed'   : printer.gcode_move.speed} %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=restore VALUE="{restore}"
// {% if user.hw.display.ena %} _LCD_KNOB COLOR=BLUE BLINK=1 {% endif %}
// {% if not printer.extruder.can_extrude %}
// {action_respond_info("Extruder Temp to low heat to %3.1fC" % printer.configfile.settings.extruder.min_extrude_temp)}
// M109 S{printer.configfile.settings.extruder.min_extrude_temp}
// {% endif %}
// M83
// G0 E-{user.filament.retract.pause} F{user.speed.retract}
// PAUSE_BASE
// _TOOLHEAD_PARK P=0 X={params.X|default(user.park.pause.x)} Y={params.Y|default(user.park.pause.y)}
// M104 S{printer.extruder.target}
// _general_Debug msg="PAUSE - exiting"
// printer.configfile.config['gcode_macro FILAMENT_ABOUT'].gcode :
// _general_Debug msg="FILAMENT_ABOUT - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% if user.filament.profile.name == "ABS" %}
// M117 Loaded filament profile ABS04 (Generic ABS / 0.4mm Nozzle)
// {% elif user.filament.profile.name == "PETG" %}
// M117 Loaded filament profile PETG04 (Generic PETG / 0.4mm Nozzle)
// {% else %}
// {% endif %}
// _general_Debug msg="FILAMENT_ABOUT - exiting"
// printer.configfile.config['gcode_macro FILAMENT_ABOUT'].description : Helper: Reports the loaded filament profile
// printer.configfile.config['gcode_macro G32'].gcode :
// _general_Debug msg="G32 - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% if user.hw.display.ena %}
// _PRINT_AR T="Home & QGL" SHOW_LCD=true
// {% else %}
// _PRINT_AR T="Home & QGL"
// {% endif %}
// BED_MESH_CLEAR
// _CG28
// SET_GCODE_OFFSET Z=0 MOVE=1
// {% if user.var.redo_qgl|lower == 'true' %}
// _PRINT_AR T="QGL forced by PRINT_START"
// QUAD_GANTRY_LEVEL PARK=false HOME=false
// {% elif printer.quad_gantry_level.applied|lower == 'false' %} %}
// _PRINT_AR T="QGL not executed yet"
// QUAD_GANTRY_LEVEL PARK=false HOME=false
// {% endif %}
// {% if user.hw.display.ena %} UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=1 {% endif %}
// _general_Debug msg="G32 - exiting"
// printer.configfile.config['gcode_macro G32'].description : Helper: Clears bed-mesh and performs G28, ATTACH_PROBE, QGL, DOCK_PROBE
// printer.configfile.config['gcode_macro WLED_OFF'].gcode :
// _general_Debug msg="WLED_OFF- entering"
// {% set strip = params.STRIP|string %}
// {action_call_remote_method("set_wled_state",
// strip=strip,
// state=False)}
// _general_Debug msg="WLED_OFF- exiting"
// printer.configfile.config['gcode_macro WLED_OFF'].description : Helper: Turn off a WLED strip
// printer.configfile.config['gcode_macro G34'].gcode :
// _general_Debug msg="G34 - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% if user.hw.display.ena %}
// _PRINT_AR T="Home & QGL" SHOW_LCD=true
// {% else %}
// _PRINT_AR T="Home & QGL"
// {% endif %}
// BED_MESH_CLEAR
// _CG28
// SET_GCODE_OFFSET Z=0 MOVE=1
// {% if user.var.redo_qgl|lower == 'true' %}
// _PRINT_AR T="QGL forced by PRINT_START"
// QUAD_GANTRY_LEVEL PARK=false HOME=false
// {% elif printer.quad_gantry_level.applied|lower == 'false' %}
// _PRINT_AR T="QGL not executed yet"
// QUAD_GANTRY_LEVEL PARK=false HOME=false
// {% endif %}
// {% if user.hw.display.ena %} UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=1 {% endif %}
// _general_Debug msg="G34 - exiting"
// printer.configfile.config['gcode_macro G34'].description : Helper Reset bed mesh, offset and execute QGL
// printer.configfile.config['led_effect sb_fan_cooling'].layers :
// chase  0.3  2 add (0.00,0.00,1.00),(0.00,0.00,0.0)
// printer.configfile.config['led_effect sb_fan_cooling'].leds :
// neopixel:sb_leds (1,3,7,8,6,2)
// printer.configfile.config['led_effect sb_fan_cooling'].autostart : false
// printer.configfile.config['led_effect sb_fan_cooling'].frame_rate : 5
// printer.configfile.config['delayed_gcode _DELAY_SDCARD_RESET_FILE'].gcode :
// _general_Debug msg="_DELAY_SDCARD_RESET_FILE - entering"
// SDCARD_RESET_FILE
// _general_Debug msg="_DELAY_SDCARD_RESET_FILE - exiting"
// printer.configfile.config['gcode_macro TEST_SET_BLACK'].gcode :
// _general_Debug msg="TEST_SET_BLACK - entering"
// {% set STRIP = params.STRIP|default("Chamber_Lights")|string %}
// SET_WLED STRIP={STRIP}
// _general_Debug msg="TEST_SET_BLACK - exiting"
// printer.configfile.config['gcode_macro TEST_SET_BLACK'].description : Helper: Sets all leds on for a WLED strip but use the color black color
// printer.configfile.settings['gcode_macro filament_load'].gcode :
// _general_Debug msg="FILAMENT_LOAD - entering"
// {% set user   = printer['gcode_macro _USER_VARIABLE'] %}
// {% set pos    = user.purge.purge %}
// {% set move_z = [user.z_hop,printer.toolhead.position.z]|max %}                     ; calc movement high
// {% set defaultTN = user.filament.profile.defaultTempNozzle|float %}
// {% set TEMP = params.TEMP|default(defaultTN)|float %}
// {% if printer.idle_timeout.state != "Printing" or printer.pause_resume.is_paused|lower == "true" %}
// {% if user.hw.runout.type == 'motion' %} SET_FILAMENT_SENSOR SENSOR=runout ENABLE=0 {% endif %}
// _CG28                                     ; home if not already homed
// G90                                       ; absolute positioning
// G1 Z{move_z} F{user.speed.z_hop}          ; move head to minimum
// G1 X{pos.x} Y{pos.y} F{user.speed.travel} ; move to purge bucket location
// {% if user.hw.display.ena %} _LCD_KNOB COLOR=BLUE {% endif %}
// {% if not printer.extruder.can_extrude %}
// {action_respond_info("Extruder Temp to low, heating to %3.1fC" % printer.configfile.settings.extruder.min_extrude_temp)}
// M109 S{printer.configfile.settings.extruder.min_extrude_temp}
// {% endif %}
// {% if user.hw.display.ena %} _LCD_KNOB {% endif %}
// G1 Z{pos.z} F{user.speed.z_hop}
// M83                                                   ; set extruder to relative
// G1 E{user.filament.load_distance} F{user.speed.load}  ; quickly load filament
// {% if user.hw.runout.type == 'motion' %}
// _PRINT_AR T="RUNOUT Motion Sensor Enable: true"
// SET_FILAMENT_SENSOR SENSOR=runout ENABLE=1
// {% endif %}
// G1 E{user.filament.load_extrude} F{user.speed.retract} ; slower load filament
// G1 E-{user.filament.retract.pause}
// _WIPE ; clean nozzle
// G1 Z{move_z} F{user.speed.z_hop}
// G1 X{pos.x} Y{pos.y} F{user.speed.travel}              ; move to purge bucket location
// M109 S{TEMP}                                           ; restore old extruder temperature
// _PRINT_AR T="Filament loaded"
// SAVE_VARIABLE VARIABLE=filament_loaded VALUE=True
// {% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %} ; set it back to relativ
// {% if printer.gcode_move.absolute_extrude %}         M82 {% endif %} ; set it back to absolute
// {% else %}
// _PRINT_AR T="Filament loading disabled while printing!"
// {% endif %}
// _general_Debug msg="FILAMENT_LOAD - exiting"
// printer.configfile.settings['gcode_macro filament_load'].description : Helper: Load filament and disable rounout while running
// printer.configfile.settings['gcode_macro g32'].gcode :
// _general_Debug msg="G32 - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% if user.hw.display.ena %}
// _PRINT_AR T="Home & QGL" SHOW_LCD=true
// {% else %}
// _PRINT_AR T="Home & QGL"
// {% endif %}
// BED_MESH_CLEAR
// _CG28
// SET_GCODE_OFFSET Z=0 MOVE=1
// {% if user.var.redo_qgl|lower == 'true' %}
// _PRINT_AR T="QGL forced by PRINT_START"
// QUAD_GANTRY_LEVEL PARK=false HOME=false
// {% elif printer.quad_gantry_level.applied|lower == 'false' %} %}
// _PRINT_AR T="QGL not executed yet"
// QUAD_GANTRY_LEVEL PARK=false HOME=false
// {% endif %}
// {% if user.hw.display.ena %} UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=1 {% endif %}
// _general_Debug msg="G32 - exiting"
// printer.configfile.settings['gcode_macro g32'].description : Helper: Clears bed-mesh and performs G28, ATTACH_PROBE, QGL, DOCK_PROBE
// printer.configfile.settings['gcode_macro g34'].gcode :
// _general_Debug msg="G34 - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% if user.hw.display.ena %}
// _PRINT_AR T="Home & QGL" SHOW_LCD=true
// {% else %}
// _PRINT_AR T="Home & QGL"
// {% endif %}
// BED_MESH_CLEAR
// _CG28
// SET_GCODE_OFFSET Z=0 MOVE=1
// {% if user.var.redo_qgl|lower == 'true' %}
// _PRINT_AR T="QGL forced by PRINT_START"
// QUAD_GANTRY_LEVEL PARK=false HOME=false
// {% elif printer.quad_gantry_level.applied|lower == 'false' %}
// _PRINT_AR T="QGL not executed yet"
// QUAD_GANTRY_LEVEL PARK=false HOME=false
// {% endif %}
// {% if user.hw.display.ena %} UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=1 {% endif %}
// _general_Debug msg="G34 - exiting"
// printer.configfile.settings['gcode_macro g34'].description : Helper Reset bed mesh, offset and execute QGL
// printer.configfile.settings['gcode_macro query_probe'].rename_existing : QUERY_PROBE_BASE
// printer.configfile.settings['gcode_macro query_probe'].description : Helper: Mag Probe; Return the status of the z-probe and store ID
// printer.configfile.settings['gcode_macro query_probe'].gcode :
// _Mag_Probe_Debug msg="QUERY_PROBE - entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set query_probe = global.query_probe %}
// QUERY_PROBE_BASE
// {% set _dummy = query_probe.update({'id': params.ID|default(0) }) %}      ; call id 0 means invalid
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=query_probe VALUE="{query_probe}"
// _Mag_Probe_Debug msg="QUERY_PROBE - exiting"
// printer.configfile.settings['led_effect set_nozzle_leds_white'].layers :
// static  1  0 top (0.0, 0.0, 0.0, 0.5)
// printer.configfile.settings['led_effect set_nozzle_leds_white'].run_on_error : False
// printer.configfile.settings['led_effect set_nozzle_leds_white'].leds :
// neopixel:sb_leds (17,18)
// printer.configfile.settings['led_effect set_nozzle_leds_white'].frame_rate : 2.0
// printer.configfile.settings['led_effect set_nozzle_leds_white'].autostart : False
// printer.configfile.settings.mcu.baud : 250000
// printer.configfile.settings.mcu.restart_method : command
// printer.configfile.settings.mcu.serial : /dev/serial/by-id/usb-Klipper_stm32f446xx_0F003E00095053424E363420-if00
// printer.configfile.settings.mcu.max_stepper_error : 2.5e-05
// printer.configfile.settings['gcode_macro _dock_euclid_probe'].gcode :
// _Mag_Probe_Debug msg="_DOCK_EUCLID_PROBE - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set move_z = [user.z_hop, printer.toolhead.position.z]|max %}     ; calc movement high
// G90                                                                  ; absolute positioning
// G0 Z{move_z} F{user.speed.z_hop}                                     ; move head up
// G0 X{user.probe.store.x} Y{user.probe.store.y} F{user.speed.travel}  ; step 1 G0 X50 Y306
// G0 X{user.probe.dock.x} F{user.speed.dock}                           ; step 2 G0 X0
// G0 Y{user.probe.dock.y} F{user.speed.dock}                           ; step 3 G0 Y286
// {% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %} ; set back to relative
// _MAGPROBE_STATUS_READY
// _Mag_Probe_Debug msg="_DOCK_EUCLID_PROBE - exiting"
// printer.configfile.settings['gcode_macro _dock_euclid_probe'].description : Helper: Mag Probe; Dock Euclid MagProbe
// printer.configfile.settings.stepper_z.homing_positive_dir : False
// printer.configfile.settings.stepper_z.homing_retract_dist : 3.0
// printer.configfile.settings.stepper_z.position_endstop : 2.28
// printer.configfile.settings.stepper_z.full_steps_per_rotation : 200
// printer.configfile.settings.stepper_z.endstop_pin : PG10
// printer.configfile.settings.stepper_z.rotation_distance : 40.0
// printer.configfile.settings.stepper_z.gear_ratio : ((80.0, 16.0),)
// printer.configfile.settings.stepper_z.second_homing_speed : 3.0
// printer.configfile.settings.stepper_z.step_pin : PF11
// printer.configfile.settings.stepper_z.position_min : -6.8
// printer.configfile.settings.stepper_z.microsteps : 32
// printer.configfile.settings.stepper_z.homing_speed : 8.0
// printer.configfile.settings.stepper_z.position_max : 260.0
// printer.configfile.settings.stepper_z.dir_pin : PG3
// printer.configfile.settings.stepper_z.homing_retract_speed : 8.0
// printer.configfile.settings.stepper_z.enable_pin : !PG5
// printer.configfile.settings.stepper_y.homing_positive_dir : True
// printer.configfile.settings.stepper_y.homing_retract_dist : 5.0
// printer.configfile.settings.stepper_y.position_endstop : 306.0
// printer.configfile.settings.stepper_y.full_steps_per_rotation : 400
// printer.configfile.settings.stepper_y.endstop_pin : PG9
// printer.configfile.settings.stepper_y.rotation_distance : 40.0
// printer.configfile.settings.stepper_y.gear_ratio : ()
// printer.configfile.settings.stepper_y.second_homing_speed : 10.0
// printer.configfile.settings.stepper_y.step_pin : PG0
// printer.configfile.settings.stepper_y.homing_speed : 25.0
// printer.configfile.settings.stepper_y.microsteps : 32
// printer.configfile.settings.stepper_y.position_min : 0.0
// printer.configfile.settings.stepper_y.dir_pin : PG1
// printer.configfile.settings.stepper_y.position_max : 306.0
// printer.configfile.settings.stepper_y.homing_retract_speed : 25.0
// printer.configfile.settings.stepper_y.enable_pin : !PF15
// printer.configfile.settings.stepper_x.homing_positive_dir : True
// printer.configfile.settings.stepper_x.homing_retract_dist : 5.0
// printer.configfile.settings.stepper_x.position_endstop : 300.0
// printer.configfile.settings.stepper_x.full_steps_per_rotation : 400
// printer.configfile.settings.stepper_x.endstop_pin : PG6
// printer.configfile.settings.stepper_x.rotation_distance : 40.0
// printer.configfile.settings.stepper_x.gear_ratio : ()
// printer.configfile.settings.stepper_x.second_homing_speed : 10.0
// printer.configfile.settings.stepper_x.step_pin : PF13
// printer.configfile.settings.stepper_x.homing_speed : 25.0
// printer.configfile.settings.stepper_x.microsteps : 32
// printer.configfile.settings.stepper_x.position_min : 0.0
// printer.configfile.settings.stepper_x.position_max : 300.0
// printer.configfile.settings.stepper_x.dir_pin : PF12
// printer.configfile.settings.stepper_x.homing_retract_speed : 25.0
// printer.configfile.settings.stepper_x.enable_pin : !PF14
// printer.configfile.settings['thermistor partsbuilt-ntc3950-bead_airtemp'].resistance2 : 26474.732
// printer.configfile.settings['thermistor partsbuilt-ntc3950-bead_airtemp'].resistance3 : 8506.278
// printer.configfile.settings['thermistor partsbuilt-ntc3950-bead_airtemp'].resistance1 : 118576.221
// printer.configfile.settings['thermistor partsbuilt-ntc3950-bead_airtemp'].temperature2 : 56.0
// printer.configfile.settings['thermistor partsbuilt-ntc3950-bead_airtemp'].temperature3 : 86.0
// printer.configfile.settings['thermistor partsbuilt-ntc3950-bead_airtemp'].temperature1 : 23.0
// printer.configfile.settings['extended_macro park_dict'].gcode :
// _general_Debug msg="PARK_DICT - entering"
// {% if params.DICT %}
// {% set position = params.DICT %}
// _CG28                 ; home if not already homed
// G90                   ; absolute positioning
// G0 X{(str_to_dict(position)).x} Y{(str_to_dict(position)).y} Z{(str_to_dict(position)).z} F{(str_to_dict(position)).f}
// {% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %} ; set back to relative
// {% endif %}
// _general_Debug msg="PARK_DICT - exiting"
// printer.configfile.settings['extended_macro park_dict'].description : Helper: Park head depending on variable DICT parameter which is a python dictionary variable
// printer.configfile.settings['led_effect sb_bar_leveling'].layers :
// breathing  3 1 top (0.5, 0.1, 0.4)
// printer.configfile.settings['led_effect sb_bar_leveling'].leds :
// neopixel:progress_bar_leds (1-33)
// printer.configfile.settings['led_effect sb_bar_leveling'].autostart : False
// printer.configfile.settings['led_effect sb_bar_leveling'].frame_rate : 5.0
// printer.configfile.settings['led_effect sb_bar_leveling'].run_on_error : False
// printer.configfile.settings['led_effect sb_bar_printing'].layers :
// gradient  0.3  3 add (0.3, 0.0, 0.0),(0.3, 0.3, 0.0),(0.3, 0.1, 0.0),(0.3, 0.0, 0.0),(0.3, 0.3, 0.0),(0.3, 0.1, 0.0),(0.3, 0.0, 0.0),(0.3, 0.3, 0.0),(0.3, 0.1, 0.0)
// printer.configfile.settings['led_effect sb_bar_printing'].leds :
// neopixel:progress_bar_leds (1-33)
// printer.configfile.settings['led_effect sb_bar_printing'].frame_rate : 5.0
// printer.configfile.settings['led_effect sb_bar_printing'].autostart : False
// printer.configfile.settings['led_effect sb_bar_printing'].run_on_error : False
// printer.configfile.settings['led_effect sb_nozzle_cooling'].layers :
// gradient 1.00 1.00 top (0.00,0.00,1.00),(0.00,0.00,0.00),(0.00,0.00,1.00)
// printer.configfile.settings['led_effect sb_nozzle_cooling'].run_on_error : False
// printer.configfile.settings['led_effect sb_nozzle_cooling'].leds :
// neopixel:sb_leds (17,18)
// printer.configfile.settings['led_effect sb_nozzle_cooling'].autostart : False
// printer.configfile.settings['led_effect sb_nozzle_cooling'].frame_rate : 2.0
// printer.configfile.settings['led_effect sb_fan_cleaning'].layers :
// breathing  3 1 top (0.0, 0.02, 0.5)
// printer.configfile.settings['led_effect sb_fan_cleaning'].leds :
// neopixel:sb_leds (1-8)
// printer.configfile.settings['led_effect sb_fan_cleaning'].autostart : False
// printer.configfile.settings['led_effect sb_fan_cleaning'].frame_rate : 5.0
// printer.configfile.settings['led_effect sb_fan_cleaning'].run_on_error : False
// printer.configfile.settings['controller_fan in-take_right_side_controller'].tachometer_pin : ^tinyfan:FAN1_RPM
// printer.configfile.settings['controller_fan in-take_right_side_controller'].heater : ('extruder', 'heater_bed')
// printer.configfile.settings['controller_fan in-take_right_side_controller'].cycle_time : 4e-05
// printer.configfile.settings['controller_fan in-take_right_side_controller'].pin : tinyfan:FAN1_PWM
// printer.configfile.settings['controller_fan in-take_right_side_controller'].off_below : 0.2
// printer.configfile.settings['controller_fan in-take_right_side_controller'].idle_speed : 1.0
// printer.configfile.settings['controller_fan in-take_right_side_controller'].tachometer_poll_interval : 0.0015
// printer.configfile.settings['controller_fan in-take_right_side_controller'].stepper : ('stepper_x', 'stepper_y', 'stepper_z', 'stepper_z1', 'stepper_z2', 'stepper_z3')
// printer.configfile.settings['controller_fan in-take_right_side_controller'].fan_speed : 1.0
// printer.configfile.settings['controller_fan in-take_right_side_controller'].shutdown_speed : 0.0
// printer.configfile.settings['controller_fan in-take_right_side_controller'].idle_timeout : 1200
// printer.configfile.settings['controller_fan in-take_right_side_controller'].max_power : 1.0
// printer.configfile.settings['controller_fan in-take_right_side_controller'].kick_start_time : 0.1
// printer.configfile.settings['controller_fan in-take_right_side_controller'].tachometer_ppr : 2
// printer.configfile.settings['controller_fan in-take_right_side_controller'].hardware_pwm : True
// printer.configfile.settings.fan.tachometer_pin : ^EBBCan: PB5
// printer.configfile.settings.fan.cycle_time : 0.02
// printer.configfile.settings.fan.pin : EBBCan: PA0
// printer.configfile.settings.fan.off_below : 0.1
// printer.configfile.settings.fan.tachometer_poll_interval : 0.0015
// printer.configfile.settings.fan.shutdown_speed : 0.0
// printer.configfile.settings.fan.max_power : 1.0
// printer.configfile.settings.fan.kick_start_time : 0.5
// printer.configfile.settings.fan.tachometer_ppr : 2
// printer.configfile.settings.fan.hardware_pwm : False
// printer.configfile.settings['gcode_macro g0'].gcode :
// _Mag_Probe_Debug msg="G0 - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% if params.FORCE is defined or user.mag_probe.state == 'docked' %}
// G0.1 {rawparams}
// {% else %}
// {% set param = [] %}
// {% for key in params %} ; get gcode input parameters
// {% set _dummy = param.append(key + "=" + params[key]) if key is not in ['G', 'FORCE'] %}
// {% endfor %}
// _Z_MOVE_CHECK CALLER=G0 {param|join(" ")}
// {% endif %}
// _Mag_Probe_Debug msg="G0 - exiting"
// printer.configfile.settings['gcode_macro g0'].description : Helper: Mag Probe; Move gcode that prevents moves lower than the limit when probe attached
// printer.configfile.settings['gcode_macro g0'].rename_existing : G0.1
// printer.configfile.settings.stepper_z3.full_steps_per_rotation : 200
// printer.configfile.settings.stepper_z3.rotation_distance : 40.0
// printer.configfile.settings.stepper_z3.gear_ratio : ((80.0, 16.0),)
// printer.configfile.settings.stepper_z3.step_pin : PC13
// printer.configfile.settings.stepper_z3.microsteps : 32
// printer.configfile.settings.stepper_z3.dir_pin : !PF0
// printer.configfile.settings.stepper_z3.enable_pin : !PF1
// printer.configfile.settings['gcode_macro move_bed_center'].gcode :
// _general_Debug msg="move_bed_center - entering"
// {% set X_MID = printer.configfile.config.stepper_x.position_max|float / 2.0 %}
// {% set X_PROBEOFFSET = printer.configfile.config.probe.x_offset|float %}
// {% set Y_MID = printer.configfile.config.stepper_y.position_max|float / 2.0 %}
// {% set Y_PROBEOFFSET = printer.configfile.config.probe.y_offset|float %}
// _CG28                                                               ; Try to home if not already homed
// G90
// G0 X{(X_MID - X_PROBEOFFSET)} Y{(Y_MID - Y_PROBEOFFSET)} Z20 F4000
// _general_Debug msg="move_bed_center -exiting"
// printer.configfile.settings['gcode_macro move_bed_center'].description : Helper: move toolhead to center of the bed
// printer.configfile.settings['temperature_sensor j_chamber_zdragchain_pt100'].rtd_use_50hz_filter : False
// printer.configfile.settings['temperature_sensor j_chamber_zdragchain_pt100'].sensor_pin : PF8
// printer.configfile.settings['temperature_sensor j_chamber_zdragchain_pt100'].rtd_nominal_r : 100.0
// printer.configfile.settings['temperature_sensor j_chamber_zdragchain_pt100'].spi_bus : spi1
// printer.configfile.settings['temperature_sensor j_chamber_zdragchain_pt100'].rtd_reference_r : 430.0
// printer.configfile.settings['temperature_sensor j_chamber_zdragchain_pt100'].sensor_type : MAX31865
// printer.configfile.settings['temperature_sensor j_chamber_zdragchain_pt100'].min_temp : 0.0
// printer.configfile.settings['temperature_sensor j_chamber_zdragchain_pt100'].gcode_id : ChambZdrag
// printer.configfile.settings['temperature_sensor j_chamber_zdragchain_pt100'].rtd_num_of_wires : 4
// printer.configfile.settings['temperature_sensor j_chamber_zdragchain_pt100'].spi_speed : 4000000
// printer.configfile.settings['temperature_sensor j_chamber_zdragchain_pt100'].max_temp : 480.0
// printer.configfile.settings['gcode_macro _dock_probe'].gcode :
// _Mag_Probe_Debug msg="_DOCK_PROBE - entering"
// _MAGPROBE_STATUS_BUSY
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% if user.hw.mag_probe.ena %}
// {% if user.hw.mag_probe.klicky %} _DOCK_KLICKY_PROBE {% endif %}
// {% if user.hw.mag_probe.euclid %} _DOCK_EUCLID_PROBE {% endif %}
// {% endif %}
// _Mag_Probe_Debug msg="_DOCK_PROBE - exiting"
// printer.configfile.settings['gcode_macro _dock_probe'].description : Helper: Mag Probe; Dock the correct MagProbe
// printer.configfile.settings['gcode_macro pa_cal'].gcode :
// _general_Debug msg="PA_CAL - entering"                                                           ;if debug enabled display message
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% if printer.idle_timeout.state == "Printing" or printer.pause_resume.is_paused %}
// {action_respond_info("Cannot do that while printing")}
// {% else %}
// {% set defaultTN = user.filament.profile.defaultTempNozzle|float %}
// {% set defaultTB = user.filament.profile.defaultTempBed|float %}
// {% set BED = params.BED|default(defaultTB)|float %}
// {% set EXTRUDER = params.EXTRUDER|default(defaultTN)|float %}
// {% set PA_START = params.PA_START|default(0.0)|float %}
// {% set PA_STEP = params.PA_STEP|default(0.005)|float %}
// {% set NZL_CFG = printer.configfile.config.extruder.nozzle_diameter|float %}
// {% set NZL = params.NZL|default(NZL_CFG)|float %}
// {% set E20 = (0.1147475 * NZL) * 20|float %}
// {% set E40 = (0.1147475 * NZL) * 40|float %}
// {% set X_MID = printer.configfile.config.stepper_x.position_max|float / 2.0 %}
// {% set Y_MID = printer.configfile.config.stepper_y.position_max|float / 2.0 %}
// PRINT_START BED_TEMP={BED} EXTRUDER_TEMP={EXTRUDER} PRINT_MIN={params.PRINT_MIN} PRINT_MAX={params.PRINT_MAX}
// M220 S100     ;Set speed factor override percentage                                                                                                                                                ;Set speed factor override percentage
// M221 S100     ;Set extrude factor override percentage                                                                                                                                               ;Set extrude factor override percentage
// G21           ;Set Units to Millimeters                                                                                                                                                         ;Millimeter units
// G90           ;Absolute Positioning                                                                                                                                                      ;Absolute XYZ
// M83           ;Set extruder to relative mode                                                                                                                                                        ;Relative E
// SET_VELOCITY_LIMIT ACCEL={user.filament.profile.LimitAccel|float} ACCEL_TO_DECEL={user.filament.profile.LimitDecel|float}   ;Modify the printer's velocity limits
// G92 E0        ;reset extruder                                                                                                                                                ;Set extruder Position to 0
// M106 S0       ;turn off part cooling fan                                                                                                                                               ;turn off part cooling fan
// G1 X{(X_MID-40)} Y{(Y_MID-65)} F30000                                                                                                                         ;move to start position
// G1 Z0.25 F300        ; move Z                                                                                                                                         ;move to layer height
// G1 E0.75 F1800       ;prime extruder                                                                                                                                         ;un-retract
// G1 X{(X_MID-20)} Y{(Y_MID-65)} E{E20} F300                                                                                                                    ;print line part one
// G1 X{(X_MID+20)} Y{(Y_MID-65)} E{E40} F9000                                                                                                                   ;print line part two
// G1 X{(X_MID+40)} Y{(Y_MID-65)} E{E20} F300                                                                                                                    ;print line part three
// G1 E-0.75 F1800     ;.75mm retraction                                                                                                                                          ;retract
// G1 Z1 F300          ;move Z                                                                                                                                          ;Move above layer height
// {% for i in range(0, 20) %}
// SET_PRESSURE_ADVANCE ADVANCE={PA_START + (i * PA_STEP)}                                                                                                   ;set Pressure Advance
// M117 Testing Pressure Advance at: {PA_START + (i * PA_STEP)}
// G1 X{(X_MID-40)} Y{(Y_MID-35)+(5*i)} F30000                                                                                                               ;move to start position
// G1 Z0.25 F300                                                                                                                                             ;move to layer height
// G1 E0.75 F1800                                                                                                                                            ;un-retract
// G1 X{(X_MID-20)} Y{(Y_MID-35)+(5*i)} E{E20} F300                                                                                                          ;print line part one
// G1 X{(X_MID+20)} Y{(Y_MID-35)+(5*i)} E{E40} F9000                                                                                                         ;print line part two
// G1 X{(X_MID+40)} Y{(Y_MID-35)+(5*i)} E{E20} F300                                                                                                          ;print line part three
// G1 E-0.75 F1800                                                                                                                                           ;retract
// G1 Z1 F300                                                                                                                                                ;Move above layer height
// {% endfor %}
// M117 Find best line and multiply it by ({PA_START} + (line * {PA_STEP}) ) to find your PA setting.
// PRINT_END                                                                                                                                                     ;call PRINT_END macro
// {% endif %}
// _general_Debug msg="PA_CAL - exiting"                                                                                                                             ;if debug enabled display message
// printer.configfile.settings['gcode_macro pa_cal'].description : Helper: Prints a Pressure Advance panel to help determine the correct PA value
// printer.configfile.settings['output_pin caselight'].shutdown_value : 0.0
// printer.configfile.settings['output_pin caselight'].scale : 1.0
// printer.configfile.settings['output_pin caselight'].cycle_time : 0.01
// printer.configfile.settings['output_pin caselight'].pin : PA3
// printer.configfile.settings['output_pin caselight'].maximum_mcu_duration : 0.0
// printer.configfile.settings['output_pin caselight'].value : 0.5
// printer.configfile.settings['output_pin caselight'].hardware_pwm : False
// printer.configfile.settings['output_pin caselight'].pwm : True
// printer.configfile.settings['led_effect sb_bar_heating'].layers :
// chase  0.3  2 add (1.00,0.0,0),(0.00,0.00,0.0)
// printer.configfile.settings['led_effect sb_bar_heating'].leds :
// neopixel:progress_bar_leds (1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,32,33,31,28,26,24,22,20,18,16,14,12,10,8,6,4,2)
// printer.configfile.settings['led_effect sb_bar_heating'].frame_rate : 5.0
// printer.configfile.settings['led_effect sb_bar_heating'].autostart : False
// printer.configfile.settings['led_effect sb_bar_heating'].run_on_error : False
// printer.configfile.settings['led_effect sb_fan_standby'].layers :
// breathing  3 1 top (0.01, 0.01, 0.01)
// printer.configfile.settings['led_effect sb_fan_standby'].leds :
// neopixel:sb_leds (1-8)
// printer.configfile.settings['led_effect sb_fan_standby'].autostart : False
// printer.configfile.settings['led_effect sb_fan_standby'].frame_rate : 5.0
// printer.configfile.settings['led_effect sb_fan_standby'].run_on_error : False
// printer.configfile.settings['gcode_macro _attach_probe'].gcode :
// _Mag_Probe_Debug msg="_ATTACH_PROBE - entering"
// _MAGPROBE_STATUS_BUSY
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% if user.hw.mag_probe.ena %}
// {% if user.hw.mag_probe.klicky %} _ATTACH_KLICKY_PROBE {% endif %}
// {% if user.hw.mag_probe.euclid %} _ATTACH_EUCLID_PROBE {% endif %}
// {% endif %}
// _Mag_Probe_Debug msg="_ATTACH_PROBE - exiting"
// printer.configfile.settings['gcode_macro _attach_probe'].description : Helper: Mag Probe; Attach the correct MagProbe
// printer.configfile.settings['gcode_macro _layer'].gcode :
// _general_Debug msg="_LAYER - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set layer = global.layer %}
// {% set _dummy = layer.update({'total':params.TOTAL|int}) if ('TOTAL' in params and params.TOTAL|int > 0) %}
// {% set _dummy = layer.update({'current':params.CURRENT|default(0)|int}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=layer VALUE="{layer}"
// {% if params.RESPOND|default(user.respond.layer)|int == 1 %}
// {action_respond_info("Layer %s of %s" % (layer.current, layer.total))}
// {% endif %}
// _general_Debug msg="_LAYER - exiting"
// printer.configfile.settings['gcode_macro _layer'].description : Helper: Pass the current layer and the total amount of layers by your Slicer.
// printer.configfile.settings['gcode_macro _heat_wait'].gcode :
// _general_Debug msg="_HEAT_WAIT - entering"
// {% set MINUTES = params.MINUTES|default(10)|int %}
// {% set MSG = params.MSG|default("Warming...")|string %}
// STATUS_HEATING
// {% for i in range(0, MINUTES) %}
// M117 {MSG} {MINUTES-i} minute remaining.
// {% for s in range(0, 60) %}
// SET_LED LED=sb_leds INDEX=17 RED=.5 GREEN=0 BLUE=0
// SET_LED LED=sb_leds INDEX=18 RED=0 GREEN=0 BLUE=.5
// G4 P500                                            ;wait 0.5 seconds
// SET_LED LED=sb_leds INDEX=17 RED=0 GREEN=0 BLUE=.5
// SET_LED LED=sb_leds INDEX=18 RED=.5 GREEN=0 BLUE=0
// G4 P500                                            ;wait 0.5 seconds
// {% endfor %}
// {% endfor %}
// _general_Debug msg="_HEAT_WAIT - exiting"
// printer.configfile.settings['gcode_macro _heat_wait'].description : Helper: Heating cycle, waiting routine
// printer.configfile.settings['gcode_macro _error_if_probe_not_deployed'].gcode :
// G4 P300
// _MAG_PROBE ACTION='get_status' RESPOND=0
// _do_error_if_probe_not_deployed
// printer.configfile.settings['gcode_macro _error_if_probe_not_deployed'].description : Helper: Euclid Probe safety, to Verify Euclid probe is attached
// printer.configfile.settings['gcode_macro set_fan_leds_off'].gcode :
// _general_Debug msg="set_fan_leds_off - entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set fan_effect = global.current_led_state.fan_leds %}
// SET_LED_EFFECT EFFECT={fan_effect} STOP=1
// _general_Debug msg="set_fan_leds_off - exiting"
// printer.configfile.settings['gcode_macro set_fan_leds_off'].description : Helper: Turn off the stealthburner fan leds by using the SET_LED_EFFECT call
// printer.configfile.settings['gcode_macro msg_probe_attached'].gcode :
// M118 Euclid probe IS attached!!
// printer.configfile.settings['gcode_macro msg_probe_attached'].description : Helper: Euclid Probe; prints an message indicating the output of a QUERY_PROBE command when the Euclid probe is attached to the toolhead
// printer.configfile.settings['gcode_macro g3401'].gcode :
// _general_Debug msg="G3401 - entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set MeshToApply = user.filament.profile.MeshToApply|default() %}
// {% if user.hw.display.ena %}
// _PRINT_AR T="Home & QGL" SHOW_LCD=true
// {% else %}
// _PRINT_AR T="Home & QGL"
// {% endif %}
// BED_MESH_CLEAR
// _CG28
// SET_GCODE_OFFSET Z=0 MOVE=1
// {% if user.var.redo_qgl|lower == 'true' %}
// _PRINT_AR T="QGL forced by PRINT_START"
// QUAD_GANTRY_LEVEL PARK=false HOME=false
// {% elif printer.quad_gantry_level.applied|lower == 'false' %}
// _PRINT_AR T="QGL not executed yet"
// QUAD_GANTRY_LEVEL PARK=false HOME=false
// {% endif %}
// NOZZLECLEAN
// {% set _home_z = global._home_z %}
// {% set _dummy = _home_z.update({'calibrate_z_next':user.hw.auto_z_offset.auto}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=_home_z VALUE="{_home_z}"
// G28 Z
// {% if user.hw.auto_z_offset.auto %} CALIBRATE_Z {% endif %}
// {% if user.hw.auto_z_offset.manu %} _SET_PLATE_OFFSET {% endif %}
// SET_GCODE_OFFSET Z_ADJUST={var.z_adjust} MOVE=1
// _PRINT_OFFSET
// {% if MeshToApply != "NONE" %}
// {% if MeshToApply == "INSITU" %}
// BED_MESH_CALIBRATE PRINT_MIN={params.PRINT_MIN} PRINT_MAX={params.PRINT_MAX}
// BED_MESH_PROFILE SAVE=INSITU
// {% else %}
// BED_MESH_PROFILE LOAD={MeshToApply}
// {% endif %}
// M118 Applied {MeshToApply} mesh post sampling.
// {% endif %}
// {% if user.hw.display.ena %} UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=1 {% endif %}
// _general_Debug msg="G3401 - exiting"
// printer.configfile.settings['gcode_macro g3401'].description : Helper: Clears bed-mesh and performs G28, ATTACH_PROBE, QGL, DOCK_PROBE, NOZZLECLEAN, ATTACH_PROBE_LOCK, G28 Z, CALIBRATE_Z, applies bed-mesh, and DOCK_PROBE_UNLOCK
// printer.configfile.settings['mcu ebbcan'].canbus_uuid : befe3bd16119
// printer.configfile.settings['mcu ebbcan'].max_stepper_error : 2.5e-05
// printer.configfile.settings['mcu ebbcan'].canbus_interface : can0
// printer.configfile.settings['gcode_macro _disable_progress_bar'].gcode :
// _general_Debug msg="_DISABLE_PROGRESS_BAR - entering"
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=progressbar_enabled VALUE=0
// _general_Debug msg="_DISABLE_PROGRESS_BAR - exiting"
// printer.configfile.settings['gcode_macro _disable_progress_bar'].description : Helper: Disable Progress bar so that the Progress bar LEDs can be used for another purpose
// printer.configfile.settings['gcode_macro _bedfansslow'].gcode :
// _general_Debug msg="_BedFansSlow - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set SLOW = user.bedfanvars.slow|float %}
// SET_FAN_SPEED FAN=Bedfan_Left SPEED={SLOW}                             ;set fan speed
// SET_FAN_SPEED FAN=Bedfan_Right SPEED={SLOW}                            ;set fan speed
// _general_Debug msg="_BedFansSlow - exiting"
// printer.configfile.settings['gcode_macro _bedfansslow'].description : Helper: Runs the bed fans at a slow speed as specified by user.bedfanvars.slow
// printer.configfile.settings['gcode_macro info__user_variable'].gcode :
// _general_Debug msg="INFO__USER_VARIABLE - entering"
// {% set ns = namespace( flag = 0 ) %}
// {% set ns2 = namespace(flag = 0, loop_flag = 0 ) %}
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set search_vars_search = True if params.VAR else False %}
// {% set search = params.VAR|default('')|string|lower %}
// {% if '.' is in params.VAR %}
// {% set ns.flag = 1 %}
// {% set ns.search = search.split('.') %}
// {% set ns.length = (ns.search|length) - 1 %}
// {% set search = ns.search[ns.length] %}
// {% endif %}
// {% if search_vars_search == False %}
// {% set print_printer_parameters = True %}
// {% else %}
// {% set print_printer_parameters = False %}
// {% endif %}
// {% if print_printer_parameters %}
// {% set ns.path = ["INFO__USER_VARIABLE <+++++++++++++++++", ''] %}
// { action_respond_info(ns.path|join) }
// {% endif %}
// {% for item in user|sort %}
// {% if ns.flag == 0 %}
// {% if ' ' in item %}
// {% set ns.path = ['user', "['%s']" % (item), ''] %}
// {% else %}
// {% set ns.path = ['user.', item, ''] %}
// {% endif %}
// {% if search in ns.path|lower %}
// {% set ns2.flag = 1%}
// { action_respond_info(ns.path|join) }
// {% endif %}
// {% set ns2.loop_flag = 0 %}
// {%
// if (user[item] is not boolean)
// and (user[item] is not float)
// and (user[item] is not integer)
// and (user[item] is not none)
// and (user[item] is not undefined)
// and (user[item] is not callable)
// %}
// {% set ns2.loop_flag = 1 %}
// {% endif %}
// {% if ns2.loop_flag %}
// {% if user[item].items()|sort %}
// {% for childkey, child in user[item].items() recursive %}
// {% set ns.path = ns.path[:loop.depth|int + 1] %}
// {% if ' ' in childkey %}
// {% set null = ns.path.append("['%s']" % (childkey)) %}
// {% else %}
// {% set null = ns.path.append(".%s" % (childkey)) %}
// {% endif %}
// {% if child is mapping  %}
// { loop(child.items()|sort) }
// {% else %}
// {% if search in ns.path|lower %}
// {% set ns2.flag = 1%}
// { action_respond_info("%s : %s" % (ns.path|join, child)) }
// {% endif %}
// {% endif %}
// {% endfor %}
// {% endif %}
// {% else %}
// {% if search in ns.path|lower %}
// {% set ns2.flag = 1%}
// { action_respond_info("%s : %s" % (ns.path|join, (user[item])|string)) }
// {% endif %}
// {% endif %}
// {% else %}
// {% if item == ns.search[(ns.length-ns.length)] %}
// {% if ' ' in item %}
// {% set ns.path = ['user', "['%s']" % (item), ''] %}
// {% else %}
// {% set ns.path = ['user.', item, ''] %}
// {% endif %}
// {% if search in ns.path|lower %}
// {% set ns2.flag = 1%}
// { action_respond_info(ns.path|join) }
// {% endif %}
// {% set ns2.loop_flag = 0 %}
// {%
// if (user[item] is not boolean)
// and (user[item] is not float)
// and (user[item] is not integer)
// and (user[item] is not none)
// and (user[item] is not undefined)
// and (user[item] is not callable)
// %}
// {% set ns2.loop_flag = 1 %}
// {% endif %}
// {% if ns2.loop_flag %}
// {% if user[item].items()|sort %}
// {% for childkey, child in user[item].items() recursive %}
// {% set ns.path = ns.path[:loop.depth|int + 1] %}
// {% if ' ' in childkey %}
// {% set null = ns.path.append("['%s']" % (childkey)) %}
// {% else %}
// {% set null = ns.path.append(".%s" % (childkey)) %}
// {% endif %}
// {% if child is mapping  %}
// { loop(child.items()|sort) }
// {% else %}
// {% if search in ns.path|lower %}
// {% set ns2.flag = 1%}
// { action_respond_info("%s : %s" % (ns.path|join, child)) }
// {% endif %}
// {% endif %}
// {% endfor %}
// {% endif %}
// {% else %}
// {% if search in ns.path|lower %}
// {% set ns2.flag = 1%}
// { action_respond_info("%s : %s" % (ns.path|join, (user[item])|string)) }
// {% endif %}
// {% endif %}
// {% else %}
// {% endif %}
// {% endif %}
// {% endfor %}
// {% if print_printer_parameters %}
// {% set ns.path = ["End of INFO__USER_VARIABLE +++++++++++++++++>", ''] %}
// { action_respond_info(ns.path|join) }
// {% endif %}
// {% if ns2.flag == 0 and not print_printer_parameters %}
// {action_respond_info("Nothing found for \"INFO__USER_VARIABLE %s\"" % rawparams)}
// {% endif %}
// _general_Debug msg="INFO__USER_VARIABLE - exiting"
// printer.configfile.settings['gcode_macro info__user_variable'].description : Helper: print out all values in [gcode_macro _USER_VARIABLE] space or the speciifed parameter
// printer.configfile.settings['gcode_macro set_heater_temperature'].rename_existing : _SET_HEATER_TEMPERATURE
// printer.configfile.settings['gcode_macro set_heater_temperature'].description : Helper: BEDFAN macro; set fan speeds to low and start monitoring the bed fans
// printer.configfile.settings['gcode_macro set_heater_temperature'].gcode :
// _general_Debug msg="SET_HEATER_TEMPERATURE - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set bedfanvars = global.bedfanvars %}
// {% set HEATER = params.HEATER|default("None") %}
// {% set TARGET = params.TARGET|default(0)|int %}
// {% set THRESHOLD = user.bedfanvars.threshold|int %}
// {% set CURRENT_CHAMBERTEMP = printer["temperature_sensor J_Chamber_ZDragChain_PT100"].temperature|float %}
// {% if HEATER|lower == "extruder" %}
// M104 S{TARGET}
// {% elif HEATER|lower == "heater_bed" %}
// M99140 S{TARGET}
// {% else %}
// {action_respond_info("Heater %s not supported" % HEATER)}
// {% endif %}
// {% if HEATER|lower == "heater_bed" %}
// {% if TARGET >= THRESHOLD %}
// {% set CHAMBERFAN_TARTGET_TEMP = printer["temperature_fan chamber"].target|float %}              ;current chamberfan target temperature
// {% set CHAMBER_THERSHOLD = user.filament.profile.defaultEnclosure|float %}                       ;desired temperature for chamber
// {% if CHAMBERFAN_TARTGET_TEMP < CHAMBER_THERSHOLD %}
// M141 S{CHAMBER_THERSHOLD}                                                                    ;set chamber temperature for Exhaust fan and Bed fans
// {% endif %}
// _BedFansSlow
// {% set _dummy = bedfanvars.update({'lasttemp':CURRENT_CHAMBERTEMP}) %}
// {% set _dummy = bedfanvars.update({'flag':0}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=bedfanvars VALUE="{bedfanvars}"
// UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=5
// {% else %}
// _BedFansOff
// {% set _dummy = bedfanvars.update({'lasttemp':CURRENT_CHAMBERTEMP}) %}
// {% set _dummy = bedfanvars.update({'flag':0}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=bedfanvars VALUE="{bedfanvars}"
// UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=0
// {% endif %}
// {% endif %}
// _general_Debug msg="SET_HEATER_TEMPERATURE -exiting"
// printer.configfile.settings['gcode_macro turn_off_heaters'].rename_existing : _TURN_OFF_HEATERS
// printer.configfile.settings['gcode_macro turn_off_heaters'].description : Helper: BEDFAN macro; Turn off bed fans and turn off heaters
// printer.configfile.settings['gcode_macro turn_off_heaters'].gcode :
// _general_Debug msg="TURN_OFF_HEATERS- entering"
// M141 S35                       ;set chamber temperature for Exhaust fan and Bed fans to 35C
// _BedFansOff
// _TURN_OFF_HEATERS
// _general_Debug msg="TURN_OFF_HEATERS- exiting"
// printer.configfile.settings['gcode_macro test_preset'].gcode :
// _general_Debug msg="TEST_PRESET - entering"
// {% set PRESET = params.PRESET|default(1)|int %}
// {% set STRIP = params.STRIP|default("Chamber_Lights")|string %}
// WLED_ON STRIP={STRIP} PRESET={PRESET}
// _general_Debug msg="TEST_PRESET - exiting"
// printer.configfile.settings['gcode_macro test_preset'].description : Helper: Test the ability to Set the WLED strip to a preset
// printer.configfile.settings['gcode_macro zdown'].gcode :
// _general_Debug msg="ZDOWN- entering"
// SET_GCODE_OFFSET Z_ADJUST=-0.01 MOVE=1
// _general_Debug msg="ZDOWN- exiting"
// printer.configfile.settings['gcode_macro zdown'].description : Helper: Helps in setting SET_GCODE_OFFSET to get the perfect squish; this moves z -0.01mm
// printer.configfile.settings['gcode_macro reset_rp2040'].gcode :
// _general_Debug msg="reset_rp2040 - entering"
// {action_call_remote_method("set_device_power",
// device="rp2040",
// state="on")}
// _general_Debug msg="reset_rp2040 - exiting"
// printer.configfile.settings['gcode_macro reset_rp2040'].description : Helper: reset the RP2040 MCU on the TinyFan PCB board by toggling a 5V relay via moonraker
// printer.configfile.settings['gcode_macro _power_off_rgb2'].gcode :
// _general_Debug msg="_POWER_OFF_RGB2 - entering"
// {action_call_remote_method("set_device_power",
// device="tasmota_plug_RGB2",
// state="off")}
// _general_Debug msg="_POWER_OFF_RGB2 - exiting"
// printer.configfile.settings['gcode_macro _power_off_rgb2'].description : Helper: Turn off the Tasmota RGB2 smart plug
// printer.configfile.settings['gcode_macro query_thermistors'].gcode :
// _general_Debug msg="QUERY_THERMISTOR - entering"
// QUERY_ADC NAME=extruder PULLUP=4700
// QUERY_ADC NAME=z_thermal_adjust pullup=4700
// _general_Debug msg="QUERY_THERMISTOR -exiting"
// printer.configfile.settings['gcode_macro query_thermistors'].description : Helper: get resistance value from ADC for two different thermistors
// printer.configfile.settings['led_effect sb_bar_homing'].layers :
// gradient 1.00 2 top (0.00,0.00,1.00),(0.00,0.00,0.00),(1.00,0.25,0.00),(0.0,0.0,0.0)
// printer.configfile.settings['led_effect sb_bar_homing'].run_on_error : False
// printer.configfile.settings['led_effect sb_bar_homing'].leds :
// neopixel:progress_bar_leds (1-33)
// printer.configfile.settings['led_effect sb_bar_homing'].autostart : False
// printer.configfile.settings['led_effect sb_bar_homing'].frame_rate : 5.0
// printer.configfile.settings['gcode_macro bed_pid'].gcode :
// _general_Debug msg="_BED_PID - entering"                                ;if debug enabled display message
// {% if printer.idle_timeout.state == "Printing" or printer.pause_resume.is_paused %}
// {action_respond_info("Cannot do that while printing")}
// {% else %}
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set defaultTB = user.filament.profile.defaultTempBed|float %}
// {% set BED_TEMP = params.BED_TEMP|default(defaultTB)|float %}
// {% set FAN_SPEED = params.FAN_SPEED|default(0.40)|float %}
// {% set X_MID =  user.park.mid.x|float %}
// {% set Y_MID =  user.park.mid.y|float %}
// G90                                                                 ;Absolute Positioning
// M117 Performing initial homing.
// G32                                                                 ;Clears bed-mesh and performs G28, ATTACH_PROBE, QGL, DOCK_PROBE
// G1 Z5 Y{Y_MID} X{X_MID} F4000                                       ;move to center of bed
// SET_FAN_SPEED FAN=Bedfan_Left SPEED={FAN_SPEED}                     ;set Fan speed for bedfans fan
// SET_FAN_SPEED FAN=Bedfan_Right SPEED={FAN_SPEED}                    ;set Fan speed for bedfans fan
// M117 Starting PID calibration.
// PID_CALIBRATE HEATER=heater_bed TARGET={BED_TEMP}                   ;PID tune the heater_bed
// M117 Finished PID calibration.
// TURN_OFF_HEATERS                                                    ;Turn off all heaters
// CURRENT_NORMAL                                                      ;call Macro CURRENT_NORMAL
// PARK_UpperRight                                                     ;Parks nozzle at top front-right
// M18 X Y E                                                           ;Disable Stepper motor
// _COOL_WAIT MINUTES=1                                                ;Cooling cycle waiting routine
// STATUS_READY                                                        ;SB LED status
// SAVE_CONFIG                                                         ;save results of PID tune back in printer.cfg file
// {% endif %}
// _general_Debug msg="_BED_PID - exiting"                                  ;if debug enabled display message
// printer.configfile.settings['gcode_macro bed_pid'].description : Helper: Performs BED PID tune
// printer.configfile.settings['gcode_macro _magprobe_status_ready'].gcode :
// {% if printer['gcode_macro status_ready'] is defined %}
// _Mag_Probe_Debug msg="_magprobe_status_ready activating the LED STATUS_READY"
// STATUS_READY
// {% endif %}
// printer.configfile.settings['gcode_macro _magprobe_status_ready'].description : Helper: Mag Probe, enable STATUS_READY LED state
// printer.configfile.settings['gcode_macro _global_vars'].variable__mag_probe : {}
// printer.configfile.settings['gcode_macro _global_vars'].variable_bed_mesh_store : {}
// printer.configfile.settings['gcode_macro _global_vars'].variable_state : 'Prepare'
// printer.configfile.settings['gcode_macro _global_vars'].variable_bed_mesh : {}
// printer.configfile.settings['gcode_macro _global_vars'].variable_bucket_pos : 1
// printer.configfile.settings['gcode_macro _global_vars'].variable_wait_variable : {}
// printer.configfile.settings['gcode_macro _global_vars'].variable_tmacro : {}
// printer.configfile.settings['gcode_macro _global_vars'].variable_current_led_state : {}
// printer.configfile.settings['gcode_macro _global_vars'].variable_layer : {}
// printer.configfile.settings['gcode_macro _global_vars'].variable_bedfanvars : {}
// printer.configfile.settings['gcode_macro _global_vars'].variable__set_acc : {}
// printer.configfile.settings['gcode_macro _global_vars'].variable_fancheckvars : {}
// printer.configfile.settings['gcode_macro _global_vars'].variable_restore : {}
// printer.configfile.settings['gcode_macro _global_vars'].description : Helper: Contains global defined printer variables
// printer.configfile.settings['gcode_macro _global_vars'].gcode :
// _general_Debug msg="_GLOBAL_VARS - entering"
// {% set global_wait_variable_count                     = 300.0 %}
// {% set global_wait_variable_duration                  = 2 %}
// {% set global_wait_variable_waiting                   = False %}
// {% set global_wait_variable_ready                     = 200 %}
// {% set global_wait_variable_temp                      = 250 %}
// {% set global_sb_vars_colors                          =   {
// 'white': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 1.0},
// 'standby': {'r': 0.01, 'g': 0.01, 'b': 0.01, 'w': 0.5},
// 'red': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},
// 'orange': {'r': 1.0, 'g': 0.25, 'b': 0.0, 'w': 0.0},
// 'yellow': {'r': 1.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},
// 'green': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w': 0.0},
// 'blue': {'r': 0.0, 'g': 0.0, 'b': 1.0, 'w': 0.0},
// 'purple': {'r': 0.5, 'g': 0.0, 'b': 1.0, 'w': 0.0},
// 'pink': {'r': 1.0, 'g': 0.0, 'b': 0.5, 'w': 0.0},
// 'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},
// 'dimwhite': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.4}
// }
// %}
// {% set global_current_state_fan_leds                  = 'set_fan_leds_rainbow' %}
// {% set global_current_state_logo_leds                 = 'set_logo_leds_rainbow_barf' %}
// {% set global_current_state_bar_leds                  = 'set_bar_leds_progress' %}
// {% set global_current_state_nozzle_leds               = 'set_nozzle_leds_white' %}
// {% set global_progressbar_enabled                     =  0 %}
// {% set global_bedfanvars_flag                         = 0 %}           ; Bed heater reached target temp if this value > 0, Valid value: 0 (boot state), 2 (Target heater temp reached), 3 (chamber temp falling), 4 (chamber temp above defaultEnclosure temp)
// {% set global_bedfanvars_lasttemp                     = 0.0 %}         ; previous chamber temperature reading
// {% set global_fancheckvars_Part_Cooling_Fan_Enabled   = 0 %}           ; Part cooling fan disabled = 0; Part cooling fan enaled=1
// {% set global_pc_stop_count                           = 0 %}           ; number of times the part cooling fans has stopped rotating, if this count is greater than 3 the fan stoppage routine is called which pauses the printer
// {% set global_he_stop_count                           = 0 %}           ; number of times the hot end cooling fans has stopped rotating, if this count is greater than 3 the fan stoppage routine is called which pauses the printer
// {% set global_tmacro_start_idle_minutes               = 0 %}           ;test_probe_accuracy - params - start_idle_minutes
// {% set global_tmacro_bed_temp                         = 0 %}           ;test_probe_accuracy - params - bed_temp
// {% set global_tmacro_extruder_temp                    = 0 %}           ;test_probe_accuracy - params - extruder_temp
// {% set global_tmacro_bed_soak_minutes                 = 0 %}           ;test_probe_accuracy - params - bed_soak_minutes
// {% set global_tmacro_extruder_soak_minutes            = 0 %}           ;test_probe_accuracy - params - extruder_soak_minutes
// {% set global_tmacro_dwell_seconds                    = 0 %}           ;test_probe_accuracy - params - dwell_seconds
// {% set global_tmacro_dwell_lift_z                     = 0 %}           ;test_probe_accuracy - params - dwell_lift_z
// {% set global_tmacro_end_idle_minutes                 = 0 %}           ;test_probe_accuracy - params - end_idle_minutes
// {% set global_tmacro_state                            = 'start' %}     ;test_probe_accuracy - params - state
// {% set global_tmacro_next_state                       = 'none' %}      ;test_probe_accuracy - params - next_state
// {% set global_probe_attached                          = False %}       ;global variable for Klicky Probe Macros - flag for attached probe
// {% set global_probe_state                             = False %}       ;global variable for Klicky Probe Macros - flag for the state of the Klicky probe
// {% set global_probe_lock                              = False %}       ;global variable for Klicky Probe Macros - flag for probe lock state
// {% set global_z_endstop_x                             = 0 %}           ;global variable for Klicky Probe Macros - Klicky probe Z endstop X position
// {% set global_z_endstop_y                             = 0 %}           ;global variable for Klicky Probe Macros - Klicky probe Z endstop Y position
// {% set global_buffer                                  = 20 %}          ;print surface bed mesh calibrate - boundary area for bed_mesh
// {% set global_last_area_start_x                       = -1 %}          ;print surface bed mesh calibrate - bed_mesh start x value for last bed_mesh performed
// {% set global_last_area_start_y                       = -1 %}          ;print surface bed mesh calibrate - bed_mesh start y value for last bed_mesh performed
// {% set global_last_area_end_x                         = -1 %}          ;print surface bed mesh calibrate - bed_mesh end x value for last bed_mesh performed
// {% set global_last_area_end_y                         = -1 %}          ;print surface bed mesh calibrate - bed_mesh end y value for last bed_mesh performed
// {% set global_mag_probe_action_man_state              = 'unknown' %}   ;MAG_PROBE variables in _PROBE_ACTION global variable - man_state - manually set probe state {UNKNOWN, ATTACHED and DOCKED}
// {% set global_mag_mag_probe_dock_state                = 'unknown' %}   ;MAG_PROBE variables in _MAG_PROBE global variables - dock_state - possible states are UNKNOWN, ATTACHED and DOCKED
// {% set global_mag_mag_probe_id                        = 0 %}           ;MAG_PROBE variables in _MAG_PROBE global variables - id - possible valid id 0 or 1
// {% set global_mag_check_state_error_id                = 0 %}           ;MAG_PROBE variables in _CHECK_STATE global variable - error_id - possible error ids are 0,1,2,3,4,5 - no error ocurred if error_id=0
// {% set global_mag_query_probe_id                      = 0 %}           ;MAG_PROBE variables in QUERY_PROBE global variable - id - possible valid id 0 or 1; 0 means invalid
// {% set global_bed_mesh_store_save_at_end              = False %}       ;BED_MESH_STORE global variable - save_at_end - True or False
// {% set global_home_z_calibrate_z_next                 = False %}       ;_HOME_Z global variable - calibrate_z_next - True or False
// {% set global_set_z_current_last_val                  = 'CONFIG' %}    ;_SET_Z_CURRENT global variable - last_val - 'CONFIG' or 'HOME'
// {% set global_set_acc_last_val                        = 'CONFIG' %}    ;_SET_ACC global variable - last_val - 'CONFIG' or 'HOME'
// {% set global_layer_layer_current                     =  0 %}          ;_LAYER Macro global variable - current
// {% set global_layer_layer_total                       =  0 %}          ;_LAYER Macro global variable - total
// {% set global_pause_restore_coordinates               = True %}        ;PAUSE Macro global variable - restore.absolute.coordinates
// {% set global_pause_restore_extrude                   = True %}        ;PAUSE Macro global variable - restore.absolute.extrude
// {% set global_pause_restore_speed                     = 1500 %}        ;PAUSE Macro global variable - restore.speed
// {% set wait_variable_dic = {
// 'count'     : global_wait_variable_count,
// 'duration'  : global_wait_variable_duration,
// 'waiting'   : global_wait_variable_waiting,
// 'ready'     : global_wait_variable_ready,
// 'temp'      : global_wait_variable_temp
// }
// %}
// {% set bedfanvars_dic = {
// 'flag'          : global_bedfanvars_flag,
// 'lasttemp'      : global_bedfanvars_lasttemp
// }
// %}
// {% set fancheckvars_dic = {
// 'part_cooling_fan_enabled'  : global_fancheckvars_Part_Cooling_Fan_Enabled,
// 'pc_stop_count'             : global_pc_stop_count,
// 'he_stop_count'             : global_he_stop_count
// }
// %}
// {% set sb_vars_dic = {
// 'colors'     : {
// 'white'     : global_sb_vars_colors.white,
// 'standby'   : global_sb_vars_colors.standby,
// 'red'       : global_sb_vars_colors.red,
// 'orange'    : global_sb_vars_colors.orange,
// 'yellow'    : global_sb_vars_colors.yellow,
// 'green'     : global_sb_vars_colors.green,
// 'blue'      : global_sb_vars_colors.blue,
// 'purple'    : global_sb_vars_colors.purple,
// 'pink'      : global_sb_vars_colors.pink,
// 'off'       : global_sb_vars_colors.off,
// 'dimwhite'  : global_sb_vars_colors.dimwhite
// }
// }
// %}
// {% set current_led_state_dic = {
// 'fan_leds'     : global_current_state_fan_leds,
// 'logo_leds'    : global_current_state_logo_leds,
// 'bar_leds'     : global_current_state_bar_leds,
// 'nozzle_leds'  : global_current_state_nozzle_leds
// }
// %}
// {% set tmacro_dic = {
// 'start_idle_minutes'     : global_tmacro_start_idle_minutes,
// 'bed_temp'               : global_tmacro_bed_temp,
// 'extruder_temp'          : global_tmacro_extruder_temp,
// 'bed_soak_minutes'       : global_tmacro_bed_soak_minutes,
// 'extruder_soak_minutes'  : global_tmacro_extruder_soak_minutes,
// 'dwell_seconds'          : global_tmacro_dwell_seconds,
// 'dwell_lift_z'           : global_tmacro_dwell_lift_z,
// 'end_idle_minutes'       : global_tmacro_end_idle_minutes,
// 'state'                  : global_tmacro_state,
// 'next_state'             : global_tmacro_next_state
// }
// %}
// {% set bed_mesh_dic = {
// 'buffer'                 : global_buffer,
// 'last_area_start_x'      : global_last_area_start_x,
// 'last_area_start_y'      : global_last_area_start_y,
// 'last_area_end_x'        : global_last_area_end_x,
// 'last_area_end_y'        : global_last_area_end_y
// }
// %}
// {% set probe_variables_dic = {
// 'probe_attached'         : global_probe_attached,
// 'probe_state'            : global_probe_state,
// 'probe_lock'             : global_probe_lock,
// 'z_endstop_x'            : global_z_endstop_x,
// 'z_endstop_y'            : global_z_endstop_y
// }
// %}
// {% set _probe_action_dic = {
// 'man_state'               : global_mag_probe_action_man_state
// }
// %}
// {% set _mag_probe_dic = {
// 'id'                      : global_mag_mag_probe_id
// }
// %}
// {% set _check_state_dic = {
// 'error_id'                : global_mag_check_state_error_id
// }
// %}
// {% set query_probe_dic = {
// 'id'                      : global_mag_query_probe_id
// }
// %}
// {% set bed_mesh_store_dic = {
// 'save_at_end'             : global_bed_mesh_store_save_at_end
// }
// %}
// {% set _home_z_dic = {
// 'calibrate_z_next'              : global_home_z_calibrate_z_next
// }
// %}
// {% set _set_z_current_dic = {
// 'last_val'               : global_set_z_current_last_val
// }
// %}
// {% set _set_acc_dic = {
// 'last_val'                     : global_set_acc_last_val
// }
// %}
// {% set layer_dic = {
// 'current'                      : global_layer_layer_current,
// 'total'                        : global_layer_layer_total
// }
// %}
// {% set restore_dic = {
// 'absolute' : {
// 'coordinates'    : global_pause_restore_coordinates,
// 'extrude'        : global_pause_restore_extrude,
// 'speed'                          : global_pause_restore_speed
// }
// }
// %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=bedfanvars                              VALUE="{bedfanvars_dic}"
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=fancheckvars                            VALUE="{fancheckvars_dic}"
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=sb_vars                                 VALUE="{sb_vars_dic}"
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=wait_variable                           VALUE="{wait_variable_dic}"
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=tmacro                                  VALUE="{tmacro_dic}"
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=bed_mesh                                VALUE="{bed_mesh_dic}"
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=progressbar_enabled                     VALUE={global_progressbar_enabled}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=current_led_state                       VALUE="{current_led_state_dic}"
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=_probe_action                           VALUE="{_probe_action_dic}"
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=_mag_probe                              VALUE="{_mag_probe_dic}"
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=_check_state                            VALUE="{_check_state_dic}"
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=query_probe                             VALUE="{query_probe_dic}"
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=bed_mesh_store                          VALUE="{bed_mesh_store_dic}"
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=_home_z                                 VALUE="{_home_z_dic}"
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=_set_z_current                          VALUE="{_set_z_current_dic}"
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=_set_acc                                VALUE="{_set_acc_dic}"
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=layer                                   VALUE="{layer_dic}"
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=restore                                 VALUE="{restore_dic}"
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=bucket_pos                              VALUE={(range(2) | random)}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=run VALUE=True
// _general_Debug msg="_GLOBAL_VARS - exiting"
// printer.configfile.settings['gcode_macro _global_vars'].variable__check_state : {}
// printer.configfile.settings['gcode_macro _global_vars'].variable__probe_action : {}
// printer.configfile.settings['gcode_macro _global_vars'].variable_execute : False
// printer.configfile.settings['gcode_macro _global_vars'].variable__set_z_current : {}
// printer.configfile.settings['gcode_macro _global_vars'].variable_sb_vars : {}
// printer.configfile.settings['gcode_macro _global_vars'].variable__home_z : {}
// printer.configfile.settings['gcode_macro _global_vars'].variable_run : False
// printer.configfile.settings['gcode_macro _global_vars'].variable_probe_variables : {}
// printer.configfile.settings['gcode_macro _global_vars'].variable_query_probe : {}
// printer.configfile.settings['gcode_macro _global_vars'].variable_progressbar_enabled : 0
// printer.configfile.settings['led_effect sb_fan_printing'].layers :
// gradient  0.3  1 add (0.3, 0.0, 0.0),(0.3, 0.3, 0.0),(0.3, 0.1, 0.0)
// printer.configfile.settings['led_effect sb_fan_printing'].run_on_error : False
// printer.configfile.settings['led_effect sb_fan_printing'].leds :
// neopixel:sb_leds (1-8)
// printer.configfile.settings['led_effect sb_fan_printing'].autostart : False
// printer.configfile.settings['led_effect sb_fan_printing'].frame_rate : 5.0
// printer.configfile.settings['led_effect sb_nozzle_printing'].layers :
// static  1  0 top (0.0, 0.0, 0.0, 1.0)
// printer.configfile.settings['led_effect sb_nozzle_printing'].run_on_error : False
// printer.configfile.settings['led_effect sb_nozzle_printing'].leds :
// neopixel:sb_leds (17,18)
// printer.configfile.settings['led_effect sb_nozzle_printing'].frame_rate : 2.0
// printer.configfile.settings['led_effect sb_nozzle_printing'].autostart : False
// printer.configfile.settings['gcode_macro search_printer_objects'].gcode :
// {% set variable_search = True if (params.NAME or params.VALUE) else False %}         ;DUMP_VARIABLES
// {% set parameter_search = True if (params.C or params.S or params.P) else False %}   ;DUMP_PARAMETER
// {% set gcode_command_search = True if params.COMMAND else False %}                   ;SEARCH_GCODE_ROUTINES
// {% set get_variable_search = True if (params.VAR_NAME) else False %}                 ;GET_VARIABLE
// {% set search_vars_search = True if params.SVAR else False %}                        ;SEARCH_VARS
// {% if variable_search == False and parameter_search == False and gcode_command_search == False and
// get_variable_search == False and search_vars_search == False %}
// {% set print_printer_parameters = True %}
// {% set show_mesh = params.SHOW_MESH|default(0)|int %}
// {% else %}
// {% set print_printer_parameters = False %}
// {% endif %}
// {% if gcode_command_search %}
// {% set ns = namespace(num=0, delayed_num=0, homing_override=0, idle_timeout=0) %}
// {% elif variable_search %}
// {% set filter_name = params.NAME|default('')|string|lower %}
// {% set filter_value = params.VALUE|default('')|string|lower %}
// {% set show_cfg = params.SHOW_CFG|default(0)|int %}
// {% elif get_variable_search %}
// {% set names = (params.VAR_NAME).split('.')|list %}
// {% set join = (params.JOIN)|default(1)|int %}
// {% set _dummy0 = namespace( break = 0 ) %}
// {% elif search_vars_search %}
// {% set ns = namespace() %}
// {% set show_gcode = params.GCODE|default(0)|int %}
// {% endif %}
// {% if parameter_search or gcode_command_search or print_printer_parameters %}
// {% if parameter_search or gcode_command_search %}
// {% set config = True if (params.C or params.S or params.COMMAND) else False %}
// {% elif print_printer_parameters %}
// {% set config = False %}
// {% endif %}
// {% endif %}
// {% if parameter_search %}
// {% set path = 'config' if params.C  else 'settings' if params.S %}
// {% endif %}
// {% if gcode_command_search %}
// {% set gcode_cmd = params.COMMAND|default('')|string|lower %}
// {% endif %}
// {% if parameter_search %}
// {% set search = (params.C) if (params.C) else (params.S|lower) if (params.S) else (params.P) if (params.P) %}
// {% elif search_vars_search %}
// {% set search = params.SVAR|default('profile')|string|lower %}
// {% endif %}
// {% set out = [] %}
// {% if parameter_search or print_printer_parameters or variable_search or gcode_command_search %}
// {% for name1 in printer|sort %}
// {% if parameter_search or print_printer_parameters %}
// {% if config %}                                                                     ; print the searched printer.configfile[path] parameter
// {% if name1 is in ['configfile'] %}
// {% for name2 in printer[name1][path]|sort %}
// {% if search != "-99" %}
// {% if name2 is in [search] %}
// {% for name3, value in printer[name1][path][name2].items() %}
// {% set _dummy = out.append("printer.configfile.%s['%s'].%s = %s" %
// (path, name2, name3, value)) %}
// {% endfor %}
// {% endif %}
// {% else %}
// {% for name3, value in printer[name1][path][name2].items() %}
// {% set _dummy = out.append("printer.configfile.%s['%s'].%s = %s" %
// (path, name2, name3, value)) %}
// {% endfor %}
// {% endif %}
// {% endfor %}
// {% endif %}
// {% else %}
// {% for name2, value2 in printer[name1].items()|sort %} ; search for anything expext printer.configfile
// {% if search is not defined and name1 is not in ['configfile'] and show_mesh == 1 %} ; print all printer. parameters
// {% set _dummy = out.append("printer['%s'].%s = %s" % (name1, name2, value2)) %}
// {% elif search is not defined and name1 is not in ['configfile', 'bed_mesh'] and show_mesh == 0 %} ; print all printer. parameters except bed_mesh
// {% set _dummy = out.append("printer['%s'].%s = %s" % (name1, name2, value2)) %}
// {% elif search is defined and name1 is in [search] %} ; print the searched printer. parameter
// {% set _dummy = out.append("printer['%s'].%s = %s" % (name1, name2, value2)) %}
// {% endif %}
// {% endfor %}
// {% endif %}
// {% elif variable_search %}
// {% for name2 in printer[name1] %}
// {% if (show_cfg or not (name1|lower == 'configfile' and name2|lower in ['config', 'settings'])) and (filter_name in name1|lower or filter_name in name2|lower) and filter_value in printer[name1][name2]|string|lower %}
// {% set _dummy = out.append("printer['%s'].%s = %s" % (name1, name2, printer[name1][name2])) %}
// {% endif %}
// {% else %}
// {% if filter_name in name1|lower and filter_value in printer[name1]|string|lower %}
// {% set _dummy = out.append("printer['%s'] = %s" % (name1, printer[name1])) %}
// {% endif %}
// {% endfor %}
// {% elif gcode_command_search %}
// {% for name2 in printer[name1] %}
// {% if ( (name1|lower == 'configfile') and (name2|lower in ['config']) ) %}
// {% if printer[name1][name2].items() %}
// {% for name3, value3 in printer[name1][name2].items() %}
// {% if "gcode_macro " in name3 or "delayed_gcode" in name3 %}
// {% for name4, value4 in value3.items() %}
// {% if (("gcode" in name4) and ((gcode_cmd|lower) in (value4|lower))) %}
// {% if "gcode_macro " in name3 %}
// {% set ns.num = ns.num + 1 %}
// {% set _dummy = out.append('G-CODE_________name[%d]: %s' % (ns.num, name3[12:]|upper) ) %}
// {% elif "delayed_gcode" in name3 %}
// {% set ns.delayed_num = ns.delayed_num + 1 %}
// {% set _dummy = out.append("DELAYED_G-CODE_name[%d]: %s" % (ns.delayed_num, name3[14:]|upper) ) %}
// {% endif %}
// {% endif %}
// {% endfor %}
// {% elif ( name3 in ['homing_override','idle_timeout'] ) %}
// {% for name4, value4 in value3.items() %}
// {% if (("gcode" in name4) and ((gcode_cmd|lower) in (value4|lower))) %}
// {% if "homing_override" in name3 %}
// {% set ns.homing_override = ns.homing_override + 1 %}
// {% set _dummy = out.append('HOMING_OVERRIDE____[%d]: %s' % (ns.homing_override, name3|upper) ) %}
// {% elif "idle_timeout" in name3 %}
// {% set ns.idle_timeout = ns.idle_timeout + 1 %}
// {% set _dummy = out.append('IDLE_TIMEOUT_______[%d]: %s' % (ns.idle_timeout, name3|upper) ) %}
// {% endif %}
// {% endif %}
// {% endfor %}
// {% endif %}
// {% endfor %}
// {% endif %}
// {% endif %}
// {% endfor %}
// {% endif %}
// {% endfor %}
// {% elif get_variable_search %}
// {% if printer[names|first] %}
// {% set ns = namespace( out = printer[names|first] ) %}
// {% for name in names if _dummy0.break == 0 %}
// {% if loop.index > 1 %}  ;The current iteration of the loop. (1 indexed)
// {% if name in ns.out %}
// {% set ns.out = ns.out[name] %}
// {% elif name[0] in '0123456789' and ns.out is iterable and ns.out is not string and ns.out is not mapping and ns.out|length > name[0]|int %}
// {% set ns.out = ns.out[name|int] %}
// {% else %}
// {% set _dummy0.break = loop.index0 %}
// {% endif %}
// {% endif %}
// {% endfor %}
// {% if ns.out is boolean %}
// { action_respond_info('Type: boolean') }
// {% elif ns.out is float %}
// { action_respond_info('Type: float') }
// {% elif ns.out is integer %}
// { action_respond_info('Type: integer') }
// {% elif ns.out is mapping %}
// { action_respond_info('Type: mapping') }
// {% elif ns.out is string %}
// { action_respond_info('Type: string') }
// {% elif ns.out is iterable %}
// { action_respond_info('Type: iterable') }
// {% elif ns.out is none %}
// { action_respond_info('Type: none') }
// {% elif ns.out is undefined %}
// { action_respond_info('Type: undefined') }
// {% elif ns.out is callable %}
// { action_respond_info('Type: callable') }
// {% else %}
// { action_respond_info('Type: unknown') }
// {% endif %}
// {% if join and ns.out is iterable and ns.out is not string and ns.out is not mapping %}
// { action_respond_info('%s' % ns.out|join("\n")) }
// {% else %}
// {% if ns.out is mapping and join %}
// {% for key in ns.out|sort %}
// {% if _dummy0.break == 0 and (not('join=' in rawparams|lower)) %}
// { action_respond_info("printer['%s'].%s = %s" % (rawparams[9:], key, ns.out[key]) ) }
// {% elif _dummy0.break == 0 and ('join=' in rawparams|lower) %}
// {% set end = rawparams|length %}
// { action_respond_info("printer['%s'].%s = %s" % (rawparams[9:(end-7)], key, ns.out[key]) ) }
// {% endif %}
// {% endfor %}
// {% else %}
// { action_respond_info('%s' % ns.out) }
// {% endif %}
// {% endif %}
// {% if _dummy0.break != 0 %}
// {% set end2 = _dummy0.break|int %}
// { action_respond_info('"printer.%s" does not contain "%s"!' % (names[0:end2]|join('.'), names[end2])) }
// {% endif %}
// {% else %}
// {action_respond_info("Nothing found for \"SEARCH_PRINTER_OBJECTS %s\"" % rawparams)}
// {% endif %}
// {% elif search_vars_search %}
// {% set ns2 = namespace(flag = 0) %}  ; setup a flag variable so a message will be displayed if nothing is produced by the search
// {% for item in printer|sort  %}
// {% if ' ' in item %}
// {% set ns.path = ['printer', "['%s']" % (item), ''] %}
// {% else %}
// {% set ns.path = ['printer.', item, ''] %}
// {% endif %}
// {% if search in ns.path|lower %}
// {% set ns2.flag = 1%}
// { action_respond_info(ns.path|join) }
// {% endif %}
// {% if printer[item].items()|sort %}
// {% for childkey, child in printer[item].items() recursive %}
// {% set ns.path = ns.path[:loop.depth|int + 1] %}
// {% if ' ' in childkey %}
// {% set null = ns.path.append("['%s']" % (childkey)) %}
// {% else %}
// {% set null = ns.path.append(".%s" % (childkey)) %}
// {% endif %}
// {% if child is mapping  %}
// { loop(child.items()) }
// {% else %}
// {% if search in ns.path|lower %}
// {% set ns2.flag = 1%}
// { action_respond_info("%s : %s" % (ns.path|join, child)) }
// {% endif %}
// {% endif %}
// {% endfor %}
// {% endif %}
// {% endfor %}
// {% if ns2.flag == 0 %}
// {action_respond_info("Nothing found for \"SEARCH_PRINTER_OBJECTS %s\"" % rawparams)}
// {% endif %}
// {% endif %}
// {% if ( (gcode_command_search) and ( out|length > 0 ) ) %}
// {action_respond_info("Found a TOTAL of %d occurrances for '%s' command in USER MACROS." % ((ns.num + ns.delayed_num + ns.homing_override + ns.idle_timeout), gcode_cmd|upper)) }
// {action_respond_info("Found %d occurrance(s) in G-Code macros &\n found %d occurrance(s) in DELAYED G-Code macros &\n found %d occurrance(s) in HOMING_OVERRIDE macro &\n found %d occurrance(s) in IDLE_TIMEOUT macro"
// % (ns.num, ns.delayed_num, ns.homing_override, ns.idle_timeout)) }
// {action_respond_info("The following list of G-Code macros contain the command['%s']:" % gcode_cmd)}
// {% endif %}
// {% if parameter_search or variable_search or gcode_command_search or print_printer_parameters %}
// {% if out|length > 0 %}
// {action_respond_info(out|join("\n"))}
// {% else %}
// {action_respond_info("Nothing found for \"SEARCH_PRINTER_OBJECTS %s\"" % rawparams)}
// {% endif %}
// {% endif %}
// printer.configfile.settings['gcode_macro search_printer_objects'].description : Helper: Dump Klipper parameters located in printer object to terminal, which are specified by the given params; this combines 5 different searches into on PRINTER OBJECT search
// printer.configfile.settings['gcode_macro _check_consitent'].gcode :
// _general_Debug msg="_CHECK_CONSITENT - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set text = ["CONFIG: ERROR"] %}
// {% if user.run is not defined %}
// {% set _dummy = text.append("_USER_VARIABLE macro missing") %}
// {% elif not user.run %}
// {% set _dummy = text.append("_USER_VARIABLE macro not executed") %}
// {% endif %}
// {% if global.run is not defined %}
// {% set _dummy = text.append("_GLOBAL_VARS macro missing") %}
// {% elif not global.run %}
// {% set _dummy = text.append("_GLOBAL_VARS macro not executed") %}
// {% endif %}
// {% if 'save_variables' not in printer %}
// {% set _dummy = text.append("[save_variables] missing") %}
// {% endif %}
// {% if 'virtual_sdcard' not in printer %}
// {% set _dummy = text.append("[virtual_sdcard] missing") %}
// {% endif %}
// {% if text|length > 1 %}
// {action_respond_info(text|join("\n"))}
// {% endif %}
// _general_Debug msg="_CHECK_CONSITENT - exiting"
// printer.configfile.settings['gcode_macro _check_consitent'].description : Helper: Check that some criteria are meet in the printer.cfg
// printer.configfile.settings['delayed_gcode probe_accuracy_loop'].gcode :
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set tmacro = global.tmacro %}
// {% if global.tmacro.state == 'start' %}
// { action_respond_info('TEST_PROBE_ACCURACY: START') }
// {% set _dummy = tmacro.update({'state':'start_idle' }) %}
// {% set _dummy = tmacro.update({'next_state':'start_idle_done'}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=tmacro VALUE="{tmacro}"
// UPDATE_DELAYED_GCODE ID=probe_accuracy_set_next_state DURATION={ global.tmacro.start_idle_minutes|int * 60 }
// {% elif global.tmacro.state == 'start_idle_done' %}
// {% if global.tmacro.bed_temp >= 0 %}
// M140 S{ global.tmacro.bed_temp }
// { action_respond_info('TEST_PROBE_ACCURACY: BED HEATING TO %s' % global.tmacro.bed_temp) }
// {% set _dummy = tmacro.update({'state':'bed_heating' }) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=tmacro VALUE="{tmacro}"
// {% else %}
// {% set _dummy = tmacro.update({'state':'bed_soaked' }) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=tmacro VALUE="{tmacro}"
// {% endif %}
// {% elif global.tmacro.state == 'bed_heating' %}
// {% if printer.heater_bed.temperature >= global.tmacro.bed_temp %}
// { action_respond_info('TEST_PROBE_ACCURACY: BED HEATED TO %s' % global.tmacro.bed_temp) }
// {% set _dummy = tmacro.update({'state':'bed_soaking' }) %}
// {% set _dummy = tmacro.update({'next_state':'bed_soaked'}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=tmacro VALUE="{tmacro}"
// UPDATE_DELAYED_GCODE ID=probe_accuracy_set_next_state DURATION={ global.tmacro.bed_soak_minutes|int * 60 }
// {% endif %}
// {% elif global.tmacro.state == 'bed_soaked' %}
// {% if global.tmacro.bed_temp >= 0 %}
// { action_respond_info('TEST_PROBE_ACCURACY: BED SOAKED') }
// {% endif %}
// {% if global.tmacro.extruder_temp >= 0 %}
// M104 S{ global.tmacro.extruder_temp }
// { action_respond_info('TEST_PROBE_ACCURACY: EXTRUDER HEATING TO %s' % global.tmacro.extruder_temp) }
// {% set _dummy = tmacro.update({'state':'extruder_heating' }) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=tmacro VALUE="{tmacro}"
// {% else %}
// {% set _dummy = tmacro.update({'state':'extruder_soaked' }) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=tmacro VALUE="{tmacro}"
// {% endif %}
// {% elif global.tmacro.state == 'extruder_heating' %}
// {% if printer.extruder.temperature >= global.tmacro.extruder_temp %}
// { action_respond_info('TEST_PROBE_ACCURACY: EXTRUDER HEATED TO %s' % global.tmacro.extruder_temp) }
// {% set _dummy = tmacro.update({'state':'extruder_soaking' }) %}
// {% set _dummy = tmacro.update({'next_state':'extruder_soaked' }) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=tmacro VALUE="{tmacro}"
// UPDATE_DELAYED_GCODE ID=probe_accuracy_set_next_state DURATION={ global.tmacro.extruder_soak_minutes|int * 60 }
// {% endif %}
// {% elif global.tmacro.state == 'extruder_soaked' %}
// {% if global.tmacro.extruder_temp >= 0 %}
// { action_respond_info('TEST_PROBE_ACCURACY: EXTRUDER SOAKED') }
// {% endif %}
// TURN_OFF_HEATERS
// {% set _dummy = tmacro.update({'state':'end_idle' }) %}
// {% set _dummy = tmacro.update({'next_state':'done' }) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=tmacro VALUE="{tmacro}"
// UPDATE_DELAYED_GCODE ID=probe_accuracy_set_next_state DURATION={ global.tmacro.end_idle_minutes|int * 60 }
// {% elif global.tmacro.state == 'done' %}
// { action_respond_info('TEST_PROBE_ACCURACY: DONE') }
// G90
// G1 Z30
// UPDATE_DELAYED_GCODE ID=probe_accuracy_loop DURATION=0
// {% endif %}
// {% if global.tmacro.state != 'done' %}
// M105
// ATTACH_PROBE_LOCK
// _PROBE_ACCURACY
// {% if global.tmacro.dwell_lift_z >= 0 %}
// G1 Z{ global.tmacro.dwell_lift_z }
// {% endif %}
// M400
// UPDATE_DELAYED_GCODE ID=probe_accuracy_loop DURATION={ global.tmacro.dwell_seconds }
// {% endif %}
// printer.configfile.settings['delayed_gcode probe_accuracy_loop'].initial_duration : 0.0
// printer.configfile.settings['led_effect sb_bar_meshing'].layers :
// breathing  3 1 top (1.0, 1.0, 0.0)
// printer.configfile.settings['led_effect sb_bar_meshing'].leds :
// neopixel:progress_bar_leds (1-33)
// printer.configfile.settings['led_effect sb_bar_meshing'].autostart : False
// printer.configfile.settings['led_effect sb_bar_meshing'].run_on_error : False
// printer.configfile.settings['led_effect sb_bar_meshing'].frame_rate : 5.0
// printer.configfile.settings['gcode_macro wled_off'].gcode :
// _general_Debug msg="WLED_OFF- entering"
// {% set strip = params.STRIP|string %}
// {action_call_remote_method("set_wled_state",
// strip=strip,
// state=False)}
// _general_Debug msg="WLED_OFF- exiting"
// printer.configfile.settings['gcode_macro wled_off'].description : Helper: Turn off a WLED strip
// printer.configfile.settings['gcode_macro _display_print_time'].gcode :
// _general_Debug msg="_DISPLAY_PRINT_TIME - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set totaltime = params.SECONDS|int if 'SECONDS' in params|upper
// else printer.save_variables.variables.print_stats.time.total %}
// {% set prefix = params.PREFIX|default('Total') %}
// {% set h,m,s = (totaltime / 3600)|int, ((totaltime / 60) % 60)|int, (totaltime % 60)|int %}
// {action_respond_info("Print time %s %d:%02d:%02d" % (prefix,h,m,s))}
// M117 {prefix} {h}:{'%02d' % m}:{'%02d' % s}
// {% if user.hw.display.ena %} UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=10 {% endif %}
// _general_Debug msg="_DISPLAY_PRINT_TIME - exiting"
// printer.configfile.settings['gcode_macro _display_print_time'].description : Helper: Print actual stored print time or convert seconds to h:m:s
// printer.configfile.settings['led_effect sb_fan_calibrating_z'].layers :
// breathing  3 1 top (1.00, 0.25, 0.00)
// printer.configfile.settings['led_effect sb_fan_calibrating_z'].leds :
// neopixel:sb_leds (1-8)
// printer.configfile.settings['led_effect sb_fan_calibrating_z'].frame_rate : 5.0
// printer.configfile.settings['led_effect sb_fan_calibrating_z'].autostart : False
// printer.configfile.settings['led_effect sb_fan_calibrating_z'].run_on_error : False
// printer.configfile.settings['gcode_macro _magprobe_status_calibrating_z'].gcode :
// {% if printer['gcode_macro status_calibrating_z'] is defined %}
// _Mag_Probe_Debug msg="_magprobe_status_calibrating_z activating the LED STATUS_CALIBRATING_Z"
// STATUS_CALIBRATING_Z
// {% endif %}
// printer.configfile.settings['gcode_macro _magprobe_status_calibrating_z'].description : Helper: Mag Probe, enable STATUS_CALIBRATING_Z LED state
// printer.configfile.settings['gcode_macro set_nozzle_leds_off'].gcode :
// _general_Debug msg="SET_NOZZLE_LEDS_OFF - entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set nozzle_effect = global.current_led_state.nozzle_leds %}
// SET_LED_EFFECT EFFECT={nozzle_effect} STOP=1
// _general_Debug msg="SET_NOZZLE_LEDS_OFF - exiting"
// printer.configfile.settings['gcode_macro set_nozzle_leds_off'].description : Helper: Turn off the Stealthburner NOZZLE leds by using the SET_LED_EFFECT call
// printer.configfile.settings['gcode_macro _test_probe1'].gcode :
// {% set LOOP = params.TEST_LOOP|float %}
// {% set PASS = printer.probe.last_z_result %}
// M118 Current Median is: {PASS}
// M118 Bed temp: {printer.heater_bed.temperature}
// M118 Time: {printer.toolhead.estimated_print_time}
// G0 Z25 F100
// G4 P2000
// SAVE_VARIABLE VARIABLE={LOOP} VALUE={printer.heater_bed.temperature},{PASS},{printer.toolhead.estimated_print_time}
// printer.configfile.settings['gcode_macro _test_probe1'].description : Helper: CHK_HEAT_EXPANSION macro; save the results of the bed probing
// printer.configfile.settings['gcode_macro _test_probe0'].gcode :
// {% set ZSpeed = printer["gcode_macro globalvariables"].zprobespeed|float %}
// {% set ZSamples = printer["gcode_macro globalvariables"].zprobesamples|int %}
// {% set ZTolerance = printer["gcode_macro globalvariables"].zprobetolerance|float %}
// {% set ZRetract = printer["gcode_macro globalvariables"].zproberetract|float %}
// {% set S_Retries = printer.configfile.config["probe"]["samples_tolerance_retries"]|int %}
// {% set LOOP = params.TEST_LOOP|float %}
// PROBE samples_result=median samples={ZSamples} speed={ZSpeed} samples_tolerance={ZTolerance} samples_tolerance_retries={S_Retries} sample_retract_dist={ZRetract}
// _TEST_PROBE1 TEST_LOOP={LOOP}
// printer.configfile.settings['gcode_macro _test_probe0'].description : Helper: CHK_HEAT_EXPANSION macro; probes the bed 10 times
// printer.configfile.settings['gcode_macro caselight'].gcode :
// _general_Debug msg="CASELIGHT - entering"
// {% if printer['output_pin caselight'].value == 0 %}
// _CASELIGHT_ON
// {% else %}
// _CASELIGHT_OFF
// {% endif %}
// _general_Debug msg="CASELIGHT - exiting"
// printer.configfile.settings['gcode_macro caselight'].description : Helper: Toggle the 24V white CASE Lights
// printer.configfile.settings['gcode_macro test_range'].gcode :
// _general_Debug msg="TEST_RANGE - entering"
// {% set RED = params.RED|default(0)|float %}
// {% set GREEN = params.GREEN|default(1)|float %}
// {% set BLUE = params.BLUE|default(0)|float %}
// {% set WHITE = params.WHITE|default(0)|float %}
// {% set STRIP = params.STRIP|default("Chamber_Lights")|string %}
// SET_WLED STRIP={STRIP} RED={RED} GREEN={GREEN} BLUE={BLUE} WHITE={WHITE}
// _general_Debug msg="TEST_RANGE - exiting"
// printer.configfile.settings['gcode_macro test_range'].description : Helper: Test full range send for WLED strips
// printer.configfile.settings['led_effect sb_bar_cooling'].layers :
// chase  1.0  8.0 add (0.00,0.00,1.00),(0.00,0.00,0.0)
// printer.configfile.settings['led_effect sb_bar_cooling'].leds :
// neopixel:progress_bar_leds (1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,32,33,31,28,26,24,22,20,18,16,14,12,10,8,6,4,2)
// printer.configfile.settings['led_effect sb_bar_cooling'].autostart : False
// printer.configfile.settings['led_effect sb_bar_cooling'].run_on_error : False
// printer.configfile.settings['led_effect sb_bar_cooling'].frame_rate : 5.0
// printer.configfile.settings['led_effect sb_logo_standby'].layers :
// breathing  3 1 top (0.01, 0.01, 0.01)
// printer.configfile.settings['led_effect sb_logo_standby'].run_on_error : False
// printer.configfile.settings['led_effect sb_logo_standby'].leds :
// neopixel:sb_leds (9-16)
// printer.configfile.settings['led_effect sb_logo_standby'].frame_rate : 5.0
// printer.configfile.settings['led_effect sb_logo_standby'].autostart : False
// printer.configfile.settings.save_variables.filename : /home/pi/klipper_config/.variables.stb
// printer.configfile.settings['gcode_macro _general_entry_point'].gcode :
// {% set function  = 'pre_' ~ params.FUNCTION %}
// SAVE_GCODE_STATE NAME={function}
// G90
// printer.configfile.settings['gcode_macro _general_entry_point'].description : Helper:  macro that saves the G-CODE STATE
// printer.configfile.settings['gcode_macro _attach_klicky_probe'].gcode :
// _Mag_Probe_Debug msg="_ATTACH_KLICKY_PROBE - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set move_z = [user.z_hop, printer.toolhead.position.z]|max %}     ; calc movement high
// G90                                                                  ; absolute positioning
// G0 Z{move_z} F{user.speed.z_hop}                                     ; move head up
// G0 X{user.probe.store.x} Y{user.probe.store.y} F{user.speed.travel}  ; step 1
// G0 X{user.probe.dock.x} F{user.speed.dock}                           ; step 2
// G0 Y{user.probe.dock.y} F{user.speed.dock}                           ; step 3
// {% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %} ; set back to relative
// _MAGPROBE_STATUS_READY
// _Mag_Probe_Debug msg="_ATTACH_KLICKY_PROBE - exiting"
// printer.configfile.settings['gcode_macro _attach_klicky_probe'].description : Helper: Mag Probe; Attach Klicky MagProbe
// printer.configfile.settings['led_effect sb_nozzle_heating'].layers :
// gradient 1.00 1.00 top (1.00,0.00,0.00),(0.00,0.00,0.00),(1.00,0.0,0.00)
// printer.configfile.settings['led_effect sb_nozzle_heating'].leds :
// neopixel:sb_leds (17,18)
// printer.configfile.settings['led_effect sb_nozzle_heating'].autostart : False
// printer.configfile.settings['led_effect sb_nozzle_heating'].frame_rate : 2.0
// printer.configfile.settings['led_effect sb_nozzle_heating'].run_on_error : False
// printer.configfile.settings['gcode_macro set_bar_leds_off'].gcode :
// _general_Debug msg="set_bar_leds_off - entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set bar_effect = global.current_led_state.bar_leds %}
// SET_LED_EFFECT EFFECT={bar_effect} STOP=1
// _general_Debug msg="set_bar_leds_off - exiting"
// printer.configfile.settings['gcode_macro set_bar_leds_off'].description : Helper: Turn off the progress bar LEDs by using the SET_LED_EFFECT call
// printer.configfile.settings['gcode_macro info__global_vars'].gcode :
// _general_Debug msg="INFO__GLOBAL_VARSL - entering"
// {% set ns = namespace( flag = 0 ) %}
// {% set ns2 = namespace(flag = 0, loop_flag = 0 ) %}
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set search_vars_search = True if params.VAR else False %}
// {% set search = params.VAR|default('')|string|lower %}
// {% if '.' is in params.VAR %}
// {% set ns.flag = 1 %}
// {% set ns.search = search.split('.') %}
// {% set ns.length = (ns.search|length) - 1 %}
// {% set search = ns.search[ns.length] %}
// {% endif %}
// {% if search_vars_search == False %}
// {% set print_printer_parameters = True %}
// {% else %}
// {% set print_printer_parameters = False %}
// {% endif %}
// {% if print_printer_parameters %}
// {% set ns.path = ["INFO__GLOBAL_VARS <+++++++++++++++++", ''] %}
// { action_respond_info(ns.path|join) }
// {% endif %}
// {% for item in global|sort %}
// {% if ns.flag == 0 %}
// {% if ' ' in item %}
// {% set ns.path = ['global', "['%s']" % (item), ''] %}
// {% else %}
// {% set ns.path = ['global.', item, ''] %}
// {% endif %}
// {% if search in ns.path|lower %}
// {% set ns2.flag = 1%}
// { action_respond_info(ns.path|join) }
// {% endif %}
// {% set ns2.loop_flag = 0 %}
// {%
// if (global[item] is not boolean)
// and (global[item] is not float)
// and (global[item] is not integer)
// and (global[item] is not none)
// and (global[item] is not undefined)
// and (global[item] is not callable)
// %}
// {% set ns2.loop_flag = 1 %}
// {% endif %}
// {% if ns2.loop_flag %}
// {% if global[item].items()|sort %}
// {% for childkey, child in global[item].items() recursive %}
// {% set ns.path = ns.path[:loop.depth|int + 1] %}
// {% if ' ' in childkey %}
// {% set null = ns.path.append("['%s']" % (childkey)) %}
// {% else %}
// {% set null = ns.path.append(".%s" % (childkey)) %}
// {% endif %}
// {% if child is mapping  %}
// { loop(child.items()|sort) }
// {% else %}
// {% if search in ns.path|lower %}
// {% set ns2.flag = 1%}
// { action_respond_info("%s : %s" % (ns.path|join, child)) }
// {% endif %}
// {% endif %}
// {% endfor %}
// {% endif %}
// {% else %}
// {% if search in ns.path|lower %}
// {% set ns2.flag = 1%}
// { action_respond_info("%s : %s" % (ns.path|join, (global[item])|string)) }
// {% endif %}
// {% endif %}
// {% else %}
// {% if item ==  ns.search[(ns.length-ns.length)] %}
// {% if ' ' in item %}
// {% set ns.path = ['global', "['%s']" % (item), ''] %}
// {% else %}
// {% set ns.path = ['global.', item, ''] %}
// {% endif %}
// {% if search in ns.path|lower %}
// {% set ns2.flag = 1%}
// { action_respond_info(ns.path|join) }
// {% endif %}
// {% set ns2.loop_flag = 0 %}
// {%
// if (global[item] is not boolean)
// and (global[item] is not float)
// and (global[item] is not integer)
// and (global[item] is not none)
// and (global[item] is not undefined)
// and (global[item] is not callable)
// %}
// {% set ns2.loop_flag = 1 %}
// {% endif %}
// {% if ns2.loop_flag %}
// {% if global[item].items()|sort %}
// {% for childkey, child in global[item].items() recursive %}
// {% set ns.path = ns.path[:loop.depth|int + 1] %}
// {% if ' ' in childkey %}
// {% set null = ns.path.append("['%s']" % (childkey)) %}
// {% else %}
// {% set null = ns.path.append(".%s" % (childkey)) %}
// {% endif %}
// {% if child is mapping  %}
// { loop(child.items()|sort) }
// {% else %}
// {% if search in ns.path|lower %}
// {% set ns2.flag = 1%}
// { action_respond_info("%s : %s" % (ns.path|join, child)) }
// {% endif %}
// {% endif %}
// {% endfor %}
// {% endif %}
// {% else %}
// {% if search in ns.path|lower %}
// {% set ns2.flag = 1%}
// { action_respond_info("%s : %s" % (ns.path|join, (global[item])|string)) }
// {% endif %}
// {% endif %}
// {% else %}
// {% endif %}
// {% endif %}
// {% endfor %}
// {% if print_printer_parameters %}
// {% set ns.path = ["End of INFO__GLOBAL_VARS +++++++++++++++++>", ''] %}
// { action_respond_info(ns.path|join) }
// {% endif %}
// {% if ns2.flag == 0 and not print_printer_parameters %}
// {action_respond_info("Nothing found for \"INFO__GLOBAL_VARS %s\"" % rawparams)}
// {% endif %}
// _general_Debug msg="INFO__GLOBAL_VARS - exiting"
// printer.configfile.settings['gcode_macro info__global_vars'].description : Helper: print out all values in [gcode_macro _GLOBAL_VARS] space or the speciifed parameter
// printer.configfile.settings['gcode_macro pause'].rename_existing : PAUSE_BASE
// printer.configfile.settings['gcode_macro pause'].description : Pause the actual running print
// printer.configfile.settings['gcode_macro pause'].gcode :
// _general_Debug msg="PAUSE - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set restore = {'absolute': {'coordinates': printer.gcode_move.absolute_coordinates,
// 'extrude'    : printer.gcode_move.absolute_extrude},
// 'speed'   : printer.gcode_move.speed} %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=restore VALUE="{restore}"
// {% if user.hw.display.ena %} _LCD_KNOB COLOR=BLUE BLINK=1 {% endif %}
// {% if not printer.extruder.can_extrude %}
// {action_respond_info("Extruder Temp to low heat to %3.1fC" % printer.configfile.settings.extruder.min_extrude_temp)}
// M109 S{printer.configfile.settings.extruder.min_extrude_temp}
// {% endif %}
// M83
// G0 E-{user.filament.retract.pause} F{user.speed.retract}
// PAUSE_BASE
// _TOOLHEAD_PARK P=0 X={params.X|default(user.park.pause.x)} Y={params.Y|default(user.park.pause.y)}
// M104 S{printer.extruder.target}
// _general_Debug msg="PAUSE - exiting"
// printer.configfile.settings['gcode_macro attach_probe'].gcode :
// _Mag_Probe_Debug msg="ATTACH_PROBE - entering"
// _MAG_PROBE ACTION=ATTACH
// _MAG_PROBE ACTION=CHECK_ATTACH
// _Mag_Probe_Debug msg="ATTACH_PROBE - exiting"
// printer.configfile.settings['gcode_macro attach_probe'].description : Helper: Mag Probe; Attaching the MagProbe if not already attached
// printer.configfile.settings['gcode_macro quad_gantry_level'].rename_existing : QUAD_GANTRY_LEVEL_BASE
// printer.configfile.settings['gcode_macro quad_gantry_level'].description : Helper: Mag Probe; Conform a moving, twistable gantry to the shape of a stationary bed
// printer.configfile.settings['gcode_macro quad_gantry_level'].gcode :
// _Mag_Probe_Debug msg="QUAD_GANTRY_LEVEL - entering"
// {% set user   = printer['gcode_macro _USER_VARIABLE'] %}
// {% set move_z = [user.z_hop, printer.toolhead.position.z]|max %} ; calc movement high
// _SET_Z_CURRENT VAL=HOME
// {% if "xyz" not in printer.toolhead.homed_axes %} G28 {% endif %}
// {% if user.hw.mag_probe.ena %}
// G90
// G0 Z{move_z} F{user.speed.z_hop} ; move head up to insure Probe is not triggered in error case
// ATTACH_PROBE
// {% endif %}
// {% if user.hw.mag_probe.ena %}
// _MAGPROBE_STATUS_LEVELING
// {% endif %}
// QUAD_GANTRY_LEVEL_BASE {rawparams}
// {% if user.hw.mag_probe.ena %} DETACH_PROBE {% endif %}
// {% if params.HOME|default('true')|lower == 'true' %} G28 Z {% endif %}
// _SET_Z_CURRENT
// {% if params.PARK|default('true')|lower == 'true' %}
// G90
// G0 X{user.park.bed.x} Y{user.park.bed.y} Z{user.park.bed.z} F{user.speed.travel}
// {% endif %}
// {% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %} ; set back to relative
// _Mag_Probe_Debug msg="QUAD_GANTRY_LEVEL - exiting"
// printer.configfile.settings['gcode_macro _bedfansoff'].gcode :
// _general_Debug msg="_BedFansOff - entering"
// SET_FAN_SPEED FAN=Bedfan_Left SPEED=0                    ;set fan speed
// SET_FAN_SPEED FAN=Bedfan_Right SPEED=0                   ;set fan speed
// _general_Debug msg="_BedFansOff - exiting"
// printer.configfile.settings['gcode_macro _bedfansoff'].description : Helper: Turns off the bed fans
// printer.configfile.settings['gcode_macro check_qgl'].gcode :
// _Mag_Probe_Debug msg="CHECK_QGL - entering"
// {% set user        = printer['gcode_macro _USER_VARIABLE'] %}
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set probe_state = global._mag_probe.state|default('unknown')|lower %} ; get probe state
// {% set probe_ok    = False if user.hw.mag_probe.ena and (probe_state == 'error' or probe_state == 'unknown')
// else True %}
// {% if not printer.quad_gantry_level.applied or not probe_ok %} ; check QGL and probe status
// {action_respond_info("QGL CHECK: Fail therefore cancel the print")}
// PAUSE_BASE
// G90
// G0 Z{user.z_hop} F{user.speed.z_hop}                                 ; move nozzle to z high first
// {% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %} ; set back to relative
// {% if user.hw.mag_probe.ena %} DETACH_PROBE {% endif %}
// CANCEL_PRINT PARK=1 ERROR=1
// {% else %}
// {action_respond_info("QGL CHECK: Pass")}
// {% endif %}
// _Mag_Probe_Debug msg="CHECK_QGL - exiting"
// printer.configfile.settings['gcode_macro check_qgl'].description : Helper: Mag Probe; Run after QUAD_GANTRY_LEVEL to insure it passes
// printer.configfile.settings['gcode_macro _power_on_esp2'].gcode :
// _general_Debug msg="_POWER_ON_ESP2 - entering"
// {action_call_remote_method("set_device_power",
// device="tasmota_plug_ESP2",
// state="on")}
// _general_Debug msg="_POWER_ON_ESP2 - exiting"
// printer.configfile.settings['gcode_macro _power_on_esp2'].description : Helper: Turn on the Tasmota ESP2 smart plug
// printer.configfile.settings['temperature_fan out-take_left_side_controller'].control : watermark
// printer.configfile.settings['temperature_fan out-take_left_side_controller'].tachometer_pin : ^tinyfan:FAN2_RPM
// printer.configfile.settings['temperature_fan out-take_left_side_controller'].cycle_time : 4e-05
// printer.configfile.settings['temperature_fan out-take_left_side_controller'].target_temp : 25.0
// printer.configfile.settings['temperature_fan out-take_left_side_controller'].pin : tinyfan:FAN2_PWM
// printer.configfile.settings['temperature_fan out-take_left_side_controller'].sensor_path : /sys/class/thermal/thermal_zone0/temp
// printer.configfile.settings['temperature_fan out-take_left_side_controller'].max_delta : 1.0
// printer.configfile.settings['temperature_fan out-take_left_side_controller'].tachometer_poll_interval : 0.0015
// printer.configfile.settings['temperature_fan out-take_left_side_controller'].max_temp : 100.0
// printer.configfile.settings['temperature_fan out-take_left_side_controller'].shutdown_speed : 1.0
// printer.configfile.settings['temperature_fan out-take_left_side_controller'].off_below : 0.4
// printer.configfile.settings['temperature_fan out-take_left_side_controller'].sensor_type : temperature_host
// printer.configfile.settings['temperature_fan out-take_left_side_controller'].max_speed : 1.0
// printer.configfile.settings['temperature_fan out-take_left_side_controller'].min_temp : 0.0
// printer.configfile.settings['temperature_fan out-take_left_side_controller'].min_speed : 1.0
// printer.configfile.settings['temperature_fan out-take_left_side_controller'].kick_start_time : 0.1
// printer.configfile.settings['temperature_fan out-take_left_side_controller'].tachometer_ppr : 2
// printer.configfile.settings['temperature_fan out-take_left_side_controller'].hardware_pwm : True
// printer.configfile.settings['temperature_fan out-take_left_side_controller'].gcode_id : Out-take_Left
// printer.configfile.settings['temperature_fan out-take_left_side_controller'].max_power : 1.0
// printer.configfile.settings['gcode_macro bed_mesh_load'].gcode :
// _Mag_Probe_Debug msg="BED_MESH_LOAD - entering"
// {% set name = '' if printer.save_variables.variables.plates is not defined
// else printer.save_variables.variables.plates.array[printer.save_variables.variables.plates.index].name + '-' %}
// {% set mesh_name = name + "Bed_Temp-" + printer.heater_bed.target|int|string + "C" %}
// {% if printer.configfile.config["bed_mesh " + mesh_name] is defined %}
// {action_respond_info("BED_MESH: \"%s\" loaded" % mesh_name)}
// BED_MESH_CLEAR
// BED_MESH_PROFILE LOAD={mesh_name}
// {% elif params.AUTO|default('false')|lower == 'true' %}
// {action_respond_info("BED_MESH: \"%s\" needs to be generated" % mesh_name)}
// BED_MESH_STORE SAVE=none PARK=false
// {% else %}
// {action_respond_info("BED_MESH: ERROR \"%s\" not defined" % mesh_name)}
// {% endif %}
// _Mag_Probe_Debug msg="BED_MESH_LOAD - exiting"
// printer.configfile.settings['gcode_macro bed_mesh_load'].description : Helper: Mag Probe; Load an existing mesh or generate a new one
// printer.configfile.settings['gcode_macro _z_move_check'].gcode :
// _Mag_Probe_Debug msg="_Z_MOVE_CHECK - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set param = [] %}
// {% for key in params %} ; generate base macro call
// {% if key == 'Z' %}
// {% set z_target = params.Z|float if printer.gcode_move.absolute_coordinates
// else params.Z|float + printer.gcode_move.gcode_position.z %}
// {% set z_move_ok = True if z_target >= user.z_hop or
// z_target >= printer.gcode_move.gcode_position.z
// else False %}
// {% if z_move_ok %}
// {% set _dummy = param.append(key + params[key]) %}
// {% else %}
// {action_respond_info("%s: Z Move (%.3f mm -> %.3f mm) not allowed" %
// (params.CALLER, printer.gcode_move.gcode_position.z, z_target))}
// {% endif %}
// {% elif key != 'CALLER' %}
// {% set _dummy = param.append(key + params[key]) %}
// {% endif %}
// {% endfor %}
// {params.CALLER}.1 {param|join(" ")} ; call G0 or G1 base macro with all parameters
// _Mag_Probe_Debug msg="_Z_MOVE_CHECK - exiting"
// printer.configfile.settings['gcode_macro _z_move_check'].description : Helper: Mag Probe; Check limit and perform move
// printer.configfile.settings['fan_generic filter'].cycle_time : 1.0
// printer.configfile.settings['fan_generic filter'].pin : PA8
// printer.configfile.settings['fan_generic filter'].off_below : 0.1
// printer.configfile.settings['fan_generic filter'].shutdown_speed : 0.0
// printer.configfile.settings['fan_generic filter'].max_power : 1.0
// printer.configfile.settings['fan_generic filter'].kick_start_time : 0.5
// printer.configfile.settings['fan_generic filter'].hardware_pwm : False
// printer.configfile.settings['gcode_macro _set_leds'].gcode :
// _general_Debug msg="_set_led - entering"
// {% if printer.extruder.target == 0 %}
// {% else %}
// {% if printer.idle_timeout.state == "Printing" and progressbar_enabled == 1 %}
// {% set perc = printer.display_status.progress %}
// {% set numleds = printer.configfile.config["neopixel progress_bar_leds"].chain_count|int %}
// {% set last = (perc|float * numleds|float)|int %}
// {% for n in range(numleds) %}
// {% if n < last %}
// SET_LED LED=progress_bar_leds RED=0 GREEN=0 BLUE=1 TRANSMIT=0 index={ n + 1|int }
// {% else %}
// SET_LED LED=progress_bar_leds RED=0.3 GREEN=0.3 BLUE=0.3 TRANSMIT=0 index={ n + 1|int }
// {% endif %}
// {% endfor %}
// SET_LED LED=progress_bar_leds RED=0 GREEN=0 BLUE=1 TRANSMIT=1 INDEX={ last + 1|int }
// {% endif %}
// {% endif %}
// _general_Debug msg="_set_led - exiting"
// printer.configfile.settings['gcode_macro _set_leds'].description : Helper: show the progress of the print job on the progress bar
// printer.configfile.settings['led_effect sb_bar_cleaning'].layers :
// breathing  3 1 top (0.0, 0.02, 0.5)
// printer.configfile.settings['led_effect sb_bar_cleaning'].run_on_error : False
// printer.configfile.settings['led_effect sb_bar_cleaning'].leds :
// neopixel:progress_bar_leds (1-33)
// printer.configfile.settings['led_effect sb_bar_cleaning'].frame_rate : 5.0
// printer.configfile.settings['led_effect sb_bar_cleaning'].autostart : False
// printer.configfile.settings['gcode_macro park'].gcode :
// _general_Debug msg="PARK - entering"
// {% if params.P and params.P|lower is not in ['bed','center','front','frontlow','rear'] %}
// {action_respond_info("\"PARK P=%s\" not valid use P=[BED,CENTER,FRONT,FRONTLOW,REAR]
// Default position BED will be used" % params.P|upper)}
// {% else %}
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set pos = params.P|default('bed')|lower %}
// _CG28                 ; home if not already homed
// G90                   ; absolute positioning
// G0 X{user.park[pos].x} Y{user.park[pos].y} Z{user.park[pos].z} F{user.speed.travel}
// {% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %} ; set back to relative
// {% endif %}
// _general_Debug msg="PARK - exiting"
// printer.configfile.settings['gcode_macro park'].description : Helper: Park head depending on parameter P
// printer.configfile.settings['thermistor fysetc-ht-ntc100k-3950'].resistance2 : 12382.5
// printer.configfile.settings['thermistor fysetc-ht-ntc100k-3950'].resistance3 : 390.7
// printer.configfile.settings['thermistor fysetc-ht-ntc100k-3950'].resistance1 : 124973.4
// printer.configfile.settings['thermistor fysetc-ht-ntc100k-3950'].temperature2 : 80.0
// printer.configfile.settings['thermistor fysetc-ht-ntc100k-3950'].temperature3 : 220.0
// printer.configfile.settings['thermistor fysetc-ht-ntc100k-3950'].temperature1 : 20.0
// printer.configfile.settings['gcode_macro _do_error_if_probe_deployed'].gcode :
// {% if not printer.probe.last_query %}
// {action_raise_error("ERROR: Probe is still deployed, please remove and return to dock.")}
// {% else %}
// M118 Euclid probe has been stowed.
// {% endif %}
// printer.configfile.settings['gcode_macro _do_error_if_probe_deployed'].description : Helper: Display error message if probe is not docked when it is supposed to be in its docked
// printer.configfile.settings['gcode_macro _vent_info'].gcode :
// _general_Debug msg="_VENT_INFO - entering"
// {% set txt = "off" if printer['temperature_fan chamber'].target == 0
// else "target temp: %2dC" % printer['temperature_fan chamber'].target %}
// {action_respond_info("Chamber fan %s" % txt)}
// _general_Debug msg="_VENT_INFO - exiting"
// printer.configfile.settings['gcode_macro _vent_info'].description : Helper: Print chamber fan temperature
// printer.configfile.settings['gcode_macro _probe_stow'].gcode :
// DOCK_PROBE
// _error_if_probe_deployed ; Verify probe docked
// printer.configfile.settings['gcode_macro _probe_stow'].description : Helper:  Euclid Probe routine that Docks the Euclid Probe
// printer.configfile.settings['gcode_macro prime_line'].gcode :
// _general_Debug msg="PRIME_LINE - entering"
// {% set user     = printer['gcode_macro _USER_VARIABLE'] %}
// {% set prime        = user.prime %}
// {% set prime_height = params.PRIME_HEIGHT|default(prime.pos.z) %}     ; get parameter or set default
// {% set move_z       = [user.z_hop,printer.toolhead.position.z]|max %} ; calc movement high
// {% if prime.dir|string == 'X+' %}
// {% set first_line   = 'X%s E%s F%s'  % (prime.length_per_seg, prime.extrude_per_seg, user.speed.prime) %}
// {% set second_line  = 'X-%s E%s F%s' % (prime.length_per_seg, prime.extrude_per_seg, user.speed.prime) %}
// {% set move_to_side = 'Y%s' % prime.spacing %}
// {% elif prime.dir|string == 'X-' %}
// {% set first_line   = 'X-%s E%s F%s' % (prime.length_per_seg, prime.extrude_per_seg, user.speed.prime) %}
// {% set second_line  = 'X%s E%s F%s'  % (prime.length_per_seg, prime.extrude_per_seg, user.speed.prime) %}
// {% set move_to_side = 'Y%s' % prime.spacing %}
// {% elif prime.dir|string == 'Y+' %}
// {% set first_line   = 'Y%s E%s F%s'  % (prime.length_per_seg, prime.extrude_per_seg, user.speed.prime) %}
// {% set second_line  = 'Y-%s E%s F%s' % (prime.length_per_seg, prime.extrude_per_seg, user.speed.prime) %}
// {% set move_to_side = 'X%s' % prime.spacing %}
// {% elif prime.dir|string == 'Y-' %}
// {% set first_line   = 'Y-%s E%s F%s' % (prime.length_per_seg, prime.extrude_per_seg, user.speed.prime) %}
// {% set second_line  = 'Y%s E%s F%s'  % (prime.length_per_seg, prime.extrude_per_seg, user.speed.prime) %}
// {% set move_to_side = 'X%s' % prime.spacing %}
// {% else %}
// {action_raise_error("_USER_VARIABLE.prime.dir is not spezified as X+, X-, Y+ or Y-")}
// {% endif %}
// {% if user.hw.display.ena %}
// _PRINT_AR T="Prime Line" SHOW_LCD=true
// {% else %}
// _PRINT_AR T="Prime Line"
// {% endif %}
// _CG28                                                 ; home if not already homed
// G92 E0                                                ; reset Extruder
// G90                                                   ; absolute positioning
// G1 Z{move_z} F{user.speed.z_hop}                      ; move head up
// G1 X{prime.pos.x} Y{prime.pos.y} F{user.speed.travel} ; move to start position
// G1 Z{prime_height} F{user.speed.z_hop}                ; move Z Axis down
// G91                                                   ; relative positioning
// {% for segment in range(prime.seg|int) %}             ; draw the first line
// G1 {first_line}
// {% endfor %}
// G1 {move_to_side}                                     ; move to side
// {% for segment in range(prime.seg|int) %}             ; draw the second line
// G1 {second_line}
// {% endfor %}
// G92 E0                                                ; reset Extruder
// {% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %} ; set it back to relative
// {% if printer.gcode_move.absolute_extrude %}         M82 {% endif %} ; set it back to absolute
// {% if user.hw.display.ena %} UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=1 {% endif %}
// _general_Debug msg="PRIME_LINE - exiting"
// printer.configfile.settings['gcode_macro prime_line'].description : Helper: Purge nozzle at defined position
// printer.configfile.settings['gcode_macro test_control'].gcode :
// _general_Debug msg="TEST_CONTROL - entering"
// {% set BRIGHTNESS = params.BRIGHTNESS|default(-1)|int %}
// {% set INTENSITY = params.INTENSITY|default(-1)|int %}
// {% set SPEED = params.SPEED|default(-1)|int %}
// {% set STRIP = params.STRIP|default("Chamber_Lights")|string %}
// WLED_CONTROL STRIP={STRIP} BRIGHTNESS={BRIGHTNESS} INTENSITY={INTENSITY} SPEED={SPEED}
// _general_Debug msg="TEST_CONTROL - exiting"
// printer.configfile.settings['gcode_macro test_control'].description : Helper: Test the ability to control WLED strip's brightness, intensity and speed
// printer.configfile.settings['gcode_macro print_end'].gcode :
// _general_Debug msg="PRINT_END - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// SET_VELOCITY_LIMIT ACCEL={user.speed.NPLimitAccel|float} ACCEL_TO_DECEL={user.speed.NPLimitDecel|float}
// {% set filter_off = user.peripheral.filter.run_after_print %}
// {% set vent_on    = user.peripheral.vent.on_val %}
// {% set vent_off   = user.peripheral.vent.run_after_print %}
// {% set max = printer.toolhead.axis_maximum %}
// {% set act = printer.toolhead.position %}
// {% set safe = {'x': 20.0 if act.x|float < (max.x|float - 20.0) else -20.0,
// 'y': 20.0 if act.y|float < (max.y|float - 20.0) else -20.0,
// 'z':  2.0 if act.z|float < (max.z|float -  2.0) else (max.z|float - act.z|float)} %}
// M400                                                              ; wait for buffer to clear
// SAVE_GCODE_STATE NAME=STATE_PRINT_END
// G92 E0                                                            ; zero the extruder
// M83                                                               ; relative extrusion
// G1 E-{user.filament.retract.end} F{user.speed.retract}            ; retract filament
// G91                                                               ; relative positioning
// G0 X{safe.x} Y{safe.y} Z{safe.z} F{user.speed.travel}             ; move nozzle to remove stringing
// DISABLEFILAMENTSENSOR
// TURN_OFF_HEATERS                                                  ; turn off heaters
// CURRENT_NORMAL
// M107                                                              ; turn off fan
// {% if user.hw.chamber.fan %} M141 S{vent_on} {% endif %}          ; vent chamber (setting fan to below ambient)
// G90                                                               ; absolute positioning
// M400                                                              ; wait for buffer to clear
// G0 X{user.park.pause.x} Y{user.park.pause.y} F{user.speed.travel} ; park nozzle at brush bin
// _ADD_PRINT_TIME
// _SD_PRINT_STATS R='done'
// _SD_PRINTER_STATS
// {% if user.hw.display.ena %} _LCD_KNOB COLOR=GREEN {% endif %}
// {% if user.hw.caselight.ena %} _CASELIGHT_OFF {% endif %}
// {% if user.hw.chamber.fan %} UPDATE_DELAYED_GCODE ID=_DELAY_VENT_OFF DURATION={vent_off} {% endif %}
// {% if user.hw.filter.ena %} UPDATE_DELAYED_GCODE ID=_DELAY_FILTER_OFF DURATION={filter_off} {% endif %}
// {% if user.hw.endstop_temp.ena %}
// {action_respond_info("PRINT_END
// BED temp: act %3.1fC
// Endstop temp: start %3.1fC end %3.1fC" % (printer['temperature_sensor bed'].temperature if 'temperature_sensor bed' in printer
// else printer.heater_bed.temperature,
// printer['gcode_macro PRINT_START'].var.temp.endstop,
// printer['temperature_sensor endstop'].temperature))}
// {% endif %}
// {% if user.unload_sd|lower == 'true' %} UPDATE_DELAYED_GCODE ID=_DELAY_SDCARD_RESET_FILE DURATION=10 {% endif %}
// UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=10
// RESTORE_GCODE_STATE NAME=STATE_PRINT_END
// _COOL_WAIT MINUTES={user.filament.profile.PostPrintCool|float}
// M220 S100 ; set feedrate percentage back to default
// M221 S100 ; set speed percentage back to default
// SET_NOZZLE_LEDS_OFF
// SET_LED LED=sb_leds INDEX=17 RED=.2 GREEN=.5 BLUE=.2
// SET_LED LED=sb_leds INDEX=18 RED=.2 GREEN=.5 BLUE=.2
// STATUS_READY
// M118 Finished printing, check nozzle clear.
// _general_Debug msg="PRINT_END - exiting"
// printer.configfile.settings['gcode_macro print_end'].description : Helper: All commands after the print
// printer.configfile.settings['gcode_macro m401'].gcode :
// _MAG_PROBE ACTION='get_status' RESPOND=0
// {% set Z_POS = printer.toolhead.position.z %}
// {% if printer.probe.last_query %}
// M118 Fetching Euclid Probe.
// _CG28
// G90
// {% if Z_POS < 15 %} G0 Z15 {% endif %}
// _PROBE_DEPLOY
// {% else %}
// M118 ?!Attempted to Deploy probe but it is already attached.
// {% endif %}
// printer.configfile.settings['gcode_macro m401'].description : Helper: Euclid Probe; Attach (Deploy) the Euclid probe
// printer.configfile.settings['gcode_macro m402'].gcode :
// DOCK_PROBE
// printer.configfile.settings['gcode_macro m402'].description : Helper: Euclid Probe;  Docks (Stows) the Euclid probe
// printer.configfile.settings['gcode_macro info_fan_check'].gcode :
// _general_Debug msg="INFO_FAN_CHECK- entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set he_rpm = printer['heater_fan fan_hotend'].rpm|float %}
// {% set he_stop_count = global.fancheckvars.he_stop_count|int %}
// {% set part_cooling_fan_enabled = global.fancheckvars.part_cooling_fan_enabled|int %}
// {% set pc_stop_count = global.fancheckvars.pc_stop_count|int %}
// {% set pc_rpm = printer.fan.rpm|float %}
// {% set string1 = "INFO_FAN_CHECK <++++" %}
// {% set string1 = string1 ~ "\nHotEnd Fan min_rpm = 3500;" %}
// {% set string1 = string1 ~ "\nHotEnd Fan current_rpm = %.2f;" %}
// {% set string1 = string1 ~ "\nHotEnd Fan max_consecutive_stops = 3;" %}
// {% set string1 = string1 ~ "\nHotEnd Fan stop_count = %d;" %}
// {% set string1 = string1 ~ "\nPartCooling Fan Enabled = %d;" %}
// {% set string1 = string1 ~ "\nPartCooling Fan min_rpm = 600;" %}
// {% set string1 = string1 ~ "\nPartCooling Fan current_rpm = %.2f;" %}
// {% set string1 = string1 ~ "\nPartCooling Fan max_consecutive_stops = 3;" %}
// {% set string1 = string1 ~ "\nPartCooling Fan stop_count = %d;" %}
// {% set string1 = string1 ~ "\nEnd of INFO_FAN_CHECK ++++>" %}
// {action_respond_info(string1 % (he_rpm, he_stop_count, part_cooling_fan_enabled, pc_rpm, pc_stop_count)) }
// _general_Debug msg="INFO_FAN_CHECK- exiting"
// printer.configfile.settings['gcode_macro info_fan_check'].description : Helper: Display information about FAN_CHECK routines
// printer.configfile.settings['gcode_macro m107'].rename_existing : M107.1
// printer.configfile.settings['gcode_macro m107'].description : Helper: Part Cooling Fan Off
// printer.configfile.settings['gcode_macro m107'].gcode :
// _general_Debug msg="M107 - entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set fancheckvars = global.fancheckvars %}
// {% set _dummy = fancheckvars.update({'part_cooling_fan_enabled':0}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=fancheckvars VALUE="{fancheckvars}"
// M107.1 {rawparams}
// _general_Debug msg="M107 - exiting"
// printer.configfile.settings['gcode_macro m106'].rename_existing : M106.1
// printer.configfile.settings['gcode_macro m106'].description : Helper: Set fan with manual override and lock option; Part Cooling Fan On/Off
// printer.configfile.settings['gcode_macro m106'].gcode :
// _general_Debug msg="M106 - entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set fancheckvars = global.fancheckvars %}
// {% set S = params.S|float %}
// {% if printer['output_pin lock_M106'].value|int == 0 or params.M|default(0) == '1' %}
// {% if S > 0.0  %}
// {% set _dummy = fancheckvars.update({'part_cooling_fan_enabled':1}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=fancheckvars VALUE="{fancheckvars}"
// {% else %}
// {% set _dummy = fancheckvars.update({'part_cooling_fan_enabled':0}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=fancheckvars VALUE="{fancheckvars}"
// {% endif %}
// M106.1 {rawparams}
// {% else %}
// {action_respond_info("M106 update is locked")}
// {% endif %}
// _general_Debug msg="M106 - exiting"
// printer.configfile.settings['bed_mesh coldmesh'].tension : 0.2
// printer.configfile.settings['bed_mesh coldmesh'].min_x : 50.5
// printer.configfile.settings['bed_mesh coldmesh'].min_y : 48.0
// printer.configfile.settings['bed_mesh coldmesh'].y_count : 7
// printer.configfile.settings['bed_mesh coldmesh'].mesh_y_pps : 2
// printer.configfile.settings['bed_mesh coldmesh'].x_count : 7
// printer.configfile.settings['bed_mesh coldmesh'].mesh_x_pps : 2
// printer.configfile.settings['bed_mesh coldmesh'].points : ((-0.0, 0.01125, 0.00625, 0.00625, 0.00625, 0.0025, 0.0025), (0.0025, 0.01125, 0.00625, 0.005, 0.00625, 0.0025, 0.00125), (-0.0, 0.0075, 0.00375, 0.00375, 0.005, 0.005, 0.0025), (-0.00125, 0.00375, -0.00125, 0.0, 0.00375, 0.00375, 0.00375), (-0.005, 0.0025, -0.00375, -0.005, -0.00375, -0.0025, -0.005), (-0.0025, 0.0025, -0.005, -0.005, -0.005, -0.00375, -0.005), (0.00375, 0.00875, 0.00125, -0.0025, 0.0, 0.00125, 0.005))
// printer.configfile.settings['bed_mesh coldmesh'].algo : bicubic
// printer.configfile.settings['bed_mesh coldmesh'].version : 1
// printer.configfile.settings['bed_mesh coldmesh'].max_x : 250.48
// printer.configfile.settings['bed_mesh coldmesh'].max_y : 247.98
// printer.configfile.settings['thermistor fysetc-ht-ntc100k-3950_airtemp'].resistance2 : 22770.473
// printer.configfile.settings['thermistor fysetc-ht-ntc100k-3950_airtemp'].resistance3 : 7210.884
// printer.configfile.settings['thermistor fysetc-ht-ntc100k-3950_airtemp'].resistance1 : 115684.676
// printer.configfile.settings['thermistor fysetc-ht-ntc100k-3950_airtemp'].temperature2 : 58.0
// printer.configfile.settings['thermistor fysetc-ht-ntc100k-3950_airtemp'].temperature3 : 88.0
// printer.configfile.settings['thermistor fysetc-ht-ntc100k-3950_airtemp'].temperature1 : 23.0
// printer.configfile.settings['fan_generic bedfan_right'].cycle_time : 1.0
// printer.configfile.settings['fan_generic bedfan_right'].pin : PD12
// printer.configfile.settings['fan_generic bedfan_right'].off_below : 0.13
// printer.configfile.settings['fan_generic bedfan_right'].shutdown_speed : 0.0
// printer.configfile.settings['fan_generic bedfan_right'].max_power : 1.0
// printer.configfile.settings['fan_generic bedfan_right'].kick_start_time : 1.0
// printer.configfile.settings['fan_generic bedfan_right'].hardware_pwm : False
// printer.configfile.settings['delayed_gcode _delay_vent_off'].gcode :
// _general_Debug msg="_DELAY_VENT_OFF - entering"
// {% if printer.print_stats.state|lower != "paused" and printer.print_stats.state|lower != "printing" %}
// M141
// _VENT_INFO
// {% endif %}
// _general_Debug msg="_DELAY_VENT_OFF - exiting"
// printer.configfile.settings['delayed_gcode _delay_vent_off'].initial_duration : 0.0
// printer.configfile.settings['led_effect sb_bar_busy'].layers :
// breathing  3 1 top (1,0,0)
// printer.configfile.settings['led_effect sb_bar_busy'].leds :
// neopixel:progress_bar_leds (1-33)
// printer.configfile.settings['led_effect sb_bar_busy'].frame_rate : 5.0
// printer.configfile.settings['led_effect sb_bar_busy'].run_on_error : False
// printer.configfile.settings['led_effect sb_bar_busy'].autostart : False
// printer.configfile.settings['gcode_macro _probe_deploy'].gcode :
// ATTACH_PROBE
// _error_if_probe_not_deployed ; Verify probe attached
// printer.configfile.settings['gcode_macro _probe_deploy'].description : Helper: Euclid Probe routine that Attaches the Euclid Probe
// printer.configfile.settings['led_effect sb_fan_heating'].layers :
// chase  0.3  2 add (1.00,0.0,0),(0.00,0.00,0.0)
// printer.configfile.settings['led_effect sb_fan_heating'].leds :
// neopixel:sb_leds (1,3,7,8,6,2)
// printer.configfile.settings['led_effect sb_fan_heating'].frame_rate : 5.0
// printer.configfile.settings['led_effect sb_fan_heating'].run_on_error : False
// printer.configfile.settings['led_effect sb_fan_heating'].autostart : False
// printer.configfile.settings['led_effect sb_nozzle_busy'].layers :
// breathing  3 1 top (1,0,0)
// printer.configfile.settings['led_effect sb_nozzle_busy'].run_on_error : False
// printer.configfile.settings['led_effect sb_nozzle_busy'].leds :
// neopixel:sb_leds (17,18)
// printer.configfile.settings['led_effect sb_nozzle_busy'].frame_rate : 2.0
// printer.configfile.settings['led_effect sb_nozzle_busy'].autostart : False
// printer.configfile.settings.stepper_z2.full_steps_per_rotation : 200
// printer.configfile.settings.stepper_z2.rotation_distance : 40.0
// printer.configfile.settings.stepper_z2.gear_ratio : ((80.0, 16.0),)
// printer.configfile.settings.stepper_z2.step_pin : PE2
// printer.configfile.settings.stepper_z2.microsteps : 32
// printer.configfile.settings.stepper_z2.dir_pin : PE3
// printer.configfile.settings.stepper_z2.enable_pin : !PD4
// printer.configfile.settings['led_effect sb_logo_cleaning'].layers :
// breathing  3 1 top (0.0, 0.02, 0.5)
// printer.configfile.settings['led_effect sb_logo_cleaning'].run_on_error : False
// printer.configfile.settings['led_effect sb_logo_cleaning'].leds :
// neopixel:sb_leds (9-16)
// printer.configfile.settings['led_effect sb_logo_cleaning'].frame_rate : 5.0
// printer.configfile.settings['led_effect sb_logo_cleaning'].autostart : False
// printer.configfile.settings['gcode_macro g1'].rename_existing : G1.1
// printer.configfile.settings['gcode_macro g1'].description : Helper: Mag Probe; Move gcode that prevents moves lower than the limit when probe attached
// printer.configfile.settings['gcode_macro g1'].gcode :
// _Mag_Probe_Debug msg="G1 - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% if params.FORCE is defined or user.mag_probe.state == 'docked' %}
// G1.1 {rawparams}
// {% else %}
// {% set param = [] %}
// {% for key in params %} ; get gcode input parameters
// {% set _dummy = param.append(key + "=" + params[key]) if key is not in ['G', 'FORCE'] %}
// {% endfor %}
// _Z_MOVE_CHECK CALLER=G1 {param|join(" ")}
// {% endif %}
// _Mag_Probe_Debug msg="G1 - exiting"
// printer.configfile.settings.heater_bed.control : pid
// printer.configfile.settings.heater_bed.pid_kp : 13.211
// printer.configfile.settings.heater_bed.pullup_resistor : 4700.0
// printer.configfile.settings.heater_bed.sensor_pin : PF3
// printer.configfile.settings.heater_bed.pid_kd : 340.046
// printer.configfile.settings.heater_bed.heater_pin : PA1
// printer.configfile.settings.heater_bed.min_extrude_temp : 170.0
// printer.configfile.settings.heater_bed.sensor_type : keenovo
// printer.configfile.settings.heater_bed.inline_resistor : 0.0
// printer.configfile.settings.heater_bed.smooth_time : 1.0
// printer.configfile.settings.heater_bed.pwm_cycle_time : 0.0166
// printer.configfile.settings.heater_bed.pid_ki : 0.339
// printer.configfile.settings.heater_bed.min_temp : 0.0
// printer.configfile.settings.heater_bed.max_temp : 120.0
// printer.configfile.settings.heater_bed.max_power : 0.6
// printer.configfile.settings['gcode_macro dump_dictionary'].gcode :
// {% set stop_gcode = params.GCODE|default(-1)|int %}
// {% set stop_configfile = params.STOP_CFG|default(-1)|int %}
// {% set stop_bed_mesh = params.STOP_MESH|default(-1)|int %}
// {% set only_rename_existing = params.RENAME|default(0)|int %}
// {% set only_gcode_macros_description = params.DESC|default(0)|int %}
// {% set retain_case_of_gcode_name = params.RETAIN_CASE|default(0)|int %}
// {% set error_message = True if (((only_rename_existing == 1 ) and (stop_configfile == 0 ) ) or (only_gcode_macros_description == 1 and stop_configfile == 0 )) else False %}
// {% if error_message %}
// {% if (only_rename_existing == 1 ) and (stop_configfile == 0 ) %}
// { action_respond_info("The following params where specified:\nSTOP_CFG = %d\nRENAME = %d" % (stop_configfile,only_rename_existing)) }
// { action_respond_info("This combination of parameters will not produce a result because printer.configfile has been totally removed from the search!\nPlease change the STOP_CFG parameter to a 1 or 2 ") }
// {% elif only_gcode_macros_description == 1 and stop_configfile == 0 %}
// { action_respond_info("The following params where specified:\nSTOP_CFG = %d\nDESC = %d" % (stop_configfile,only_gcode_macros_description)) }
// { action_respond_info("This combination of parameters will not produce a result because printer.configfile has been totally removed from the search!\nPlease change the STOP_CFG parameter to a 1 or 2 ") }
// {%endif %}
// {% endif %}
// {% set ns = namespace(rename_existing=0, flag=0, gcode_description=0, homing_override=0,
// idle_timeout=0, GCflag_homing_override=0, GCflag_idle_timeout=0, homing_override_axes='', stored_commands=['','']) %}
// {% if not error_message %}
// {% set flag = 0 %}
// {% for item in printer|sort  %}
// {% if item|lower == 'configfile' and stop_configfile == 0 %}
// {% elif (item|lower != 'configfile' and only_rename_existing == 1 ) or
// (item|lower != 'configfile' and only_gcode_macros_description == 1 ) %}
// {% else %}
// {% if (item|lower == 'configfile' and only_rename_existing == 1 ) or
// ( item|lower == 'configfile' and only_gcode_macros_description == 1 ) %}
// {% set ns.path = ['',''] %}
// {% if flag != 0 %}
// {% set ns.flag = 1 %}
// { action_respond_info(ns.path|join) }
// {% else %}
// {% set flag = 1 %}
// {% endif %}
// {% else %}
// {% if ' ' in item %}
// {% set ns.path = ['printer', "['%s']" % (item), ''] %}
// {% else %}
// {% set ns.path = ['printer.', item, ''] %}
// {% endif %}
// {% set ns.flag = 1 %}
// { action_respond_info(ns.path|join) }
// {% endif %}
// {% if printer[item].items()|sort %}
// {% if only_gcode_macros_description == 1 %}
// {% for childkey, child in printer[item].items() recursive %}
// {% set ns.path = ns.path[:loop.depth|int + 1] %}
// {%if only_gcode_macros_description == 1 %}
// {% if childkey in ['config','settings'] %}
// {% set null = ns.path.append("") %}
// {% else %}
// {% if retain_case_of_gcode_name == 1 %}
// {% if ' ' in childkey %}
// {% set null = ns.path.append("['%s']" % (childkey)) %}
// {% else %}
// {% set null = ns.path.append(".%s" % (childkey)) %}
// {% endif %}
// {% else %}
// {% if ' ' in childkey %}
// {% set null = ns.path.append("['%s']" % (childkey|lower)) %}
// {% else %}
// {% set null = ns.path.append(".%s" % (childkey|lower)) %}
// {% endif %}
// {% endif %}
// {% endif %}
// {% endif %}
// {% if child is mapping and (childkey|string != 'config' or stop_configfile != 1) and
// ( childkey|string != 'settings' or stop_configfile != 2 ) %}
// { loop(child.items()) }
// {% else %}
// {% if ((childkey|string == 'config') and (stop_configfile == 1 )) %}
// {% if not only_gcode_macros_description %}
// {% set ns.flag = 1 %}
// { action_respond_info("%s:" % (ns.path|join)) }
// {% endif %}
// {% elif ((childkey|string == 'settings') and (stop_configfile == 2 )) %}
// {% if not only_gcode_macros_description %}
// {% set ns.flag = 1 %}
// { action_respond_info("%s:" % (ns.path|join)) }
// {% endif %}
// {% elif ((childkey|string == 'description') and (only_gcode_macros_description == 1 )) %}
// {% set ns.gcode_description = ns.gcode_description + 1 %}
// {% set name_length = (ns.path|join|length) %}
// {% set full_path = ns.path|join %}
// {% set ns.flag = 1 %}
// { action_respond_info("%s : %s" % ( full_path, child)) }
// {% elif ((childkey|string == 'gcode') and (stop_gcode == 0 ) and not(only_gcode_macros_description)) %}
// {% set ns.flag = 1 %}
// { action_respond_info("%s:" % (ns.path|join)) }
// {% else %}
// {% if only_gcode_macros_description == 1 %}
// {% else %}
// {% set ns.flag = 1 %}
// { action_respond_info("%s : %s" % (ns.path|join, child)) }
// {% endif %}
// {% endif %}
// {% endif %}
// {% endfor %}
// {% else %}
// {% for childkey, child in printer[item].items() recursive %}
// {% set ns.path = ns.path[:loop.depth|int + 1] %}
// {% if only_rename_existing == 1 %}
// {% if childkey in ['config','settings'] %}
// {% set null = ns.path.append("") %}
// {% else %}
// {% if ' ' in childkey %}
// {% set null = ns.path.append("['%s']" % (childkey)) %}
// {% else %}
// {% set null = ns.path.append(".%s" % (childkey)) %}
// {% endif %}
// {% endif %}
// {% if ((childkey|string == 'homing_override') ) %}
// {% set child_homing_override_string = child|string %}
// {% if "{'gcode': " in child_homing_override_string %}
// {% set ns.homing_override = ns.homing_override + 1 %}
// {% set null = ns.path.append("%s" % (childkey)) %}
// {% set ns.GCflag_homing_override = 1 %}
// {% endif %}
// {% elif ((childkey|string == 'idle_timeout') ) %}
// {% set child_idle_timeout_string = child|string %}
// {% if "{'gcode': " in child_idle_timeout_string %}
// {% set ns.idle_timeout = ns.idle_timeout + 1 %}
// {% set null = ns.path.append("%s" % (childkey)) %}
// {% set ns.GCflag_idle_timeout = 1 %}
// {% endif %}
// {% endif %}
// {% else %}
// {% if ' ' in childkey %}
// {% set null = ns.path.append("['%s']" % (childkey)) %}
// {% else %}
// {% set null = ns.path.append(".%s" % (childkey)) %}
// {% endif %}
// {% endif %}
// {% if child is mapping and (childkey|string != 'config' or stop_configfile != 1 )
// and ( childkey|string != 'settings' or stop_configfile != 2 ) %}
// { loop(child.items()) }
// {% else %}
// {% if ((childkey|string == 'mesh_matrix' or childkey|string == 'probed_matrix')
// and (stop_bed_mesh == 0 or stop_bed_mesh == 1 )) %}
// {% set ns.flag = 1 %}
// { action_respond_info("%s:" % (ns.path|join)) }
// {% elif ((childkey|string == 'points') and (stop_bed_mesh == 1 )) %}
// {% set ns.flag = 1 %}
// { action_respond_info("%s:" % (ns.path|join)) }
// {% elif ((childkey|string == 'config') and (stop_configfile == 1 )) %}
// {% if only_rename_existing != 1 %}
// {% set ns.flag = 1 %}
// { action_respond_info("%s:" % (ns.path|join)) }
// {% endif %}
// {% elif ((childkey|string == 'settings') and (stop_configfile == 2 )) %}
// {% if only_rename_existing != 1 %}
// {% set ns.flag = 1 %}
// { action_respond_info("%s:" % (ns.path|join)) }
// {% endif %}
// {% elif ((childkey|string == 'axes') and (only_rename_existing == 1 )) %}
// {% set upper_child = child|upper %}
// {% set ns.homing_override_axes = ",".join(upper_child) %}
// {% elif ((childkey|string == 'rename_existing') and (only_rename_existing == 1 )) %}
// {% set ns.rename_existing = ns.rename_existing + 1 %}
// {% set name_length = (ns.path|join|length) - 18 %}
// {% set full_path = ns.path|join %}
// {% set ns.flag = 1 %}
// { action_respond_info("%s renamed existing to %s" % ( full_path[13:name_length], child)) }
// {% elif ((childkey|string == 'gcode') and (stop_gcode == 0 ) and (only_rename_existing != 1 )) %}
// { action_respond_info("%s:" % (ns.path|join)) }
// {% elif ((childkey|string == 'gcode') and (only_rename_existing == 1 ) and (ns.homing_override > 0 or ns.idle_timeout > 0 )) %}
// {% set child_gcode_string = child|string %}
// {% if child_gcode_string != '' %}
// {% if ns.GCflag_homing_override == 1 %}
// {% set name_length = (ns.path|join|length) - 6 %}
// {% set full_path = ns.path|join %}
// {% set ns.flag = 1 %}
// {% set ns.rename_existing = ns.rename_existing + 1 %}
// {% if ns.homing_override_axes == '' %}
// {% set null = ns.stored_commands.append("G28 {} is being overridden by [%s]" % (full_path[1:name_length]) ) %}
// {% else %}
// { action_respond_info("G28{%s} is being overriden by [%s]" % (ns.homing_override_axes, full_path[1:name_length])) }
// {% endif %}
// {% set ns.GCflag_homing_override = 0 %}
// {% elif ns.GCflag_idle_timeout == 1 %}
// {% set name_length = (ns.path|join|length) - 6 %}
// {% set full_path = ns.path|join %}
// {% set ns.flag = 1 %}
// {% set ns.rename_existing = ns.rename_existing + 1 %}
// { action_respond_info("A MACRO exists for [%s].gcode:%s" % (full_path[1:name_length], child)) }
// {% set ns.GCflag_idle_timeout = 0 %}
// {% endif %}
// {% else %}
// {% if ns.GCflag_homing_override == 1 %}
// {% set ns.GCflag_homing_override = 0 %}
// {% elif ns.GCflag_idle_timeout == 1 %}
// {% set ns.GCflag_idle_timeout = 0 %}
// {% endif %}
// {% endif %}
// {% elif ((childkey|string == 'idle_timeout' ) and only_rename_existing == 1 )  %}
// {% else %}
// {% if only_rename_existing == 1 %}
// {% else %}
// {% set ns.flag = 1 %}
// { action_respond_info("%s : %s" % (ns.path|join, child)) }
// {% endif %}
// {% endif %}
// {% endif %}
// {% endfor %}
// {% endif %}
// {% endif %}
// {% endif %}
// {% endfor %}
// {% endif %}
// {% if ns.flag == 0 %}
// {action_respond_info("Nothing found for \"DUMP_DICTIONARY %s\"" % rawparams)}
// {% elif ns.rename_existing > 0 %}
// {% if ns.stored_commands != "" %}
// {% set full_path = ns.stored_commands|join %}
// {% set name_length = ( full_path|length) %}
// {% set split1 = full_path[:5] %}
// {% set split2 = full_path[5:]%}
// { action_respond_info("%s" % (split1+ns.homing_override_axes+split2)) }
// {% endif %}
// {action_respond_info("")}
// {action_respond_info("DUMP_DICTIONARY found a TOTAL of %d renamed macro(s)" % ns.rename_existing)}
// {% elif ns.gcode_description > 0 %}
// {action_respond_info("")}
// {action_respond_info("DUMP_DICTIONARY found a TOTAL of %d macro description(s) " % ns.gcode_description)}
// {% endif %}
// printer.configfile.settings['gcode_macro dump_dictionary'].description : Helper: Dump all Klipper parameters located in printer object to terminal, helps find names and values of variables for use in macros
// printer.configfile.settings['gcode_macro _add_print_time'].gcode :
// _general_Debug msg="_ADD_PRINT_TIME - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set time = printer.print_stats.total_duration %}
// {% set filament = printer.print_stats.filament_used|float %}
// {% set filtertime = time if user.var.filter else 0 %}
// {% if not printer.save_variables.variables.print_stats %}
// {% set print_stats = {'time': {'total': time, 'service': time, 'filter': filtertime}, 'filament': filament}%}
// {% else %}
// {% set print_stats = printer.save_variables.variables.print_stats %}
// {% set _dummy = print_stats.time.update({'total':(print_stats.time.total + time)|int}) %}
// {% set _dummy = print_stats.time.update({'service':(print_stats.time.service + time)|int}) %}
// {% set _dummy = print_stats.time.update({'filter':(print_stats.time.filter + filtertime)|int}) %}
// {% set _dummy = print_stats.update({'filament':(print_stats.filament + filament)|float}) %}
// {% endif %}
// SAVE_VARIABLE VARIABLE=print_stats VALUE="{print_stats}"
// _general_Debug msg="_ADD_PRINT_TIME - exiting"
// printer.configfile.settings['gcode_macro _add_print_time'].description : Helper: Store print time values in variables
// printer.configfile.settings.stepper_z1.full_steps_per_rotation : 200
// printer.configfile.settings.stepper_z1.rotation_distance : 40.0
// printer.configfile.settings.stepper_z1.gear_ratio : ((80.0, 16.0),)
// printer.configfile.settings.stepper_z1.step_pin : PG4
// printer.configfile.settings.stepper_z1.microsteps : 32
// printer.configfile.settings.stepper_z1.dir_pin : !PC1
// printer.configfile.settings.stepper_z1.enable_pin : !PA0
// printer.configfile.settings['led_effect sb_logo_busy'].layers :
// breathing  3 1 top (1,0,0)
// printer.configfile.settings['led_effect sb_logo_busy'].leds :
// neopixel:sb_leds (9-16)
// printer.configfile.settings['led_effect sb_logo_busy'].autostart : False
// printer.configfile.settings['led_effect sb_logo_busy'].frame_rate : 5.0
// printer.configfile.settings['led_effect sb_logo_busy'].run_on_error : False
// printer.configfile.settings['gcode_macro status_cleaning'].gcode :
// _general_Debug msg="status_cleaning- entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set current_led_state = global.current_led_state %}
// SET_FAN_LEDS_OFF
// SET_LOGO_LEDS_OFF
// SET_NOZZLE_LEDS_OFF
// M117 off
// CHECK_PRINTER_STATE
// {% set progressbar_enabled = global.progressbar_enabled|int %}
// {% if progressbar_enabled == 0 %}
// SET_BAR_LEDS_OFF
// {% set _dummy = current_led_state.update({'bar_leds':'sb_bar_cleaning'}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=current_led_state VALUE="{current_led_state}"
// SET_BAR_LEDS_ON
// {% endif %}
// {% set _dummy = current_led_state.update({'fan_leds':'sb_fan_cleaning'}) %}
// {% set _dummy = current_led_state.update({'logo_leds':'sb_logo_cleaning'}) %}
// {% set _dummy = current_led_state.update({'nozzle_leds':'sb_nozzle_cleaning'}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=current_led_state VALUE="{current_led_state}"
// SET_FAN_LEDS_ON
// SET_LOGO_LEDS_ON
// M117 cleaning
// SET_NOZZLE_LEDS_ON
// _general_Debug msg="status_cleaning- exiting"
// printer.configfile.settings['gcode_macro status_cleaning'].description : Helper: set the Stealthburner leds to the STATUS_CLEANING LED_EFFECT
// printer.configfile.settings['gcode_macro status_printing'].gcode :
// _general_Debug msg="status_printing- entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set current_led_state = global.current_led_state %}
// SET_FAN_LEDS_OFF
// SET_LOGO_LEDS_OFF
// SET_NOZZLE_LEDS_OFF
// M117 off
// CHECK_PRINTER_STATE
// {% set progressbar_enabled = global.progressbar_enabled|int %}
// {% if progressbar_enabled == 0 %}
// SET_BAR_LEDS_OFF
// {% set _dummy = current_led_state.update({'bar_leds':'sb_bar_printing'}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=current_led_state VALUE="{current_led_state}"
// SET_BAR_LEDS_ON
// {% endif %}
// {% set _dummy = current_led_state.update({'fan_leds':'sb_fan_printing'}) %}
// {% set _dummy = current_led_state.update({'logo_leds':'sb_logo_printing'}) %}
// {% set _dummy = current_led_state.update({'nozzle_leds':'sb_nozzle_printing'}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=current_led_state VALUE="{current_led_state}"
// SET_FAN_LEDS_ON
// SET_LOGO_LEDS_ON
// M117 printing
// SET_NOZZLE_LEDS_ON
// _general_Debug msg="status_printing- exiting"
// printer.configfile.settings['gcode_macro status_printing'].description : Helper: set the Stealthburner leds to the STATUS_PRINTING LED_EFFECT
// printer.configfile.settings['gcode_macro _power_on_ir_psu'].gcode :
// _general_Debug msg="_POWER_ON_IR_PSU - entering"
// {action_call_remote_method("set_device_power",
// device="tasmota_plug_IR",
// state="on")}
// _general_Debug msg="_POWER_ON_IR_PSU - exiting"
// printer.configfile.settings['gcode_macro _power_on_ir_psu'].description : Helper: Turn on the Tasmota IR_PSU smart plug
// printer.configfile.settings['gcode_macro status_heating'].gcode :
// _general_Debug msg="status_heating- entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set current_led_state = global.current_led_state %}
// SET_FAN_LEDS_OFF
// SET_LOGO_LEDS_OFF
// SET_NOZZLE_LEDS_OFF
// M117 off
// CHECK_PRINTER_STATE
// {% set progressbar_enabled = global.progressbar_enabled|int %}
// {% if progressbar_enabled == 0 %}
// SET_BAR_LEDS_OFF
// {% set _dummy = current_led_state.update({'bar_leds':'sb_bar_heating'}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=current_led_state VALUE="{current_led_state}"
// SET_BAR_LEDS_ON
// {% endif %}
// {% set _dummy = current_led_state.update({'fan_leds':'sb_fan_heating'}) %}
// {% set _dummy = current_led_state.update({'logo_leds':'sb_logo_heating'}) %}
// {% set _dummy = current_led_state.update({'nozzle_leds':'sb_nozzle_heating'}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=current_led_state VALUE="{current_led_state}"
// SET_FAN_LEDS_ON
// SET_LOGO_LEDS_ON
// M117 heating
// SET_NOZZLE_LEDS_ON
// _general_Debug msg="status_heating- exiting"
// printer.configfile.settings['gcode_macro status_heating'].description : Helper: set the Stealthburner leds to the STATUS_HEATING LED_EFFECT
// printer.configfile.settings['gcode_macro _power_on_rgb_psu'].gcode :
// _general_Debug msg="_POWER_ON_RGB_PSU - entering"
// {action_call_remote_method("set_device_power",
// device="tasmota_plug_RGB",
// state="on")}
// _general_Debug msg="_POWER_ON_RGB_PSU - exiting"
// printer.configfile.settings['gcode_macro _power_on_rgb_psu'].description : Helper: Turn on the Tasmota RGB_PSU smart plug
// printer.configfile.settings['gcode_macro _restore_filament_sensor'].gcode :
// _general_Debug msg="_RESTORE_FILAMENT_SENSOR - entering"
// {% if printer.save_variables.variables.filament_sensor is defined %}
// {% for sensor in printer.save_variables.variables.filament_sensor %}
// SET_FILAMENT_SENSOR_BASE SENSOR={sensor} ENABLE={printer.save_variables.variables.filament_sensor[sensor]}
// {% endfor %}
// {% endif %}
// _general_Debug msg="_RESTORE_FILAMENT_SENSOR - exiting"
// printer.configfile.settings['gcode_macro _restore_filament_sensor'].description : Helper: Restore the filament sensor on/off state at klipper start
// printer.configfile.settings['led_effect set_fan_leds_rainbow'].layers :
// gradient 0.3 1 top (1.0,0.0,0.0),(0.0,0.0,1.0),(1.0,0.84,0.0)
// printer.configfile.settings['led_effect set_fan_leds_rainbow'].leds :
// neopixel:sb_leds (1,2,3,4,5,6,7,8)
// printer.configfile.settings['led_effect set_fan_leds_rainbow'].frame_rate : 5.0
// printer.configfile.settings['led_effect set_fan_leds_rainbow'].run_on_error : False
// printer.configfile.settings['led_effect set_fan_leds_rainbow'].autostart : False
// printer.configfile.settings['gcode_macro _caselight_off'].gcode :
// _general_Debug msg="_CASELIGHT_OFF - entering"
// SET_PIN PIN=caselight VALUE=0
// _general_Debug msg="_CASELIGHT_OFF - exiting"
// printer.configfile.settings['gcode_macro _caselight_off'].description : Helper: Turn OFF the 24V white CASE Lights
// printer.configfile.settings['gcode_macro test_lights_rgb'].gcode :
// _general_Debug msg="TEST_LIGHTS_RGB - entering"
// {% set TRANSMITALL = params.TRANSMITALL|default(0)|int %}
// {% set CHAIN_COUNT = params.COUNT|default(92)|int %}
// {% set STRIP = params.STRIP|default("Chamber_Lights")|string %}
// {% for led in range(CHAIN_COUNT) %}
// {% if led == CHAIN_COUNT-1 or led == 0 %}
// SET_WLED STRIP={STRIP} RED=1 GREEN=1 BLUE=1 WHITE=1 INDEX={led+1} TRANSMIT=1
// {% elif led % 3 == 2 %}
// SET_WLED STRIP={STRIP} RED=0 GREEN=0 BLUE=1 INDEX={led+1} TRANSMIT={TRANSMITALL}
// {% elif led % 3 == 1 %}
// SET_WLED STRIP={STRIP} RED=0 GREEN=1 BLUE=0 INDEX={led+1} TRANSMIT={TRANSMITALL}
// {% else %}
// SET_WLED STRIP={STRIP} RED=1 GREEN=0 BLUE=0 INDEX={led+1} TRANSMIT={TRANSMITALL}
// {% endif %}
// {% endfor %}
// _general_Debug msg="TEST_LIGHTS_RGB - exiting"
// printer.configfile.settings['gcode_macro test_lights_rgb'].description : Helper: Ensure full data range is sent correctly to the WLED Strips
// printer.configfile.settings['delayed_gcode _start_print_wait'].gcode :
// _general_Debug msg="_START_PRINT_WAIT - entering"
// {% macro print_time(text, time) %} ; print remaining time
// M117 {'%s' % text} {(time|int // 60)}:{'%02d' % (time|int % 60)}
// {% if time|int % 2 == 0 %}
// SET_LED LED=sb_leds INDEX=17 RED=.5 GREEN=0 BLUE=0
// SET_LED LED=sb_leds INDEX=18 RED=0 GREEN=0 BLUE=.5
// {% else %}
// SET_LED LED=sb_leds INDEX=17 RED=0 GREEN=0 BLUE=.5
// SET_LED LED=sb_leds INDEX=18 RED=.5 GREEN=0 BLUE=0
// {% endif %}
// {% endmacro %}
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// STATUS_BUSY
// SET_NOZZLE_LEDS_OFF
// {% if global.state == 'HeatSoak'%}
// { print_time("HEAT SOAK", user.var.time.soak) }
// {% elif global.state == 'ChamberSoak' %}
// { print_time("SOAK", user.var.time.soak_extra) }
// {% endif %}
// {% if global.execute|lower == 'false' %}
// PRINT_START  ; Junp back to PRINT_START
// {% else %} ; break loop and insure state is correct for the next print start
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=execute VALUE=False
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=state VALUE='"Prepare"'
// {% if user.hw.display.ena %} UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=1 {% endif %}
// {% endif %}
// _general_Debug msg="_START_PRINT_WAIT - exiting"
// printer.configfile.settings['delayed_gcode _start_print_wait'].initial_duration : 0.0
// printer.configfile.settings['gcode_macro _filter_info'].gcode :
// _general_Debug msg="_FILTER_INFO - entering"
// {action_respond_info("Filter fan %s" % 'on' if printer['fan_generic filter'].speed|float > 0.0 else 'off')}
// _general_Debug msg="_FILTER_INFO - exiting"
// printer.configfile.settings['gcode_macro _filter_info'].description : Helper: Print Nevermore speed
// printer.configfile.settings['neopixel progress_bar_leds'].initial_white : 0.0
// printer.configfile.settings['neopixel progress_bar_leds'].pin : PB0
// printer.configfile.settings['neopixel progress_bar_leds'].chain_count : 33
// printer.configfile.settings['neopixel progress_bar_leds'].initial_red : 0.0
// printer.configfile.settings['neopixel progress_bar_leds'].initial_green : 0.0
// printer.configfile.settings['neopixel progress_bar_leds'].initial_blue : 1.0
// printer.configfile.settings['neopixel progress_bar_leds'].color_order : ('RGB',)
// printer.configfile.settings['gcode_macro print_start'].gcode :
// _general_Debug msg="PRINT_START - entering"
// {% set global      = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set user        = printer['gcode_macro _USER_VARIABLE'] %}
// {% set MeshToApply = user.filament.profile.MeshToApply|default() %}
// {% set var         = user.var %}
// {% set actBed = printer['temperature_sensor bed'].temperature|float|round(1) if 'temperature_sensor bed' in printer
// else printer.heater_bed.temperature|float|round(1) %} ; get actual temp from extra sensor or heater sensor
// {% if global.state == 'Prepare' %}
// {% set defaultTN = user.filament.profile.defaultTempNozzle|float %}
// {% set defaultWN = user.filament.profile.defaultWarmNozzle|float %}
// {% set defaultRN = user.filament.profile.defaultReadyNozzle|float %}
// {% set defaultSOAK = user.filament.profile.PrePrintSoakMinutes|float %}
// {% set defaultENCLOSURE = user.filament.profile.defaultEnclosure|float %}
// {% set purgeRetract = user.filament.profile.purgeRetract|float %}
// {% set defaultTB = user.filament.profile.defaultTempBed|float %}
// {% set var = {'temp': {'extruder': params.EXTRUDER_TEMP|default(defaultTN)|float|round(1),
// 'bed'     : params.BED_TEMP|default(defaultTB)|float|round(1),
// 'chamber' : params.CHAMBER_TEMP|default(defaultENCLOSURE)|float|round(1),
// 'endstop' : 0.0},
// 'delta': {'chamber': params.DELTA_C|default(defaultTN-defaultRN)|float|round(1),
// 'bed'    : params.DELTA_B|default(5)|float|round(1)},
// 'time' : {'soak'      : params.SOAK|default(defaultSOAK)|int,
// 'soak_extra': params.CHAMBER_SOAK|default(15)|int * 60 if params.EXTRA_SOAK|default('true') == 'true' and
// user.hw.chamber.ena
// else 0},
// 'redo_qgl'    : True if user.filament.profile.QGLbeforeSoakPrint == True
// else False,
// 'prime_height': params.LAYER_HEIGHT|float * user.print_start.prime_mult|float if LAYER_HEIGHT in params
// else user.prime.pos.z|float,
// 'z_adjust'    : params.Z_ADJUST|default(0.0)|float,
// 'filter'      : False if params.FILTER|default(1)|int == 0 else True} %}
// SET_NOZZLE_LEDS_OFF
// SET_LED LED=sb_leds INDEX=17 RED=.2 GREEN=.2 BLUE=1
// SET_LED LED=sb_leds INDEX=18 RED=.2 GREEN=.2 BLUE=1
// M118 gCode file passed the following to PRINT_START:
// M118 { rawparams }
// {% if user.hw.relay.ena %} _HEATER_ON {% endif %}
// {% if user.hw.caselight.ena %} _CASELIGHT_ON {% endif %}             ; switch on light
// {% if user.hw.display.ena %} _LCD_KNOB COLOR=RED BLINK=1 {% endif %}
// {% if user.hw.chamber.fan %} M141 S0  {% endif %}                    ; exhaust fan off
// {% if user.hw.filter.ena and var.filter %} _FILTER_ON {% endif %}    ; activate filter
// _CG28                                                                ; home if needed
// G90                                                                  ; absolute position
// G0 Z{user.park.bed.z} F{user.speed.z_hop}                            ; move nozzle to z high first
// G0 X{user.park.bed.x} Y{user.park.bed.y} F{user.speed.travel}        ; home to get toolhead in the middle
// ENABLEFILAMENTSENSOR
// PAUSE_BASE
// SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=var VALUE="{var}"
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=execute VALUE=False
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=state VALUE='"HeatBed"'
// UPDATE_DELAYED_GCODE ID=_START_PRINT_WAIT DURATION=0.5
// {% elif global.state == 'HeatBed' %}
// STATUS_HEATING
// SET_NOZZLE_LEDS_OFF
// SET_LED LED=sb_leds INDEX=18 RED=1 GREEN=0 BLUE=0
// SET_LED LED=sb_leds INDEX=17 RED=.5 GREEN=.5 BLUE=.5
// {% set cfg_bed_max = printer.configfile.settings.heater_bed.max_temp|float|round(1) - 5.0 %}
// {% set targetBed = var.temp.bed - var.delta.bed %}
// {% set soakBed = [(var.temp.bed + user.print_start.bed_up), cfg_bed_max]|min %}
// {% if (var.time.soak <= 0) or (actBed >= targetBed) %}  ; check if soak time is 0 or if the bed is still hot
// M117 Heating Extruder
// {% set text = 'heat soak disabled' if var.time.soak <= 0 else 'heat soak not needed' %}
// _PRINT_AR T="{"Bed temp: act %3.1fC min %3.1fC (target(%3.1fC) - delta(%2.1fC)) %s" %
// (actBed,targetBed,var.temp.bed,var.delta.bed,text)}"
// {% set _dummy = var.update({'redo_qgl' : False}) %}
// M140 S{var.temp.bed}      ; heat bed
// M109 S{var.temp.extruder} ; heat extruder and wait
// M190 S{var.temp.bed}      ; heat bed and wait
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=state VALUE='"Chamber"'
// UPDATE_DELAYED_GCODE ID=_START_PRINT_WAIT DURATION=0.5
// {% else %}
// M117 Heating Bed
// _PRINT_AR T="{"Bed temp: act %3.1fC min %3.1fC (target(%3.1fC) - delta(%2.1fC)) heat soak needed" %
// (actBed,targetBed,var.temp.bed,var.delta.bed)}"
// _PRINT_AR T="{"Set Bed temp to %3.1fC instead of %3.1fC for faster heat soak" % (soakBed,var.temp.bed)}"
// M106 S90              ; switch part cooling ~35% to move air in chamber
// M140 S{soakBed}       ; heat bed
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=state VALUE='"HeatSoak"'
// {% set next_duration = user.print_start.ival if var.time.soak > user.print_start.ival else var.time.soak %}
// {% set _dummy = var.time.update({'soak': var.time.soak - user.print_start.ival}) if var.time.soak > user.print_start.ival
// else var.time.update({'soak': 0}) %}
// UPDATE_DELAYED_GCODE ID=_START_PRINT_WAIT DURATION={next_duration}
// {% endif%}
// SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=var VALUE="{var}"
// _RUNOUT_INFO
// {% elif global.state == 'HeatSoak' %}
// STATUS_HEATING
// SET_NOZZLE_LEDS_OFF
// SET_LED LED=sb_leds INDEX=18 RED=1 GREEN=0 BLUE=0
// SET_LED LED=sb_leds INDEX=17 RED=.5 GREEN=.5 BLUE=.5
// {% if user.hw.runout.sensor %}
// {% if printer["filament_" + user.hw.runout.type + "_sensor runout"].enabled|lower == 'true' %}
// {% set filament_detected = printer["filament_" + user.hw.runout.type + "_sensor runout"].filament_detected %}
// {% elif 'filament_loaded' in printer.save_variables.variables %}
// {% set filament_detected = printer.save_variables.variables.filament_loaded %}
// {% else %}
// {% set filament_detected = True %}
// {% endif %}
// {% elif user.hw.runout.type == 'file' %}
// {% set filament_detected = printer.save_variables.variables.filament_loaded %}
// {% else %}
// {% set filament_detected = True %}
// {% endif %}
// {% if filament_detected %}
// {% if var.time.soak <= (user.print_start.time.extruder + var.temp.extruder - 240) and
// var.temp.extruder != printer.extruder.target %} ; check time to start heating extruder
// M104 S{var.temp.extruder} ; heat extruder
// {% endif %}
// {% if var.time.soak <= user.print_start.time.bed and var.temp.bed != printer.heater_bed.target|int %}  ; check time to reduce bed temp
// M140 S{var.temp.bed} ; heat bed
// {% endif %}
// {% if var.time.soak > 0 %} ; check remaining time
// {% set next_duration = var.time.soak if user.print_start.ival >= var.time.soak else user.print_start.ival %}
// {% set _dummy = var.time.update({'soak': 0}) if user.print_start.ival >= var.time.soak
// else var.time.update({'soak': var.time.soak - user.print_start.ival}) %}}
// UPDATE_DELAYED_GCODE ID=_START_PRINT_WAIT DURATION={next_duration}
// {% else %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=state VALUE='"Chamber"'
// UPDATE_DELAYED_GCODE ID=_START_PRINT_WAIT DURATION=0.5
// _PRINT_AR T="{"Bed act temp=%3.1fC heat soak done" % (actBed)}"
// {% endif%}
// SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=var VALUE="{var}"
// {% else %}
// _PRINT_AR T="No Filament loaded, print aborded!"
// CANCEL_PRINT PARK=1 ERROR=1
// {% endif %}
// {% elif global.state == 'Chamber' %}
// STATUS_HEATING
// SET_NOZZLE_LEDS_OFF
// SET_LED LED=sb_leds INDEX=18 RED=1 GREEN=0 BLUE=0
// SET_LED LED=sb_leds INDEX=17 RED=.5 GREEN=.5 BLUE=.5
// {% set targetChamber = var.temp.chamber - var.delta.chamber %}
// {% set actChamber = printer["temperature_" + user.hw.chamber.type + " chamber"].temperature|round(1) if user.hw.chamber.ena
// else 0 %}
// {% if var.time.soak_extra > 0 and actChamber < targetChamber %}
// _PRINT_AR T="{"Chamber temp: act %2.1fC min %2.1fC (target(%2.1fC) - delta(%2.1fC)) extra heat soak needed" %
// (actChamber,targetChamber,var.temp.chamber,var.delta.chamber)}"
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=state VALUE='"ChamberSoak"'
// UPDATE_DELAYED_GCODE ID=_START_PRINT_WAIT DURATION=0.5
// {% else %}
// {% set text = 'extra heat soak disabled' if var.time.soak_extra <= 0 else 'extra heat soak not needed' %}
// _PRINT_AR T="{"Chamber temp: act %2.1fC min %2.1fC (target(%2.1fC) - delta(%2.1fC)) %s" %
// (actChamber,targetChamber,var.temp.chamber,var.delta.chamber,text)}"
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=state VALUE='"Final"'
// UPDATE_DELAYED_GCODE ID=_START_PRINT_WAIT DURATION=0.5
// {% endif %}
// {% elif global.state == 'ChamberSoak' %}
// {% set targetChamber = var.temp.chamber - var.delta.chamber %}
// {% set actChamber = printer["temperature_" + user.hw.chamber.type + " chamber"].temperature|round(1) if user.hw.chamber.ena
// else 0 %}
// {% if var.time.soak_extra > 0 and actChamber < targetChamber %} ; check remaining time and temp difference
// {% set next_duration = var.time.soak_extra if user.print_start.ival >= var.time.soak_extra else user.print_start.ival %}
// {% set _dummy = var.time.update({'soak_extra': 0}) if user.print_start.ival >= var.time.soak_extra
// else var.time.update({'soak_extra': var.time.soak_extra - user.print_start.ival}) %}}
// UPDATE_DELAYED_GCODE ID=_START_PRINT_WAIT DURATION={next_duration}
// {% else %}
// {% set text = 'extra heat soak timed out' if var.time.soak_extra == 0 else 'chamber temp reached' %}
// _PRINT_AR T="{"Chamber temp: act %2.1fC min %2.1fC (target(%2.1fC) - delta(%2.1fC)) %s" %
// (actChamber,targetChamber,var.temp.chamber,var.delta.chamber,text)}"
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=state VALUE='"Final"'
// UPDATE_DELAYED_GCODE ID=_START_PRINT_WAIT DURATION=0.5
// {% endif %}
// SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=var VALUE="{var}"
// {% elif global.state == 'Final' %}
// RESUME_BASE
// SET_NOZZLE_LEDS_OFF
// SET_LED LED=sb_leds INDEX=17 RED=.5 GREEN=0 BLUE=.5
// SET_LED LED=sb_leds INDEX=18 RED=.5 GREEN=0 BLUE=.5
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=state VALUE='"Prepare"' ; set state for next print
// {% if user.hw.display.ena %} _LCD_KNOB COLOR=RED  {% endif %}
// M106 S0                                                               ; turn off part cooling fan
// SET_NOZZLE_LEDS_OFF
// CURRENT_HIGH
// G34                                                                   ; home & QGL
// {% if user.hw.chamber.fan %} M141 S{var.temp.chamber} {% endif %}     ; set target temp for exhaust fan
// NOZZLECLEAN
// {% set _home_z = global._home_z %}
// {% set _dummy = _home_z.update({'calibrate_z_next':user.hw.auto_z_offset.auto}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=_home_z VALUE="{_home_z}"
// G28 Z
// {% if user.hw.auto_z_offset.auto %} CALIBRATE_Z {% endif %}
// {% if user.hw.auto_z_offset.manu %} _SET_PLATE_OFFSET {% endif %}
// SET_GCODE_OFFSET Z_ADJUST={var.z_adjust} MOVE=1
// _PRINT_OFFSET
// {% if MeshToApply != "NONE" %}
// {% if MeshToApply == "INSITU" %}
// BED_MESH_CALIBRATE PRINT_MIN={params.PRINT_MIN} PRINT_MAX={params.PRINT_MAX}
// BED_MESH_PROFILE SAVE=INSITU
// {% else %}
// BED_MESH_PROFILE LOAD={MeshToApply}
// {% endif %}
// M118 Applied {MeshToApply} mesh, post sampling.
// {% endif %}
// M118 Commencing print.
// SET_NOZZLE_LEDS_OFF
// SET_LED LED=sb_leds INDEX=18 RED=.5 GREEN=.5 BLUE=.5
// SET_LED LED=sb_leds INDEX=17 RED=.5 GREEN=.5 BLUE=.5
// STATUS_PRINTING
// PRIME_LINE PRIME_HEIGHT={var.prime_height}
// {% if user.hw.endstop_temp.ena %}
// {% set _dummy = var.temp.update({'endstop': printer['temperature_se// printer.configfile.settings['gcode_macro print_start'].description : Helper: All cmds needed at print start
// printer.configfile.settings['delayed_gcode _init'].gcode :
// _general_Debug msg="_INIT - entering"
// _GLOBAL_VARS
// _USER_VARIABLE
// _CHECK_CONSITENT
// _EXECUTE_AT_INIT
// _general_Debug msg="_INIT - exiting"
// printer.configfile.settings['delayed_gcode _init'].initial_duration : 1.0
// printer.configfile.settings['gcode_macro test_probe_accuracy'].gcode :
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set tmacro = global.tmacro %}
// {% set _dummy = tmacro.update({'start_idle_minutes':params.START_IDLE_MINUTES|default(5)|int }) %}
// {% set _dummy = tmacro.update({'bed_temp':params.BED_TEMP|default(110)|int }) %}
// {% set _dummy = tmacro.update({'extruder_temp':params.EXTRUDER_TEMP|default(150)|int }) %}
// {% set _dummy = tmacro.update({'bed_soak_minutes':params.BED_SOAK_MINUTES|default(30)|int }) %}
// {% set _dummy = tmacro.update({'extruder_soak_minutes':params.EXTRUDER_SOAK_MINUTES|default(15)|int }) %}
// {% set _dummy = tmacro.update({'dwell_seconds':params.DWELL_SECONDS|default(1)|int }) %}
// {% set _dummy = tmacro.update({'dwell_lift_z':params.DWELL_LIFT_Z|default(-1)|int }) %}
// {% set _dummy = tmacro.update({'end_idle_minutes':params.END_IDLE_MINUTES|default(10)|int }) %}
// {% set _dummy = tmacro.update({'state':'start' }) %}
// {% set _dummy = tmacro.update({'next_state':'none' }) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=tmacro VALUE="{tmacro}"
// UPDATE_DELAYED_GCODE ID=probe_accuracy_loop DURATION=1
// printer.configfile.settings['gcode_macro test_probe_accuracy'].description : Helper: TEST_PROBE_ACCURACY macro; setup variables and calls probe_accuracy_loop macro
// printer.configfile.settings['gcode_macro toggle_layer_output'].gcode :
// _general_Debug msg="TOGGLE_LAYER_OUTPUT - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set respond = user.respond %}
// {% set _dummy = respond.update({'layer':1}) if respond.layer|int == 0 else respond.update({'layer':0}) %}
// SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=respond VALUE="{respond}"
// _general_Debug msg="TOGGLE_LAYER_OUTPUT - exiting"
// printer.configfile.settings['gcode_macro toggle_layer_output'].description : Helper: Enable/Disable Console output of _LAYER
// printer.configfile.settings['gcode_macro filament_unload'].gcode :
// _general_Debug msg="FILAMENT_UNLOAD - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% if printer.idle_timeout.state != "Printing" or printer.pause_resume.is_paused|lower == "true" %}
// {% if user.hw.runout.type == 'motion' %}
// _PRINT_AR T="RUNOUT Motion Sensor Enable: false"
// SET_FILAMENT_SENSOR SENSOR=runout ENABLE=0
// {% endif %}
// {% if user.hw.display.ena %} _LCD_KNOB COLOR=BLUE {% endif %}
// {% if not printer.extruder.can_extrude %}
// {action_respond_info("Extruder Temp to low heat to %3.1fC" % printer.configfile.settings.extruder.min_extrude_temp)}
// M109 S{printer.configfile.settings.extruder.min_extrude_temp}
// {% endif %}
// {% if user.hw.display.ena %} _LCD_KNOB {% endif %}
// _FILAMENT_BALL WAIT=3 ; ball up the filament tip and retract out past the extruder gears
// G1 E-{user.filament.unload_distance} F{user.speed.load}
// M109 S{printer.extruder.target} ; restore old extruder temperature
// _PRINT_AR T="Filament unloaded"
// SAVE_VARIABLE VARIABLE=filament_loaded VALUE=False
// {% if printer.gcode_move.absolute_extrude %} M82 {% endif %} ; set it back to absolute
// {% else %}
// _PRINT_AR T="Filament unloading disabled while printing!"
// {% endif %}
// _general_Debug msg="FILAMENT_UNLOAD - exiting"
// printer.configfile.settings['gcode_macro filament_unload'].description : Helper: Unload filament and disable rounout while running
// printer.configfile.settings['gcode_macro set_logo_rainbow_leds_on'].gcode :
// _general_Debug msg="SET_LOGO_RAINBOW_LEDS_ON - entering"
// SET_LED_EFFECT EFFECT=set_logo_leds_rainbow_barf
// _general_Debug msg="SET_LOGO_RAINBOW_LEDS_ON - exiting"
// printer.configfile.settings['gcode_macro set_logo_rainbow_leds_on'].description : Helper: Turn on the Stealthburner LOGO leds effect called "set_logo_leds_rainbow_barf" by using the SET_LED_EFFECT call
// printer.configfile.settings['thermistor keenovo'].resistance2 : 17550.0
// printer.configfile.settings['thermistor keenovo'].resistance3 : 5070.0
// printer.configfile.settings['thermistor keenovo'].resistance1 : 100000.0
// printer.configfile.settings['thermistor keenovo'].temperature2 : 70.0
// printer.configfile.settings['thermistor keenovo'].temperature3 : 110.0
// printer.configfile.settings['thermistor keenovo'].temperature1 : 25.0
// printer.configfile.settings['gcode_macro _power_on_rgb2'].gcode :
// _general_Debug msg="_POWER_ON_RGB2 - entering"
// {action_call_remote_method("set_device_power",
// device="tasmota_plug_RGB2",
// state="on")}
// _general_Debug msg="_POWER_ON_RGB2 - exiting"
// printer.configfile.settings['gcode_macro _power_on_rgb2'].description : Helper: Turn on the Tasmota RGB2 smart plug
// printer.configfile.settings['gcode_macro direct_move'].gcode :
// _general_Debug msg="DIRECT_MOVE - entering"
// {% set out_param = ["G0"] %}
// {% set _dummy = out_param.append("X%s" % params.X) if params.X %}
// {% set _dummy = out_param.append("Y%s" % params.Y) if params.Y %}
// {% set _dummy = out_param.append("Z%s" % params.Z) if params.Z %}
// {% set _dummy = out_param.append("E%s" % params.E) if params.E %}
// {% set _dummy = out_param.append("F%s" % params.F) if params.F %}
// {out_param|join(" ")}
// _general_Debug msg="DIRECT_MOVE - exiting"
// printer.configfile.settings['gcode_macro direct_move'].description : Helper: Move toolhead to specified position via G0 command
// printer.configfile.settings['gcode_macro set_nozzle_leds_on'].gcode :
// _general_Debug msg="SET_NOZZLE_LEDS_ON - entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set nozzle_effect = global.current_led_state.nozzle_leds %}
// SET_LED_EFFECT EFFECT={nozzle_effect}
// _general_Debug msg="SET_NOZZLE_LEDS_ON - exiting"
// printer.configfile.settings['gcode_macro set_nozzle_leds_on'].description : Helper: Turn on the stealthburner NOZZLE leds by using the SET_LED_EFFECT call
// printer.configfile.settings['gcode_macro _set_nozzle_leds'].gcode :
// _general_Debug msg="_SET_NOZZLE_LEDS - entering"
// {% set r = params.R|default(0)|float %}
// {% set g = params.G|default(0)|float %}
// {% set b = params.B|default(0)|float %}
// {% set w = params.W|default(0)|float %}
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set led = user.sb_vars.nozzle_led_name %}
// {% set idx = user.sb_vars.nozzle_idx %}
// _SET_SB_LEDS LED={led} R={r} G={g} B={b} W={w} IDX="{idx}"
// _general_Debug msg="_SET_NOZZLE_LEDS - exiting"
// printer.configfile.settings['gcode_macro _set_nozzle_leds'].description : Helper: Sets the color of the stealthburner NOZZLE leds
// printer.configfile.settings['gcode_macro wait_quit'].gcode :
// _general_Debug msg="WAIT_Quit- entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set wait_variable = global.wait_variable %}
// {% if global.wait_variable.waiting %}
// M118 STOPPING LOOP, SETTING COUNT TO 0
// {% set _dummy = wait_variable.update({'count':0.0}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=wait_variable VALUE="{wait_variable}"
// UPDATE_DELAYED_GCODE ID=WAIT_Delayed DURATION=1
// {% else %}
// M118 Not in waiting state, nothing to do.
// {% endif %}
// _general_Debug msg="WAIT_Quit- exiting"
// printer.configfile.settings['gcode_macro wait_quit'].description : Helper: this macro allows the user to externally EXIT the non-blocking wait loop before it reaches the its normal end
// printer.configfile.settings['gcode_macro resetrgb'].gcode :
// _general_Debug msg="RESETRGB - entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set current_led_state = global.current_led_state %}
// _LIGHTS_FLICKER
// SET_NOZZLE_LEDS_OFF
// {% set _dummy = current_led_state.update({'nozzle_leds':'set_nozzle_leds_white'}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=current_led_state VALUE="{current_led_state}"
// SET_NOZZLE_LEDS_ON
// _general_Debug msg="RESETRGB - exiting"
// printer.configfile.settings['gcode_macro resetrgb'].description : Helper: Default preset for RGB LEDs and printer lights, usually READY preset
// printer.configfile.settings['gcode_macro park_upperright'].gcode :
// _general_Debug msg="PARK_UpperRight - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set Z_MAX = printer.configfile.config.stepper_z.position_max|float -1 %}
// {% set X_MAX = printer.configfile.config.stepper_x.position_max|float -1 %}
// {% set Z_POS = printer.toolhead.position.z + 10 %}
// {% set defaultParkHeight = user.park.ParkHeightPercentage|float %}
// {% set ParkHeight = params.PARK_HEIGHT_PERCENT|default(defaultParkHeight)|float %}
// {% if ParkHeight < 0.2  %}
// {% set ParkHeight = 0.2 %}
// {% endif %}
// _general_entry_point function=PARK_UpperRight
// _CG28
// G0 X{X_MAX} Y20 Z{ [(Z_MAX*ParkHeight), [Z_POS, Z_MAX]|min]|max } F4000
// _general_exit_point function=PARK_UpperRight
// _general_Debug msg="PARK_UpperRight - exiting"
// printer.configfile.settings['gcode_macro park_upperright'].description : Helper: Parks the toolhead in the upper-right position
// printer.configfile.settings['gcode_macro _magprobe_status_meshing'].gcode :
// {% if printer['gcode_macro status_meshing'] is defined %}
// _Mag_Probe_Debug msg="_magprobe_status_meshing activating the LED STATUS_MESHING"
// STATUS_MESHING
// {% endif %}
// printer.configfile.settings['gcode_macro _magprobe_status_meshing'].description : Helper: Mag Probe, enable STATUS_MESHING LED state
// printer.configfile.settings['gcode_macro test_set_black'].gcode :
// _general_Debug msg="TEST_SET_BLACK - entering"
// {% set STRIP = params.STRIP|default("Chamber_Lights")|string %}
// SET_WLED STRIP={STRIP}
// _general_Debug msg="TEST_SET_BLACK - exiting"
// printer.configfile.settings['gcode_macro test_set_black'].description : Helper: Sets all leds on for a WLED strip but use the color black color
// printer.configfile.settings['temperature_fan octopus_driver_xyez_fans'].tachometer_pin : ^tinyfan:FAN3_RPM
// printer.configfile.settings['temperature_fan octopus_driver_xyez_fans'].control : watermark
// printer.configfile.settings['temperature_fan octopus_driver_xyez_fans'].cycle_time : 4e-05
// printer.configfile.settings['temperature_fan octopus_driver_xyez_fans'].kick_start_time : 0.1
// printer.configfile.settings['temperature_fan octopus_driver_xyez_fans'].pin : tinyfan: FAN3_PWM
// printer.configfile.settings['temperature_fan octopus_driver_xyez_fans'].max_delta : 0.5
// printer.configfile.settings['temperature_fan octopus_driver_xyez_fans'].tachometer_poll_interval : 0.0015
// printer.configfile.settings['temperature_fan octopus_driver_xyez_fans'].max_temp : 100.0
// printer.configfile.settings['temperature_fan octopus_driver_xyez_fans'].hardware_pwm : True
// printer.configfile.settings['temperature_fan octopus_driver_xyez_fans'].shutdown_speed : 1.0
// printer.configfile.settings['temperature_fan octopus_driver_xyez_fans'].off_below : 0.2
// printer.configfile.settings['temperature_fan octopus_driver_xyez_fans'].sensor_type : temperature_mcu
// printer.configfile.settings['temperature_fan octopus_driver_xyez_fans'].target_temp : 25.0
// printer.configfile.settings['temperature_fan octopus_driver_xyez_fans'].sensor_mcu : mcu
// printer.configfile.settings['temperature_fan octopus_driver_xyez_fans'].min_speed : 1.0
// printer.configfile.settings['temperature_fan octopus_driver_xyez_fans'].max_speed : 1.0
// printer.configfile.settings['temperature_fan octopus_driver_xyez_fans'].tachometer_ppr : 2
// printer.configfile.settings['temperature_fan octopus_driver_xyez_fans'].min_temp : 0.0
// printer.configfile.settings['temperature_fan octopus_driver_xyez_fans'].gcode_id : Octopus_Driver
// printer.configfile.settings['temperature_fan octopus_driver_xyez_fans'].max_power : 1.0
// printer.configfile.settings['gcode_macro set_bar_leds_on'].gcode :
// _general_Debug msg="sset_bar_leds_on - entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set bar_effect = global.current_led_state.bar_leds %}
// SET_LED_EFFECT EFFECT={bar_effect}
// _general_Debug msg="set_bar_leds_on - exiting"
// printer.configfile.settings['gcode_macro set_bar_leds_on'].description : Helper: Turn on the progress bar LEDs by using the SET_LED_EFFECT call
// printer.configfile.settings['output_pin reset_line_rp2040'].value : 0.0
// printer.configfile.settings['output_pin reset_line_rp2040'].shutdown_value : 0.0
// printer.configfile.settings['output_pin reset_line_rp2040'].pwm : False
// printer.configfile.settings['output_pin reset_line_rp2040'].maximum_mcu_duration : 0.0
// printer.configfile.settings['output_pin reset_line_rp2040'].pin : rpi:gpiochip0/gpio5
// printer.configfile.settings['gcode_shell_command backup_to_github'].command : sh /home/pi/git_backup.sh
// printer.configfile.settings['gcode_shell_command backup_to_github'].verbose : True
// printer.configfile.settings['gcode_shell_command backup_to_github'].timeout : 30.0
// printer.configfile.settings.homing_override.gcode :
// _Mag_Probe_Debug msg="[homing_override] - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% if user.hw.mag_probe.ena %} _MAGPROBE_STATUS_HOMING {% endif %}
// {% set home_x, home_y, home_z = False, False, False %} ; define what axes need to be homed
// {% if params.X is not defined and params.Y is not defined and params.Z is not defined %} ; G28
// {% set home_x, home_y, home_z = True, True, True %}
// {% else %}
// {% if params.X is defined %}{% set home_x = True %}{% endif %}
// {% if params.Y is defined %}{% set home_y = True %}{% endif %}
// {% if params.Z is defined %}
// {% if 'x' not in printer.toolhead.homed_axes %}{% set home_x = True %}{% endif %} ; check if homed
// {% if 'y' not in printer.toolhead.homed_axes %}{% set home_y = True %}{% endif %} ; check if homed
// {% set home_z = True %}
// {% endif %}
// {% endif %}
// {% if user.hw.mag_probe.ena %} _MAG_PROBE ACTION=GET_STATUS RESPOND=0 {% endif %} ; generate probe state
// _SET_ACC VAL=HOME                                   ; reduce accel and accel_to_decel
// G0 Z{user.homing.z_endstop.hop} F{user.speed.z_hop} ; lift nozzle
// {% if home_x %} G28 X   {% endif %}                 ; home X
// {% if home_y %} G28 Y   {% endif %}                 ; home Y
// {% if home_z %} _HOME_Z {% endif %}                 ; home Z
// _SET_ACC                                            ; set accel and accel_to_decel back to cfg value
// {% if user.hw.mag_probe.ena %} _MAGPROBE_STATUS_READY {% endif %}
// _Mag_Probe_Debug msg="[homing_override] - exiting"
// printer.configfile.settings.homing_override.set_position_z : 0.0
// printer.configfile.settings.homing_override.axes : z
// printer.configfile.settings['gcode_macro _bedfansfastplus_02'].gcode :
// _general_Debug msg="_BedFansFastPlus_02 - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set FAST02 = (user.bedfanvars.chamber_fast|float) %}
// SET_FAN_SPEED FAN=Bedfan_Left SPEED={FAST02}                                 ;set fan speed
// SET_FAN_SPEED FAN=Bedfan_Right SPEED={FAST02}                                ;set fan speed
// _general_Debug msg="_BedFansFastPlus_02 - exiting"
// printer.configfile.settings['gcode_macro _bedfansfastplus_02'].description : Helper: Runs the bed fans at a fast speed as specified by user.bedfanvars.chamber_fast
// printer.configfile.settings['gcode_macro _set_filter'].gcode :
// _general_Debug msg="_SET_FILTER - entering"
// SET_FAN_SPEED FAN=filter SPEED={params.S|default(0)}
// _general_Debug msg="_SET_FILTER - exiting"
// printer.configfile.settings['gcode_macro _set_filter'].description : Helper: Set Nevermore filter speed
// printer.configfile.settings['gcode_macro _set_acc'].gcode :
// _general_Debug msg="_SET_ACC - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set _set_acc = global._set_acc %}
// {% set val = params.VAL|default('CONFIG') %}
// {% set accel = user.homing.accel  if val == 'HOME'
// else printer.configfile.settings.printer.max_accel %}
// {% set accel_to_decel = user.homing.accel|int / 2 if val == 'HOME'
// else printer.configfile.settings.printer.max_accel_to_decel %}
// {% if val != _set_acc.last_val %}
// {% set _dummy = _set_acc.update({'last_val': val }) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=_set_acc VALUE="{_set_acc}"
// {% if params.RESPOND|default(user.respond.acc)|int == 1 %}
// {action_respond_info("Home&Probe: ACCEL: %d ACCEL_TO_DECEL: %d" % (accel|int, accel_to_decel|int))}
// {% endif %}
// SET_VELOCITY_LIMIT ACCEL={accel} ACCEL_TO_DECEL={accel_to_decel}
// {% endif %}
// _general_Debug msg="_SET_ACC - exiting"
// printer.configfile.settings['gcode_macro _set_acc'].description : Helper: Set accel and accel_to_decel value
// printer.configfile.settings['gcode_macro probe_accuracy'].gcode :
// _Mag_Probe_Debug msg="PROBE_ACCURACY - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% if user.hw.mag_probe.ena and printer.gcode_move.gcode_position.z < user.z_hop %}
// {action_respond_info("PROBE_ACCURACY: High must be above %.2f" % user.z_hop)}
// G90 ; absolute positioning
// G0 Z{user.z_hop} F{user.speed.z_hop} ; move head up
// {% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %} ; set back to relative
// {% endif %}
// {% if user.hw.mag_probe.ena == 'true' %}
// SAVE_GCODE_STATE NAME=STATE_PROBE_ACCURACY
// ATTACH_PROBE
// RESTORE_GCODE_STATE NAME=STATE_PROBE_ACCURACY MOVE=1 MOVE_SPEED={(user.speed.travel|float / 60)}
// {% endif %}
// PROBE_ACCURACY_BASE {rawparams}
// {% if user.hw.mag_probe.ena == 'true' and params.DOCK|default(1)|int == 1 %} ; use DOCK=0 to omit the probe docking
// DETACH_PROBE
// RESTORE_GCODE_STATE NAME=STATE_PROBE_ACCURACY MOVE=1 MOVE_SPEED={(user.speed.travel|float / 60)}
// {% endif %}
// _Mag_Probe_Debug msg="PROBE_ACCURACY - exiting"
// printer.configfile.settings['gcode_macro probe_accuracy'].description : Helper: Mag Probe; Probe Z-height accuracy at current XY position and dock/undock MagProbe
// printer.configfile.settings['gcode_macro probe_accuracy'].rename_existing : PROBE_ACCURACY_BASE
// printer.configfile.settings['thermistor gulfcoast-epcos-m3-hex-stud'].resistance2 : 1655.0
// printer.configfile.settings['thermistor gulfcoast-epcos-m3-hex-stud'].resistance3 : 227.8
// printer.configfile.settings['thermistor gulfcoast-epcos-m3-hex-stud'].resistance1 : 100000.0
// printer.configfile.settings['thermistor gulfcoast-epcos-m3-hex-stud'].temperature2 : 150.0
// printer.configfile.settings['thermistor gulfcoast-epcos-m3-hex-stud'].temperature3 : 250.0
// printer.configfile.settings['thermistor gulfcoast-epcos-m3-hex-stud'].temperature1 : 25.0
// printer.configfile.settings['temperature_sensor l_x-axis_frame_temp'].pullup_resistor : 4700.0
// printer.configfile.settings['temperature_sensor l_x-axis_frame_temp'].gcode_id : XFrame
// printer.configfile.settings['temperature_sensor l_x-axis_frame_temp'].sensor_type : PartsBuilt-NTC3950-Bead_airtemp
// printer.configfile.settings['temperature_sensor l_x-axis_frame_temp'].inline_resistor : 0.0
// printer.configfile.settings['temperature_sensor l_x-axis_frame_temp'].min_temp : 0.0
// printer.configfile.settings['temperature_sensor l_x-axis_frame_temp'].sensor_pin : PF4
// printer.configfile.settings['temperature_sensor l_x-axis_frame_temp'].max_temp : 120.0
// printer.configfile.settings['gcode_macro _print_ar'].gcode :
// {% if params.SHOW_LCD|default('false') == 'true' %} M117 {params.T} {% endif %}
// {action_respond_info(params.T)}
// printer.configfile.settings['gcode_macro _print_ar'].description : Helper: Action response
// printer.configfile.settings['temperature_sensor p_external_ambient_temp'].pullup_resistor : 4700.0
// printer.configfile.settings['temperature_sensor p_external_ambient_temp'].gcode_id : Extr_Air_Temp
// printer.configfile.settings['temperature_sensor p_external_ambient_temp'].sensor_type : FYSETC-HT-NTC100K-3950_airtemp
// printer.configfile.settings['temperature_sensor p_external_ambient_temp'].inline_resistor : 0.0
// printer.configfile.settings['temperature_sensor p_external_ambient_temp'].min_temp : -200.0
// printer.configfile.settings['temperature_sensor p_external_ambient_temp'].sensor_pin : tinyfan: gpio27
// printer.configfile.settings['temperature_sensor p_external_ambient_temp'].max_temp : 125.0
// printer.configfile.settings['temperature_fan fan_ebb36_th'].control : watermark
// printer.configfile.settings['temperature_fan fan_ebb36_th'].gcode_id : Fan_EBB36_TH
// printer.configfile.settings['temperature_fan fan_ebb36_th'].target_temp : 35.0
// printer.configfile.settings['temperature_fan fan_ebb36_th'].pin : EBBCan: PB9
// printer.configfile.settings['temperature_fan fan_ebb36_th'].max_delta : 0.5
// printer.configfile.settings['temperature_fan fan_ebb36_th'].hardware_pwm : False
// printer.configfile.settings['temperature_fan fan_ebb36_th'].shutdown_speed : 1.0
// printer.configfile.settings['temperature_fan fan_ebb36_th'].off_below : 0.1
// printer.configfile.settings['temperature_fan fan_ebb36_th'].sensor_type : temperature_mcu
// printer.configfile.settings['temperature_fan fan_ebb36_th'].max_speed : 1.0
// printer.configfile.settings['temperature_fan fan_ebb36_th'].sensor_mcu : EBBCan
// printer.configfile.settings['temperature_fan fan_ebb36_th'].min_speed : 1.0
// printer.configfile.settings['temperature_fan fan_ebb36_th'].kick_start_time : 1.0
// printer.configfile.settings['temperature_fan fan_ebb36_th'].min_temp : 0.0
// printer.configfile.settings['temperature_fan fan_ebb36_th'].cycle_time : 1.0
// printer.configfile.settings['temperature_fan fan_ebb36_th'].max_temp : 100.0
// printer.configfile.settings['temperature_fan fan_ebb36_th'].max_power : 1.0
// printer.configfile.settings['gcode_macro status_ready'].gcode :
// _general_Debug msg="status_ready- entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set current_led_state = global.current_led_state %}
// SET_FAN_LEDS_OFF
// SET_LOGO_LEDS_OFF
// SET_NOZZLE_LEDS_OFF
// M117 off
// CHECK_PRINTER_STATE
// {% set progressbar_enabled = global.progressbar_enabled|int %}
// {% if progressbar_enabled == 0 %}
// SET_BAR_LEDS_OFF
// {% set _dummy = current_led_state.update({'bar_leds':'set_bar_leds_rainbow'}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=current_led_state VALUE="{current_led_state}"
// SET_BAR_LEDS_ON
// {% endif %}
// {% set _dummy = current_led_state.update({'fan_leds':'set_fan_leds_rainbow'}) %}
// {% set _dummy = current_led_state.update({'logo_leds':'set_logo_leds_rainbow_barf'}) %}
// {% set _dummy = current_led_state.update({'nozzle_leds':'set_nozzle_leds_white'}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=current_led_state VALUE="{current_led_state}"
// SET_FAN_LEDS_ON
// SET_LOGO_LEDS_ON
// M117 complete
// SET_NOZZLE_LEDS_ON
// _general_Debug msg="status_ready- exiting"
// printer.configfile.settings['gcode_macro status_ready'].description : Helper: set the Stealthburner leds to the STATUS_READY LED_EFFECT
// printer.configfile.settings.bed_mesh.horizontal_move_z : 10.0
// printer.configfile.settings.bed_mesh.mesh_pps : (2, 2)
// printer.configfile.settings.bed_mesh.algorithm : bicubic
// printer.configfile.settings.bed_mesh.mesh_max : (250.5, 248.0)
// printer.configfile.settings.bed_mesh.fade_start : 1.0
// printer.configfile.settings.bed_mesh.bicubic_tension : 0.2
// printer.configfile.settings.bed_mesh.fade_end : 0.0
// printer.configfile.settings.bed_mesh.mesh_min : (50.5, 48.0)
// printer.configfile.settings.bed_mesh.split_delta_z : 0.0125
// printer.configfile.settings.bed_mesh.probe_count : (9, 9)
// printer.configfile.settings.bed_mesh.move_check_distance : 3.0
// printer.configfile.settings.bed_mesh.speed : 500.0
// printer.configfile.settings.bed_mesh.relative_reference_index : 40
// printer.configfile.settings['gcode_macro m141'].gcode :
// _general_Debug msg="M141 - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set defaultENCLOSURE = user.filament.profile.defaultEnclosure|float %}
// {% set S = params.S|default(defaultENCLOSURE)|float %}
// SET_TEMPERATURE_FAN_TARGET temperature_fan="chamber" target={S}
// M118 Chamber Temp set to {S} C
// _general_Debug msg="M141 - exiting"
// printer.configfile.settings['gcode_macro m141'].description : Helper: Set temperature of chamber fan
// printer.configfile.settings['gcode_macro m140'].rename_existing : M99140
// printer.configfile.settings['gcode_macro m140'].description : Helper: Replace M140 (Set Bed Temperature) to just be an alias of SET_HEATER_TEMPERATURE (which has associated bed fan logic if enabled)
// printer.configfile.settings['gcode_macro m140'].gcode :
// _general_Debug msg="M140 - entering"
// {% set S = params.S|float %}
// SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={S}
// _general_Debug msg="M140 - exiting"
// printer.configfile.settings['gcode_macro _power_off_esp2'].gcode :
// _general_Debug msg="_POWER_OFF_ESP2 - entering"
// {action_call_remote_method("set_device_power",
// device="tasmota_plug_ESP2",
// state="off")}
// _general_Debug msg="_POWER_OFF_ESP2 - exiting"
// printer.configfile.settings['gcode_macro _power_off_esp2'].description : Helper: Turn off the Tasmota ESP2 smart plug
// printer.configfile.settings['led_effect sb_nozzle_cleaning'].layers :
// breathing  3 1 top (0.0, 0.02, 0.5)
// printer.configfile.settings['led_effect sb_nozzle_cleaning'].leds :
// neopixel:sb_leds (17,18)
// printer.configfile.settings['led_effect sb_nozzle_cleaning'].frame_rate : 2.0
// printer.configfile.settings['led_effect sb_nozzle_cleaning'].run_on_error : False
// printer.configfile.settings['led_effect sb_nozzle_cleaning'].autostart : False
// printer.configfile.settings['gcode_macro _filament_ball'].gcode :
// _general_Debug msg="_FILAMENT_BALL - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// G92 E0   ; zero the extruder
// M83      ; relative extrusion
// G1 E2 F{user.speed.retract * 2}
// G1 E-2
// G1 E4
// G1 E-4
// G1 E8
// G1 E-8
// G1 E-25
// G4 P{params.WAIT|default(0)|int * 1000}
// _general_Debug msg="_FILAMENT_BALL - exiting"
// printer.configfile.settings['gcode_macro _filament_ball'].description : Helper: Round the filament tip
// printer.configfile.settings['led_effect sb_fan_homing'].layers :
// gradient 1.00 2.00 top (0.00,0.00,1.00),(0.00,0.00,0.00),(1.00,0.28,0.00)
// printer.configfile.settings['led_effect sb_fan_homing'].leds :
// neopixel:sb_leds (1-8)
// printer.configfile.settings['led_effect sb_fan_homing'].frame_rate : 5.0
// printer.configfile.settings['led_effect sb_fan_homing'].run_on_error : False
// printer.configfile.settings['led_effect sb_fan_homing'].autostart : False
// printer.configfile.settings['led_effect sb_bar_standby'].layers :
// gradient 0.3 3 add (1.0,0.0,0.0),(0.0,0.0,1.0),(1.0,0.84,0.0),(1.0,0.25,0.0),(0.0,0.0,0.0),(1.0,0.0,0.0),(0.0,0.0,1.0),(1.0,0.84,0.0),(1.0,0.25,0.0),(0.0,0.0,0.0)
// printer.configfile.settings['led_effect sb_bar_standby'].run_on_error : False
// printer.configfile.settings['led_effect sb_bar_standby'].leds :
// neopixel:progress_bar_leds (1-33)
// printer.configfile.settings['led_effect sb_bar_standby'].frame_rate : 5.0
// printer.configfile.settings['led_effect sb_bar_standby'].autostart : False
// printer.configfile.settings['gcode_macro status_busy'].gcode :
// _general_Debug msg="status_busy- entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set current_led_state = global.current_led_state %}
// SET_FAN_LEDS_OFF
// SET_LOGO_LEDS_OFF
// SET_NOZZLE_LEDS_OFF
// M117 off
// CHECK_PRINTER_STATE
// {% set progressbar_enabled = global.progressbar_enabled|int %}
// {% if progressbar_enabled == 0 %}
// SET_BAR_LEDS_OFF
// {% set _dummy = current_led_state.update({'bar_leds':'sb_bar_busy'}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=current_led_state VALUE="{current_led_state}"
// SET_BAR_LEDS_ON
// {% endif %}
// {% set fan_busy = 'sb_fan_busy' %}
// {% set logo_busy = 'sb_logo_busy' %}
// {% set nozzle_busy = 'sb_nozzle_busy' %}
// {% set _dummy = current_led_state.update({'fan_leds':fan_busy}) %}
// {% set _dummy = current_led_state.update({'logo_leds':logo_busy}) %}
// {% set _dummy = current_led_state.update({'nozzle_leds':nozzle_busy}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=current_led_state VALUE="{current_led_state}"
// SET_FAN_LEDS_ON
// SET_LOGO_LEDS_ON
// M117 busy
// SET_NOZZLE_LEDS_ON
// _general_Debug msg="status_busy- exiting"
// printer.configfile.settings['gcode_macro status_busy'].description : Helper: set the Stealthburner leds to the STATUS_BUSY LED_EFFECT
// printer.configfile.settings['mcu rpi'].max_stepper_error : 2.5e-05
// printer.configfile.settings['mcu rpi'].serial : /tmp/klipper_host_mcu
// printer.configfile.settings['gcode_macro probe'].rename_existing : PROBE_BASE
// printer.configfile.settings['gcode_macro probe'].description : Helper: Mag Probe; Probe Z-height at current XY position and dock/undock MagProbe
// printer.configfile.settings['gcode_macro probe'].gcode :
// _Mag_Probe_Debug msg="PROBE - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% if user.hw.mag_probe.ena == 'true' and printer.gcode_move.gcode_position.z < user.z_hop %}
// {action_respond_info("PROBE_ACCURACY: High must be above %.2f" % user.z_hop)}
// G90 ; absolute positioning
// G0 Z{user.z_hop} F{user.speed.z_hop} ; move head up
// {% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %} ; set back to relative
// {% endif %}
// {% if user.hw.mag_probe.ena == 'true' %}
// SAVE_GCODE_STATE NAME=STATE_PROBE
// ATTACH_PROBE
// RESTORE_GCODE_STATE NAME=STATE_PROBE MOVE=1 MOVE_SPEED={(user.speed.travel|float / 60)}
// {% endif %}
// PROBE_BASE {rawparams}
// G1 Z{user.z_hop} F{user.speed.z_hop} ; move head up to remove trigger
// {% if user.hw.mag_probe.ena == 'true' and params.DOCK|default(1)|int == 1 %}  ; use DOCK=0 to omit the probe docking
// DETACH_PROBE
// RESTORE_GCODE_STATE NAME=STATE_PROBE MOVE=1 MOVE_SPEED={(user.speed.travel|float / 60)}
// {% endif %}
// {% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %} ; set back to relative
// _Mag_Probe_Debug msg="PROBE - exiting"
// printer.configfile.settings['gcode_macro _general_debug'].gcode :
// {% set message  = params.MSG %}
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set debug = user.respond.debug|default(False) %}
// {% if debug %}
// { action_respond_info(message) }
// {% endif %}
// printer.configfile.settings['gcode_macro _general_debug'].description : Helper: If this call which contains a message on the name of the current routine is placed at the beginning and ending of the current routine then this can be used to determine where an error occurred (which routine the error occurred in) if _USER_VARIABLE respond.debug is set to True
// printer.configfile.settings['led_effect set_bar_leds_rainbow'].layers :
// gradient 1.60 2 top (0.00,0.00,1.00),(0.00,0.00,0.00),(1.00,0.00,0.00),(0.0,0.0,0.0),(1.00,0.25,0.00),(0.00,0.00,0.00)
// printer.configfile.settings['led_effect set_bar_leds_rainbow'].leds :
// neopixel:progress_bar_leds (1-33)
// printer.configfile.settings['led_effect set_bar_leds_rainbow'].frame_rate : 5.0
// printer.configfile.settings['led_effect set_bar_leds_rainbow'].autostart : False
// printer.configfile.settings['led_effect set_bar_leds_rainbow'].run_on_error : False
// printer.configfile.settings['gcode_shell_command plot_graph'].command : bash /home/pi/klipper_config/script/plot_graph.sh
// printer.configfile.settings['gcode_shell_command plot_graph'].verbose : True
// printer.configfile.settings['gcode_shell_command plot_graph'].timeout : 60.0
// printer.configfile.settings['gcode_macro _hotend_fan_check'].gcode :
// _general_Debug msg="_HOTEND_FAN_CHECK - entering"                                                                 ;if debug enabled display message
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set fancheckvars = global.fancheckvars %}
// {% set min_rpm = 3500|float %}
// {% set max_consecutive_stops = 3 %}
// {% set rpm = printer['heater_fan fan_hotend'].rpm|float %}
// {% set he_target = printer.extruder.target|float %}
// {% set he_temp = printer.extruder.temperature|float %}
// {% set fan_on_temp = printer.configfile.settings['heater_fan fan_hotend'].heater_temp|float %}
// {% set he_stop_count = global.fancheckvars.he_stop_count|int %}
// {% if (he_target >= fan_on_temp) and (rpm < min_rpm) and (he_temp >= fan_on_temp) %}
// {% set _dummy = fancheckvars.update({'he_stop_count':(he_stop_count + 1)}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=fancheckvars VALUE="{fancheckvars}"
// M118 WARNING: Hot End Fan stoppage detected ({he_stop_count+1}/{max_consecutive_stops}).
// M400
// {% if printer["gcode_macro _GLOBAL_VARS"].fancheckvars.he_stop_count|int >= max_consecutive_stops-1 %}
// _FAN_STOPPAGE_ROUTINE
// {% endif %}
// {% else %}
// {% set _dummy = fancheckvars.update({'he_stop_count':0}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=fancheckvars VALUE="{fancheckvars}"
// {% endif %}
// _general_Debug msg="_HOTEND_FAN_CHECK - exiting"                                                                  ;if debug enabled display message
// printer.configfile.settings['gcode_macro _hotend_fan_check'].description : Helper: Checks to see if the hotend fan has failed
// printer.configfile.settings['led_effect set_bar_leds_progress'].layers :
// static  1  0 top (0.0, 0.0, 1.0)
// printer.configfile.settings['led_effect set_bar_leds_progress'].run_on_error : False
// printer.configfile.settings['led_effect set_bar_leds_progress'].leds :
// neopixel:progress_bar_leds (1-33)
// printer.configfile.settings['led_effect set_bar_leds_progress'].frame_rate : 5.0
// printer.configfile.settings['led_effect set_bar_leds_progress'].autostart : False
// printer.configfile.settings['tmc2209 stepper_z'].driver_pwm_ofs : 36
// printer.configfile.settings['tmc2209 stepper_z'].driver_hstrt : 5
// printer.configfile.settings['tmc2209 stepper_z'].driver_toff : 3
// printer.configfile.settings['tmc2209 stepper_z'].sense_resistor : 0.11
// printer.configfile.settings['tmc2209 stepper_z'].uart_address : 0
// printer.configfile.settings['tmc2209 stepper_z'].driver_pwm_reg : 8
// printer.configfile.settings['tmc2209 stepper_z'].driver_iholddelay : 8
// printer.configfile.settings['tmc2209 stepper_z'].interpolate : False
// printer.configfile.settings['tmc2209 stepper_z'].uart_pin : PC6
// printer.configfile.settings['tmc2209 stepper_z'].hold_current : 2.0
// printer.configfile.settings['tmc2209 stepper_z'].driver_tbl : 2
// printer.configfile.settings['tmc2209 stepper_z'].driver_pwm_autograd : True
// printer.configfile.settings['tmc2209 stepper_z'].driver_pwm_grad : 14
// printer.configfile.settings['tmc2209 stepper_z'].run_current : 0.3
// printer.configfile.settings['tmc2209 stepper_z'].driver_hend : 0
// printer.configfile.settings['tmc2209 stepper_z'].stealthchop_threshold : 0.0
// printer.configfile.settings['tmc2209 stepper_z'].driver_pwm_autoscale : True
// printer.configfile.settings['tmc2209 stepper_z'].driver_tpowerdown : 20
// printer.configfile.settings['tmc2209 stepper_z'].driver_pwm_freq : 1
// printer.configfile.settings['tmc2209 stepper_z'].driver_pwm_lim : 12
// printer.configfile.settings['tmc2209 stepper_z'].driver_sgthrs : 0
// printer.configfile.settings['tmc2209 stepper_x'].driver_pwm_ofs : 36
// printer.configfile.settings['tmc2209 stepper_x'].driver_hstrt : 5
// printer.configfile.settings['tmc2209 stepper_x'].driver_toff : 3
// printer.configfile.settings['tmc2209 stepper_x'].sense_resistor : 0.11
// printer.configfile.settings['tmc2209 stepper_x'].uart_address : 0
// printer.configfile.settings['tmc2209 stepper_x'].driver_pwm_reg : 8
// printer.configfile.settings['tmc2209 stepper_x'].driver_iholddelay : 8
// printer.configfile.settings['tmc2209 stepper_x'].interpolate : False
// printer.configfile.settings['tmc2209 stepper_x'].stealthchop_threshold : 0.0
// printer.configfile.settings['tmc2209 stepper_x'].hold_current : 2.0
// printer.configfile.settings['tmc2209 stepper_x'].driver_tbl : 2
// printer.configfile.settings['tmc2209 stepper_x'].driver_pwm_autograd : True
// printer.configfile.settings['tmc2209 stepper_x'].driver_pwm_grad : 14
// printer.configfile.settings['tmc2209 stepper_x'].run_current : 0.8
// printer.configfile.settings['tmc2209 stepper_x'].driver_hend : 0
// printer.configfile.settings['tmc2209 stepper_x'].uart_pin : PC4
// printer.configfile.settings['tmc2209 stepper_x'].driver_pwm_autoscale : True
// printer.configfile.settings['tmc2209 stepper_x'].driver_tpowerdown : 20
// printer.configfile.settings['tmc2209 stepper_x'].driver_pwm_freq : 1
// printer.configfile.settings['tmc2209 stepper_x'].driver_pwm_lim : 12
// printer.configfile.settings['tmc2209 stepper_x'].driver_sgthrs : 0
// printer.configfile.settings['tmc2209 stepper_y'].driver_pwm_ofs : 36
// printer.configfile.settings['tmc2209 stepper_y'].driver_hstrt : 5
// printer.configfile.settings['tmc2209 stepper_y'].driver_toff : 3
// printer.configfile.settings['tmc2209 stepper_y'].sense_resistor : 0.11
// printer.configfile.settings['tmc2209 stepper_y'].run_current : 0.8
// printer.configfile.settings['tmc2209 stepper_y'].uart_address : 0
// printer.configfile.settings['tmc2209 stepper_y'].driver_pwm_reg : 8
// printer.configfile.settings['tmc2209 stepper_y'].driver_iholddelay : 8
// printer.configfile.settings['tmc2209 stepper_y'].interpolate : False
// printer.configfile.settings['tmc2209 stepper_y'].stealthchop_threshold : 0.0
// printer.configfile.settings['tmc2209 stepper_y'].driver_pwm_autoscale : True
// printer.configfile.settings['tmc2209 stepper_y'].driver_tbl : 2
// printer.configfile.settings['tmc2209 stepper_y'].driver_pwm_autograd : True
// printer.configfile.settings['tmc2209 stepper_y'].driver_pwm_grad : 14
// printer.configfile.settings['tmc2209 stepper_y'].driver_sgthrs : 0
// printer.configfile.settings['tmc2209 stepper_y'].driver_hend : 0
// printer.configfile.settings['tmc2209 stepper_y'].uart_pin : PD11
// printer.configfile.settings['tmc2209 stepper_y'].hold_current : 2.0
// printer.configfile.settings['tmc2209 stepper_y'].driver_tpowerdown : 20
// printer.configfile.settings['tmc2209 stepper_y'].driver_pwm_lim : 12
// printer.configfile.settings['tmc2209 stepper_y'].driver_pwm_freq : 1
// printer.configfile.settings['gcode_macro bottom_lights_off'].gcode :
// _general_Debug msg="Bottom_Lights_OFF - entering"
// WLED_OFF STRIP=Bottom_Lights
// _general_Debug msg="Bottom_Lights_OFF - exiting"
// printer.configfile.settings['gcode_macro bottom_lights_off'].description : Helper:  Turn off the WLED server that controls the Bottom lights
// printer.configfile.settings['gcode_macro pressure_advance_add'].gcode :
// _general_Debug msg="PRESSURE_ADVANCE_ADD - entering"
// {% if 'FILAMENT' not in params|upper %}
// {action_respond_info("PRESSURE ADVANCE: FILAMENT must be defined use \"PRESSURE_ADVANCE_ADD FILAMENT=id\" as a minimum")}
// {% else %}
// {% set cfg = printer.configfile.settings.extruder %}
// {% set id = params.FILAMENT|string %}
// {% set nozzle = params.NOZZLE|default(0.40)|float|round(2) %}
// {% if not printer.save_variables.variables.pressure_advance %}
// {action_respond_info("PRESSURE ADVANCE: Initialize with Filament %s" % (id))}
// {% set pa_dic = [{'id' : id,
// 'val': [{'nozzle': nozzle,
// 'pa'    : params.PRESSURE_ADVANCE|default(cfg.pressure_advance)|float|round(3),
// 'st'    : params.SMOOTH_TIME|default(cfg.pressure_advance_smooth_time)|float|round(3)}]}] %}
// {% else %}
// {% set pa_dic = printer.save_variables.variables.pressure_advance %}
// {% for filament in pa_dic %}
// {% if id == filament.id %}
// {% set id_index = loop.index0 %}
// {% for setup in filament.val %}
// {% if nozzle == setup.nozzle %}
// {% set change_txt = [] %}
// {% if 'PRESSURE_ADVANCE' in params|upper %}
// {% set _dummy = change_txt.append("PRESSURE ADVANCE") %}
// {% set _dummy = pa_dic[id_index].val[loop.index0].update({'pa': params.PRESSURE_ADVANCE|float|round(3)}) %}
// {% endif %}
// {% if 'SMOOTH_TIME' in params|upper %}
// {% set _dummy = change_txt.append("SMOOTH TIME") %}
// {% set _dummy = pa_dic[id_index].val[loop.index0].update({'st': params.SMOOTH_TIME|float|round(3)}) %}
// {% endif %}
// {% if change_txt|length > 0 %}
// {action_respond_info("PRESSURE ADVANCE: Changed %s at Filament %s Nozzle %s" % (change_txt|join(" and "),id,nozzle))}
// {% else %}
// {action_respond_info("PRESSURE ADVANCE: Nothing changed at Filament %s Nozzle %s" % (id,nozzle))}
// {% endif %}
// {% elif loop.last %}
// {action_respond_info("PRESSURE ADVANCE: Add setup for Nozzle %s at Filament %s" % (nozzle,id))}
// {% set _dummy = pa_dic[id_index].val.append({'nozzle': nozzle,
// 'pa'    : params.PRESSURE_ADVANCE|default(cfg.pressure_advance)|float|round(3),
// 'st'    : params.SMOOTH_TIME|default(cfg.pressure_advance_smooth_time)|float|round(3)}) %}
// {% endif%}
// {% endfor %}
// {% elif loop.last %}
// {action_respond_info("PRESSURE ADVANCE: Add setup for Filament %s" % (id))}
// {% set _dummy = pa_dic.append({'id' : id,
// 'val': [{'nozzle': nozzle,
// 'pa'    : params.PRESSURE_ADVANCE|default(cfg.pressure_advance)|float|round(3),
// 'st'    : params.SMOOTH_TIME|default(cfg.pressure_advance_smooth_time)|float|round(3)}]}) %}
// {% endif %}
// {% endfor %}
// {% endif %}
// SAVE_VARIABLE VARIABLE=pressure_advance VALUE="{pa_dic}"
// {% endif %}
// _general_Debug msg="PRESSURE_ADVANCE_ADD - exiting"
// printer.configfile.settings['gcode_macro pressure_advance_add'].description : Helper: Add or change pressure advance settings
// printer.configfile.settings['gcode_macro set_logo_rainbow_leds_off'].gcode :
// _general_Debug msg="SET_LOGO_RAINBOW_LEDS_OFF - entering"
// SET_LED_EFFECT EFFECT=set_logo_leds_rainbow_barf STOP=1
// _general_Debug msg="SET_LOGO_RAINBOW_LEDS_OFF - exiting"
// printer.configfile.settings['gcode_macro set_logo_rainbow_leds_off'].description : Helper: Turn off the Stealthburner LOGO leds effect called "set_logo_leds_rainbow_barf" by using the SET_LED_EFFECT call
// printer.configfile.settings['gcode_macro _fan_stoppage_routine'].gcode :
// _general_Debug msg="_FAN_STOPPAGE_ROUTINE - entering"
// M117 !!FAN BLOCKED!!
// M118 FAN STOPPAGE DETECTED. PAUSING...
// SET_LOGO_LEDS_OFF                                               ;Turn off logo LEDs
// SET_FAN_LEDS_OFF                                                ;Turn off fan LEDs
// SET_NOZZLE_LEDS_BY_NAME COLOR="OFF"                             ;Turn nozzle logo LEDs
// SET_LOGO_LEDS_BY_NAME COLOR="RED"                               ;Turn logo LEDs red
// SET_FAN_LEDS_BY_NAME COLOR="RED"                                ;Turn fan LEDs red
// SET_NOZZLE_LEDS_BY_NAME COLOR="RED"                             ;Turn nozzle LEDs red
// PAUSE                                                           ;My pause macro turns off the hotend fan.
// _general_Debug msg="_FAN_STOPPAGE_ROUTINE - exiting"
// printer.configfile.settings['gcode_macro _fan_stoppage_routine'].description : Helper: PAUSES the printer if a toolhead fan has FAILED!
// printer.configfile.settings['gcode_macro _sd_printer_stats'].gcode :
// _general_Debug msg="_SD_PRINTER_STATS - entering"
// {% set ST = printer.save_variables.variables.print_stats.time.service %}
// {% set Sh,Sm,Ss = (ST / 3600)|int, ((ST / 60) % 60)|int, (ST % 60)|int %}
// {% set TT = printer.save_variables.variables.print_stats.time.total %}
// {% set Th,Tm,Ts = (TT / 3600)|int, ((TT / 60) % 60)|int, (TT % 60)|int %}
// {% set FT = printer.save_variables.variables.print_stats.time.filter %}
// {% set Fh,Fm,Fs = (FT / 3600)|int, ((FT / 60) % 60)|int, (FT % 60)|int %}
// {% set Fil = printer.save_variables.variables.print_stats.filament|float / 1000.0 %}
// {action_respond_info("Printer Statistics:
// Total Print Time: %d:%02d:%02d
// Total Filament used: %.4fm
// Filter use time: %d:%02d:%02d
// Time since last Service: %d:%02d:%02d" %
// (Th, Tm, Ts, Fil, Fh, Fm, Fs, Sh, Sm, Ss))}
// _CHECK_FILTER
// _general_Debug msg="_SD_PRINTER_STATS - exiting"
// printer.configfile.settings['gcode_macro _sd_printer_stats'].description : Helper: Print statistic of printer
// printer.configfile.settings['gcode_macro _do_error_if_probe_not_deployed'].gcode :
// {% if printer.probe.last_query %}
// {action_raise_error("ERROR: Probe unsuccessfully deployed, please check printer.")}
// {% else %}
// M118 Euclid probe has been attached.
// {% endif %}
// printer.configfile.settings['gcode_macro _do_error_if_probe_not_deployed'].description : Helper: Display error message if probe is not attached when it is supposed to be attached
// printer.configfile.settings['gcode_macro status_part_ready'].gcode :
// _general_Debug msg="status_part_ready- entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set current_led_state = global.current_led_state %}
// SET_FAN_LEDS_OFF
// SET_LOGO_LEDS_OFF
// SET_NOZZLE_LEDS_OFF
// M117 off
// CHECK_PRINTER_STATE
// {% set progressbar_enabled = global.progressbar_enabled|int %}
// {% if progressbar_enabled == 0 %}
// SET_BAR_LEDS_OFF
// {% set _dummy = current_led_state.update({'bar_leds':'sb_bar_part_ready'}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=current_led_state VALUE="{current_led_state}"
// SET_BAR_LEDS_ON
// {% endif %}
// {% set _dummy = current_led_state.update({'fan_leds':'sb_fan_part_ready'}) %}
// {% set _dummy = current_led_state.update({'logo_leds':'sb_logo_part_ready'}) %}
// {% set _dummy = current_led_state.update({'nozzle_leds':'sb_nozzle_part_ready'}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=current_led_state VALUE="{current_led_state}"
// SET_FAN_LEDS_ON
// SET_LOGO_LEDS_ON
// M117 ready
// SET_NOZZLE_LEDS_ON
// _general_Debug msg="status_part_ready- exiting"
// printer.configfile.settings['gcode_macro status_part_ready'].description : Helper: set the Stealthburner leds to the STATUS_PART_READY LED_EFFECT
// printer.configfile.settings['gcode_macro belt_test'].gcode :
// _general_Debug msg="BELT_TEST - enter"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// _CG28                                                 ; home if needed
// TURN_OFF_HEATERS                                      ; turn off heaters
// M107                                                  ; turn off fan
// {% if user.hw.chamber.fan %} M141 {% endif %}         ; exhaust fan off
// {% if user.hw.filter.ena %} _SET_FILTER {% endif %}   ; filter off
// _PRINT_AR T="BELT TEST: Noise values, check if sensor is installed"
// MEASURE_AXES_NOISE                                    ; get noise value in log
// _PRINT_AR T="BELT TEST: Resonance Tests starting ..."
// _PRINT_AR T="BELT TEST: Mesasure B belt"
// TEST_RESONANCES AXIS=1,1 OUTPUT=raw_data NAME=b
// _PRINT_AR T="BELT TEST: Mesasure A belt"
// TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=a
// _PRINT_AR T="BELT TEST: Resonance Tests done"
// _PRINT_AR T="BELT TEST: Generate graph in backround"
// RUN_SHELL_COMMAND CMD=plot_graph PARAMS=BELT
// _general_Debug msg="BELT_TEST - exit"
// printer.configfile.settings['gcode_macro belt_test'].description : Helper: Run resonance test to analyze belts
// printer.configfile.settings['gcode_macro _power_on_esp_psu'].gcode :
// _general_Debug msg="_POWER_ON_ESP_PSU - entering"
// {action_call_remote_method("set_device_power",
// device="tasmota_plug_ESP",
// state="on")}
// _general_Debug msg="_POWER_ON_ESP_PSU - exiting"
// printer.configfile.settings['gcode_macro _power_on_esp_psu'].description : Helper: Turn on the Tasmota ESP_PSU smart plug
// printer.configfile.settings['tmc2209 extruder'].driver_pwm_ofs : 36
// printer.configfile.settings['tmc2209 extruder'].driver_hstrt : 5
// printer.configfile.settings['tmc2209 extruder'].driver_toff : 3
// printer.configfile.settings['tmc2209 extruder'].sense_resistor : 0.11
// printer.configfile.settings['tmc2209 extruder'].uart_address : 0
// printer.configfile.settings['tmc2209 extruder'].driver_pwm_reg : 8
// printer.configfile.settings['tmc2209 extruder'].driver_iholddelay : 8
// printer.configfile.settings['tmc2209 extruder'].interpolate : False
// printer.configfile.settings['tmc2209 extruder'].uart_pin : EBBCan: PA15
// printer.configfile.settings['tmc2209 extruder'].hold_current : 2.0
// printer.configfile.settings['tmc2209 extruder'].driver_tbl : 2
// printer.configfile.settings['tmc2209 extruder'].driver_pwm_autograd : True
// printer.configfile.settings['tmc2209 extruder'].driver_pwm_grad : 14
// printer.configfile.settings['tmc2209 extruder'].run_current : 0.55
// printer.configfile.settings['tmc2209 extruder'].driver_hend : 0
// printer.configfile.settings['tmc2209 extruder'].stealthchop_threshold : 0.0
// printer.configfile.settings['tmc2209 extruder'].driver_pwm_autoscale : True
// printer.configfile.settings['tmc2209 extruder'].driver_tpowerdown : 20
// printer.configfile.settings['tmc2209 extruder'].driver_pwm_freq : 1
// printer.configfile.settings['tmc2209 extruder'].driver_pwm_lim : 12
// printer.configfile.settings['tmc2209 extruder'].driver_sgthrs : 0
// printer.configfile.settings.force_move.enable_force_move : True
// printer.configfile.settings['gcode_macro _power_off_ir_psu'].gcode :
// _general_Debug msg="_POWER_OFF_IR_PSU - entering"
// {action_call_remote_method("set_device_power",
// device="tasmota_plug_IR",
// state="off")}
// _general_Debug msg="__POWER_OFF_IR_PSU - exiting"
// printer.configfile.settings['gcode_macro _power_off_ir_psu'].description : Helper: Turn off the Tasmota IR_PSU smart plug
// printer.configfile.settings['gcode_macro status_calibrating_z'].gcode :
// _general_Debug msg="status_calibrating_z- entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set current_led_state = global.current_led_state %}
// SET_FAN_LEDS_OFF
// SET_LOGO_LEDS_OFF
// SET_NOZZLE_LEDS_OFF
// M117 off
// CHECK_PRINTER_STATE
// {% set progressbar_enabled = global.progressbar_enabled|int %}
// {% if progressbar_enabled == 0 %}
// SET_BAR_LEDS_OFF
// {% set _dummy = current_led_state.update({'bar_leds':'sb_bar_calibrating_z'}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=current_led_state VALUE="{current_led_state}"
// SET_BAR_LEDS_ON
// {% endif %}
// {% set _dummy = current_led_state.update({'fan_leds':'sb_fan_calibrating_z'}) %}
// {% set _dummy = current_led_state.update({'logo_leds':'sb_logo_calibrating_z'}) %}
// {% set _dummy = current_led_state.update({'nozzle_leds':'sb_nozzle_calibrating_z'}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=current_led_state VALUE="{current_led_state}"
// SET_FAN_LEDS_ON
// SET_LOGO_LEDS_ON
// M117 calibrating_z
// SET_NOZZLE_LEDS_ON
// _general_Debug msg="status_calibrating_z- exiting"
// printer.configfile.settings['gcode_macro status_calibrating_z'].description : Helper: set the Stealthburner leds to the STATUS_CALIBRATING_Z LED_EFFECT
// printer.configfile.settings['gcode_macro _set_fan_leds'].gcode :
// _general_Debug msg="_SET_FAN_LEDS - entering"
// {% set r = params.R|default(0)|float %}
// {% set g = params.G|default(0)|float %}
// {% set b = params.B|default(0)|float %}
// {% set w = params.W|default(0)|float %}
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set led = user.sb_vars.fan_led_name %}
// {% set idx = user.sb_vars.fan_idx %}
// _SET_SB_LEDS LED={led} R={r} G={g} B={b} W={w} IDX="{idx}"
// _general_Debug msg="_SET_FAN_LEDS - exiting"
// printer.configfile.settings['gcode_macro _set_fan_leds'].description : Helper: Sets the color of the stealthburner FAN leds
// printer.configfile.settings['gcode_macro probe_calibrate'].rename_existing : PROBE_CALIBRATE_BASE
// printer.configfile.settings['gcode_macro probe_calibrate'].description : Helper: Mag Probe; Calibrate the probe's z_offset and undock MagProbe
// printer.configfile.settings['gcode_macro probe_calibrate'].gcode :
// _Mag_Probe_Debug msg="PROBE_CALIBRATE - entering"
// _MAGPROBE_STATUS_CALIBRATING_Z
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% if user.hw.mag_probe.ena == 'true' and printer.gcode_move.gcode_position.z < user.z_hop %}
// {action_respond_info("PROBE_ACCURACY: High must be above %.2f" % user.z_hop)}
// G90 ; absolute positioning
// G0 Z{user.z_hop} F{user.speed.z_hop} ; move head up
// {% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %} ; set back to relative
// {% endif %}
// {% if user.hw.mag_probe.ena == 'true' %}
// SAVE_GCODE_STATE NAME=STATE_PROBE_CALIBRATE_ATTACH
// ATTACH_PROBE
// RESTORE_GCODE_STATE NAME=STATE_PROBE_CALIBRATE_ATTACH MOVE=1 MOVE_SPEED={(user.speed.travel|float / 60)}
// {% endif %}
// {% if user.hw.mag_probe.ena == 'true' %}
// _MAGPROBE_STATUS_CALIBRATING_Z
// {% endif %}
// PROBE_CALIBRATE_BASE {rawparams}
// {% if user.hw.mag_probe.ena == 'true' %}
// _MAGPROBE_STATUS_READY
// {% endif %}
// {% if user.hw.mag_probe.ena == 'true' %}
// SAVE_GCODE_STATE NAME=STATE_PROBE_CALIBRATE_DETACH
// DETACH_PROBE
// RESTORE_GCODE_STATE NAME=STATE_PROBE_CALIBRATE_DETACH MOVE=1 MOVE_SPEED={(user.speed.travel|float / 60)}
// {% endif %}
// _Mag_Probe_Debug msg="PROBE_CALIBRATE - exiting"
// printer.configfile.settings['gcode_macro _check_filter'].gcode :
// _general_Debug msg="_CHECK_FILTER - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% if user.hw.filter.ena and
// printer.save_variables.variables.print_stats %}
// {% set Fh = (printer.save_variables.variables.print_stats.time.filter / 3600)|int %}
// {% if Fh >= user.peripheral.filter.warning %}
// M117 Change Filter!
// {action_respond_info("Change Filter material at Micro!")}
// {% if user.hw.display.ena %} UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=10 {% endif %}
// {% endif %}
// {% endif %}
// _general_Debug msg="_CHECK_FILTER - exiting"
// printer.configfile.settings['gcode_macro _check_filter'].description : Helper: Print filter exchange warning
// printer.configfile.settings['board_pins tinyfan'].mcu : ('tinyfan',)
// printer.configfile.settings['board_pins tinyfan'].aliases : (('FAN1_PWM', 'gpio0'), ('FAN1_RPM', 'gpio7'), ('FAN2_PWM', 'gpio1'), ('FAN2_RPM', 'gpio8'), ('FAN3_PWM', 'gpio2'), ('FAN3_RPM', 'gpio9'), ('FAN4_PWM', 'gpio3'), ('FAN4_RPM', 'gpio10'), ('AUX1_PWM', 'gpio4'), ('AUX1_RPM', 'gpio26'), ('AUX2_PWM', 'gpio5'), ('AUX2_RPM', 'gpio27'), ('AUX3_PWM', 'gpio6'), ('AUX3_RPM', 'gpio28'), ('G1', 'gpio29'), ('G2', 'gpio11'), ('G3', 'gpio12'), ('G4', 'gpio13'), ('G5', 'gpio14'), ('G6', 'gpio15'), ('LED', 'gpio16'))
// printer.configfile.settings['gcode_macro _toolhead_park'].gcode :
// _general_Debug msg="_TOOLHEAD_PARK - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set pos = {'x': user.park.bed.x if params.P|int == 1
// else params.X,
// 'y': user.park.bed.y if params.P|int == 1
// else params.Y,
// 'z': user.park.bed.z if params.P|int == 1
// else [(printer.toolhead.position.z + user.park.pause.dz), printer.toolhead.axis_maximum.z]|min} %}
// G90
// G0 Z{pos.z} F{user.speed.z_hop}
// G0 X{pos.x} Y{pos.y} F{user.speed.travel}
// _general_Debug msg="_TOOLHEAD_PARK - exiting"
// printer.configfile.settings['gcode_macro _toolhead_park'].description : Helper: Park toolhead used in PAUSE and CANCEL_PRINT
// printer.configfile.settings['delayed_gcode _bed_mesh_save'].gcode :
// _Mag_Probe_Debug msg="_BED_MESH_SAVE - entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% if global.bed_mesh_store.save_at_end %}
// {action_respond_info("BED_MESH: Save Config!")}
// SAVE_CONFIG
// {% endif %}
// _Mag_Probe_Debug msg="_BED_MESH_SAVE - exiting"
// printer.configfile.settings['delayed_gcode _bed_mesh_save'].initial_duration : 0.0
// printer.configfile.settings['gcode_macro change_plate_value'].gcode :
// _general_Debug msg="CHANGE_PLATE_VALUE - entering"
// {% if not printer.save_variables.variables.plates %}
// {action_respond_info("FLEXPLATE: No Plate Array defined. ABORDED")}
// {% else %}
// {% set plates = printer.save_variables.variables.plates %}
// {% set index = params.INDEX|default(plates.index)|int %}
// {% if index < 0 or index >= plates.array|length %}
// {action_respond_info("FLEXPLATE: Index out of range [0..%d]. ABORDED" % (plates.array|length-1))}
// {% else %}
// {% set change_txt = [] %}
// {% if 'NAME' in params|upper %}
// {% set _dummy = change_txt.append("name to %s" % params.NAME|string) %}
// {% set _dummy = plates.array[index].update({'name': params.NAME|string}) %}
// {% endif %}
// {% if 'OFFSET' in params|upper %}
// {% set _dummy = change_txt.append("offset to %.3fmm" % params.OFFSET|float|round(3)) %}
// {% set _dummy = plates.array[index].update({'offset': params.OFFSET|float|round(3)}) %}
// {% endif %}
// {% if change_txt|length > 0 %}
// {action_respond_info("FLEXPLATE: Changed %s at plate with INDEX %d" % (change_txt|join(" and "),index))}
// SAVE_VARIABLE VARIABLE=plates VALUE="{plates}"
// {% else %}
// {action_respond_info("FLEXPLATE: Nothing changed at plate with INDEX %d" % index)}
// {% endif %}
// {% endif %}
// {% endif %}
// _general_Debug msg="CHANGE_PLATE_VALUE - exiting"
// printer.configfile.settings['gcode_macro change_plate_value'].description : Helper: Change name or offset of an flexplate in the list
// printer.configfile.settings['gcode_macro log_info'].gcode :
// _general_Debug msg="LOG_INFO - entering"
// {action_respond_info(params.MESSAGE)}
// _general_Debug msg="LOG_INFO - exiting"
// printer.configfile.settings['gcode_macro log_info'].description : Helper: Send a message to the Klipper screen and the UI console
// printer.configfile.settings.printer.square_corner_velocity : 5.0
// printer.configfile.settings.printer.move_flush_time : 0.05
// printer.configfile.settings.printer.max_accel : 3000.0
// printer.configfile.settings.printer.buffer_time_start : 0.25
// printer.configfile.settings.printer.buffer_time_low : 1.0
// printer.configfile.settings.printer.max_z_accel : 350.0
// printer.configfile.settings.printer.max_velocity : 300.0
// printer.configfile.settings.printer.max_z_velocity : 15.0
// printer.configfile.settings.printer.kinematics : corexy
// printer.configfile.settings.printer.buffer_time_high : 2.0
// printer.configfile.settings.printer.max_accel_to_decel : 1500.0
// printer.configfile.settings['gcode_macro _execute_at_init'].gcode :
// _general_Debug msg="_EXECUTE_AT_INIT - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% if 'gcode_macro _MENU_LIMITS' is in printer %} _MENU_LIMITS INDEX=4 {% endif %}
// {% if printer.save_variables.variables.filament_sensor %} _RESTORE_FILAMENT_SENSOR {% endif %}
// {% if user.hw.filter.ena %} _CHECK_FILTER {% endif %}
// {% if user.hw.relay.ena %} _HEATER_ON {% endif %}
// {% if user.hw.display.ena %} UPDATE_DELAYED_GCODE ID=_DISPLAY_INIT DURATION=2 {% endif %}
// UPDATE_DELAYED_GCODE ID=CHECK_ALL_FANS_LOOP DURATION=1
// RESETRGB
// UPDATE_DELAYED_GCODE ID=prerun DURATION=1
// UPDATE_DELAYED_GCODE ID=_update_leds_loop DURATION=5
// UPDATE_DELAYED_GCODE ID=report_temperatures_loop DURATION=5
// _PRINT_AR T="Klipper INIT done"
// _general_Debug msg="_EXECUTE_AT_INIT - exiting"
// printer.configfile.settings['gcode_macro _execute_at_init'].description : Helper: Everything that should run at klipper start
// printer.configfile.settings['led_effect sb_logo_heating'].layers :
// chase  0.3  2 add (1.00,0.0,0),(0.00,0.00,0.0)
// printer.configfile.settings['led_effect sb_logo_heating'].leds :
// neopixel:sb_leds (9,11,15,16,14,10)
// printer.configfile.settings['led_effect sb_logo_heating'].autostart : False
// printer.configfile.settings['led_effect sb_logo_heating'].frame_rate : 5.0
// printer.configfile.settings['led_effect sb_logo_heating'].run_on_error : False
// printer.configfile.settings['gcode_macro _set_z_current'].gcode :
// _general_Debug msg="_SET_Z_CURRENT - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set _set_z_current = global._set_z_current %}
// {% set val = params.VAL|default('CONFIG') %}
// {% set z_run = user.homing.z_current       if val == 'HOME'
// else printer.configfile.settings['tmc2209 stepper_z'].run_current if 'tmc2209 stepper_z' in printer.configfile.settings
// else printer.configfile.settings['tmc5160 stepper_z'].run_current if 'tmc5160 stepper_z' in printer.configfile.settings %}
// {% if val != _set_z_current.last_val %}
// {% set _dummy = _set_z_current.update({'last_val': val }) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=_set_z_current VALUE="{_set_z_current}"
// {% if params.RESPOND|default(user.respond.z_current)|int == 1 %}
// {action_respond_info("Home&Probe: RunCur %.2fA rms" % z_run|float)}
// {% endif %}
// SET_TMC_CURRENT STEPPER=stepper_z  CURRENT={z_run}
// SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT={z_run}
// SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT={z_run}
// SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT={z_run}
// M400
// {% endif %}
// _general_Debug msg="_SET_Z_CURRENT - exiting"
// printer.configfile.settings['gcode_macro _set_z_current'].description : Helper: Set Z-drive motor current
// printer.configfile.settings['gcode_macro g3201'].gcode :
// _general_Debug msg="G3201 - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set MeshToApply = user.filament.profile.MeshToApply|default() %}
// BED_MESH_CLEAR
// _CG28
// QUAD_GANTRY_LEVEL                    ; this does a ATTACH_PROBE, QGL, DOCK_PROBE
// CLEAN_NOZZLE
// ATTACH_PROBE_LOCK
// G28 Z
// STATUS_CALIBRATING_Z
// CALIBRATE_Z_BASE
// {% if MeshToApply != "NONE" %}
// {% if MeshToApply == "INSITU" %}
// BED_MESH_CALIBRATE PRINT_MIN={params.PRINT_MIN} PRINT_MAX={params.PRINT_MAX}
// BED_MESH_PROFILE SAVE=INSITU
// {% else %}
// BED_MESH_PROFILE LOAD={MeshToApply}
// {% endif %}
// M118 Applied {MeshToApply} mesh post sampling.
// {% endif %}
// DOCK_PROBE_UNLOCK
// _general_Debug msg="G3201 - exiting"
// printer.configfile.settings['gcode_macro g3201'].description : Helper: Clears bed-mesh and performs G28, ATTACH_PROBE, QGL, DOCK_PROBE, CLEAN_NOZZLE, ATTACH_PROBE_LOCK, G28 Z, CALIBRATE_Z, applies bed-mesh, and DOCK_PROBE_UNLOCK
// printer.configfile.settings['gcode_macro set_logo_leds_by_name'].gcode :
// _general_Debug msg="SET_LOGO_LEDS_BY_NAME - entering"
// {% set color_name = params.COLOR %}
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set color = global.sb_vars.colors[color_name|lower] %}
// _SET_LOGO_LEDS R={color.r} G={color.g} B={color.b} W={color.w}
// _general_Debug msg="SET_LOGO_LEDS_BY_NAME - exiting"
// printer.configfile.settings['gcode_macro set_logo_leds_by_name'].description : Helper: Sets the color of the stealthburner LOGO leds by only using the name of the color
// printer.configfile.settings['gcode_macro test_wled_on'].gcode :
// _general_Debug msg="TEST_WLED_ON - entering"
// {% set STRIP = params.STRIP|default("Chamber_Lights")|string %}
// WLED_ON STRIP={STRIP}
// _general_Debug msg="TEST_WLED_ON - exiting"
// printer.configfile.settings['gcode_macro test_wled_on'].description : Helper: Test the ability to turn on a WLED strip (resets to moonraker defaults)
// printer.configfile.settings['gcode_macro _power_off_pi_psu'].gcode :
// _general_Debug msg="_POWER_OFF_Pi_PSU - entering"
// {action_call_remote_method("set_device_power",
// device="tasmota_plug_Pi",
// state="off")}
// _general_Debug msg="_POWER_OFF_Pi_PSU - exiting"
// printer.configfile.settings['gcode_macro _power_off_pi_psu'].description : Helper: Turn off the Tasmota Pi_PSU smart plug
// printer.configfile.settings['delayed_gcode report_temperatures_loop'].gcode :
// _general_Debug msg="report_temperatures - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// M105
// {% if user.respond.display_info %}
// INFO_BEDFANS
// INFO_FAN_CHECK
// INFO_STATE_LEDS
// {% endif %}
// UPDATE_DELAYED_GCODE ID=report_temperatures_loop DURATION=3600
// _general_Debug msg="report_temperatures - exiting"
// printer.configfile.settings['delayed_gcode report_temperatures_loop'].initial_duration : 0.0
// printer.configfile.settings['neopixel sb_leds'].initial_white : 0.0
// printer.configfile.settings['neopixel sb_leds'].pin : EBBCan:PD3
// printer.configfile.settings['neopixel sb_leds'].chain_count : 18
// printer.configfile.settings['neopixel sb_leds'].initial_red : 0.0
// printer.configfile.settings['neopixel sb_leds'].initial_green : 0.0
// printer.configfile.settings['neopixel sb_leds'].initial_blue : 1.0
// printer.configfile.settings['neopixel sb_leds'].color_order : ('GRB', 'GRB', 'GRB', 'GRB', 'GRB', 'GRB', 'GRB', 'GRB', 'GRB', 'GRB', 'GRB', 'GRB', 'GRB', 'GRB', 'GRB', 'GRB', 'GRBW', 'GRBW')
// printer.configfile.settings['gcode_macro set_logo_leds_off'].gcode :
// _general_Debug msg="set_logo_leds_off - entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set logo_effect = global.current_led_state.logo_leds %}
// SET_LED_EFFECT EFFECT={logo_effect} STOP=1
// _general_Debug msg="set_logo_leds_off - exiting"
// printer.configfile.settings['gcode_macro set_logo_leds_off'].description : Helper: Turn off the stealthburner LOGO leds by using the SET_LED_EFFECT call
// printer.configfile.settings['gcode_macro _bedfansfast'].gcode :
// _general_Debug msg="_BedFansFast - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set FAST = user.bedfanvars.fast|float %}
// SET_FAN_SPEED FAN=Bedfan_Left SPEED={FAST}                         ;set fan speed
// SET_FAN_SPEED FAN=Bedfan_Right SPEED={FAST}                        ;set fan speed
// _general_Debug msg="_BedFansFast - exiting"
// printer.configfile.settings['gcode_macro _bedfansfast'].description : Helper: Sets the speed of the BedFans to the speed dictated by the user.bedfanvars.fast
// printer.configfile.settings['gcode_macro _general_exit_point'].gcode :
// {% set function  = 'pre_' ~ params.FUNCTION %}
// RESTORE_GCODE_STATE NAME={function}
// printer.configfile.settings['gcode_macro _general_exit_point'].description : Helper:  macro that restores the g-code state to its original state before a call was made to another macro
// printer.configfile.settings.probe.samples_tolerance_retries : 10
// printer.configfile.settings.probe.samples : 5
// printer.configfile.settings.probe.pin : ^PG15
// printer.configfile.settings.probe.lift_speed : 30.0
// printer.configfile.settings.probe.samples_tolerance : 0.0125
// printer.configfile.settings.probe.activate_gcode :
// printer.configfile.settings.probe.deactivate_gcode :
// printer.configfile.settings.probe.samples_result : median
// printer.configfile.settings.probe.y_offset : 23.0
// printer.configfile.settings.probe.deactivate_on_each_sample : True
// printer.configfile.settings.probe.sample_retract_dist : 0.8
// printer.configfile.settings.probe.x_offset : 0.5
// printer.configfile.settings.probe.speed : 7.5
// printer.configfile.settings.probe.z_offset : 4.78
// printer.configfile.settings['gcode_macro lights'].gcode :
// _general_Debug msg="LIGHTS - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set R = params.R|default(1)|float %}
// {% set G = params.G|default(1)|float %}
// {% set B = params.B|default(1)|float %}
// {% set W = params.W|default(0)|float %}
// {% set STRIP = params.STRIP|default('Chamber_Lights')|string %}
// {% set PS = params.PS|default(-1)|int %}
// {% set STATUS = params.STATUS|default('')|string %}
// {% if STATUS != '' %}
// {% set PS = user.status_presets.lookup[STATUS] %}
// {% endif %}
// {% if PS == user.status_presets.lookup.off %}
// LIGHTS_OFF
// {% elif PS >= 0 %}
// WLED_ON STRIP="Chamber_Lights" PRESET={PS}
// WLED_ON STRIP="Bottom_Lights" PRESET={PS}
// {% else %}
// SET_WLED STRIP="Chamber_Lights" RED={R} GREEN={G} BLUE={B} WHITE={W} TRANSMIT=1
// SET_WLED STRIP="Bottom_Lights" RED={R} GREEN={G} BLUE={B} WHITE={W} TRANSMIT=1
// {% endif %}
// _general_Debug msg="LIGHTS - exiting"
// printer.configfile.settings['gcode_macro lights'].description : Helper: set WLED light strip; Example LIGHTS R=1 G=0 B=0 or LIGHTS PS=4 or e.g. LIGHTS STATUS=printing
// printer.configfile.settings['gcode_macro set_plate'].gcode :
// _general_Debug msg="SET_PLATE - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% if not printer.save_variables.variables.plates %}
// {action_respond_info("FLEXPLATE: No Plate Array defined. ABORDED")}
// {% else %}
// {% set plates = printer.save_variables.variables.plates %}
// {% if 'INDEX' not in params|upper %}
// {action_respond_info("FLEXPLATE: No INDEX defined, use SET_PLATE INDEX=index. ABORDED")}
// {% elif params.INDEX|int < 0 or params.INDEX|int >= plates.array|length %}
// {action_respond_info("FLEXPLATE: Index out of range [0..%d]. ABORDED" % (plates.array|length-1))}
// {% else %}
// {% set _dummy = plates.update({'index' : params.INDEX|int}) %}
// SAVE_VARIABLE VARIABLE=plates VALUE="{plates}"
// M117 Plate: {plates.array[plates.index].name}
// {action_respond_info("FLEXPLATE: Set plate: %s with offset: %.3fmm" % (
// plates.array[plates.index].name,plates.array[plates.index].offset))}
// {% if user.hw.display.ena %} UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=10 {% endif %}
// {% endif %}
// {% endif %}
// _general_Debug msg="SET_PLATE - exiting"
// printer.configfile.settings['gcode_macro set_plate'].description : Helper: Set a flexplate
// printer.configfile.settings['gcode_macro list_plates'].gcode :
// _general_Debug msg="LIST_PLATES - entering"
// {% if not printer.save_variables.variables.plates %}
// {action_respond_info("FLEXPLATE: No Plate Array defined. ABORDED")}
// {% else %}
// {% set plates = printer.save_variables.variables.plates %}
// {% set out = ["FLEXPLATE: Defined Plates"] %}
// {% for elem in range(plates.array|length) %}
// {% set _dummy = out.append("INDEX: %d -> %s -> offset: %.3fmm" %
// (elem, plates.array[elem].name, plates.array[elem].offset)) %}
// {% endfor %}
// {% set  _dummy = out.append("\n Active Plate: %s" % plates.array[plates.index].name) %}
// {action_respond_info(out|join("\n"))}
// {% endif %}
// _general_Debug msg="LIST_PLATES - exiting"
// printer.configfile.settings['gcode_macro list_plates'].description : Helper: List all flexplates
// printer.configfile.settings['gcode_macro _magprobe_status_homing'].gcode :
// {% if printer['gcode_macro status_homing'] is defined %}
// _Mag_Probe_Debug msg="_magprobe_status_homing activating the LED STATUS_HOMING"
// STATUS_HOMING
// {% endif %}
// printer.configfile.settings['gcode_macro _magprobe_status_homing'].description : Helper: Mag Probe, enable STATUS_HOMING LED state
// printer.configfile.settings['gcode_macro wled_on'].gcode :
// _general_Debug msg="WLED_ON - entering"
// {% set strip = params.STRIP|string %}
// {% set preset = params.PRESET|default(1)|int %}
// {action_call_remote_method("set_wled_state",
// strip=strip,
// state=True,
// preset=preset)}
// _general_Debug msg="WLED_ON - exiting"
// printer.configfile.settings['gcode_macro wled_on'].description : Helper: Turn on the WLED strip using optional preset
// printer.configfile.settings['led_effect sb_bar_calibrating_z'].layers :
// breathing  3 1 top (1.0, 0.25, 0.00)
// printer.configfile.settings['led_effect sb_bar_calibrating_z'].leds :
// neopixel:progress_bar_leds (1-33)
// printer.configfile.settings['led_effect sb_bar_calibrating_z'].autostart : False
// printer.configfile.settings['led_effect sb_bar_calibrating_z'].frame_rate : 5.0
// printer.configfile.settings['led_effect sb_bar_calibrating_z'].run_on_error : False
// printer.configfile.settings['gcode_macro _probe_action'].gcode :
// _Mag_Probe_Debug msg="_PROBE_ACTION - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set _probe_action = global._probe_action %}
// {% set mag_probe = user.mag_probe %}
// {% set _check_state = global._check_state %}
// {% set man_state = _probe_action.man_state %}
// {% set action    = params.ACTION|default('undefined')|lower %}
// {% set id        = params.ID|default(0)|int %}
// {% set probe_id  = global.query_probe.id|default(0)|int %}
// {% set probe = 'attached' if printer.probe.last_query|int == 0
// else 'docked'   if printer.probe.last_query|int == 1 %}
// {% set error_id = 1 if printer.probe.last_query|lower == 'false'
// else 2 if id == 0 or id != probe_id
// else 3 if action is not in ['attach','dock','check_attach','check_dock','get_status']
// else 4 if action == 'check_dock'   and probe != 'docked'
// else 5 if action == 'check_attach' and probe != 'attached'
// else 0 %}
// {% set state = 'error'   if error_id  != 0
// else man_state if man_state != 'unknown'
// else probe %}
// {% if params.RESPOND|default(user.respond.probe_action)|int == 1 %}
// {% set txt = [] %}
// {% if man_state != 'unknown' %}{% set _dummy = txt.append("State was set to %s by SET_PROBE_STATUS" % man_state)%}{% endif %}
// {% if action == 'attach' and state == 'docked'   %}{% set _dummy = txt.append("Attach Probe")%}{% endif %}
// {% if action == 'attach' and state == 'attached' %}{% set _dummy = txt.append("Already attached")%}{% endif %}
// {% if action == 'dock'   and state == 'attached' %}{% set _dummy = txt.append("Dock Probe")%}{% endif %}
// {% if action == 'dock'   and state == 'docked'   %}{% set _dummy = txt.append("Already docked")%}{% endif %}
// {% if action == 'get_status' %}{% set _dummy = txt.append("Status: %s" % state)%}{% endif %}
// {% if txt|length > 0 %} {action_respond_info("MagProbe: %s" % txt|join("\n"))} {% endif %}
// {% endif %}
// {% if action == 'attach' and state == 'docked'   %} _ATTACH_PROBE {% endif %}
// {% if action == 'dock'   and state == 'attached' %} _DOCK_PROBE   {% endif %}
// {% set _dummy = _probe_action.update({'man_state': 'unknown' }) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=_probe_action VALUE="{_probe_action}"
// {% set _dummy = mag_probe.update({'state': state }) %}
// SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=mag_probe VALUE="{mag_probe}"
// {% set _dummy = _check_state.update({'error_id': error_id }) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=_check_state VALUE="{_check_state}"
// _CHECK_STATE
// _Mag_Probe_Debug msg="_PROBE_ACTION - exiting"
// printer.configfile.settings['gcode_macro _probe_action'].description : Helper: Mag Probe; Perform MagProbe action
// printer.configfile.settings['gcode_macro set_filament_sensor'].gcode :
// _general_Debug msg="SET_FILAMENT_SENSOR - entering"
// {% if printer.save_variables.variables.filament_sensor is not defined %}
// {% set filament_sensor = {params.SENSOR|string: params.ENABLE|int} %}
// {% else %}
// {% set filament_sensor = printer.save_variables.variables.filament_sensor %}
// {% set _dummy = filament_sensor.update({params.SENSOR|string: params.ENABLE|int}) %}
// {% endif %}
// SET_FILAMENT_SENSOR_BASE SENSOR={params.SENSOR} ENABLE={params.ENABLE}
// SAVE_VARIABLE VARIABLE=filament_sensor VALUE="{filament_sensor}"
// _general_Debug msg="SET_FILAMENT_SENSOR - exiting"
// printer.configfile.settings['gcode_macro set_filament_sensor'].description : Helper: Sets the filament sensor on/off and save value to file
// printer.configfile.settings['gcode_macro set_filament_sensor'].rename_existing : SET_FILAMENT_SENSOR_BASE
// printer.configfile.settings['gcode_macro _power_on_pi_psu'].gcode :
// _general_Debug msg="_POWER_ON_Pi_PSU - entering"
// {action_call_remote_method("set_device_power",
// device="tasmota_plug_Pi",
// state="on")}
// _general_Debug msg="_POWER_ON_Pi_PSU - exiting"
// printer.configfile.settings['gcode_macro _power_on_pi_psu'].description : Helper: Turn on the Tasmota Pi_PSU smart plug
// printer.configfile.settings['led_effect sb_critical_error'].layers :
// strobe         1  1.5   add        (1.0,  1.0, 1.0)
// breathing      2  0     difference (0.95, 0.0, 0.0)
// static         1  0     top        (1.0,  0.0, 0.0)
// printer.configfile.settings['led_effect sb_critical_error'].leds :
// neopixel:sb_leds (1-16)
// printer.configfile.settings['led_effect sb_critical_error'].autostart : False
// printer.configfile.settings['led_effect sb_critical_error'].run_on_error : True
// printer.configfile.settings['led_effect sb_critical_error'].frame_rate : 5.0
// printer.configfile.settings['heater_fan fan_hotend'].tachometer_pin : ^EBBCan: PB6
// printer.configfile.settings['heater_fan fan_hotend'].heater : ('extruder',)
// printer.configfile.settings['heater_fan fan_hotend'].cycle_time : 0.08
// printer.configfile.settings['heater_fan fan_hotend'].pin : EBBCan: PA1
// printer.configfile.settings['heater_fan fan_hotend'].off_below : 0.1
// printer.configfile.settings['heater_fan fan_hotend'].tachometer_poll_interval : 0.0015
// printer.configfile.settings['heater_fan fan_hotend'].heater_temp : 40.0
// printer.configfile.settings['heater_fan fan_hotend'].shutdown_speed : 1.0
// printer.configfile.settings['heater_fan fan_hotend'].fan_speed : 1.0
// printer.configfile.settings['heater_fan fan_hotend'].max_power : 1.0
// printer.configfile.settings['heater_fan fan_hotend'].kick_start_time : 0.2
// printer.configfile.settings['heater_fan fan_hotend'].tachometer_ppr : 2
// printer.configfile.settings['heater_fan fan_hotend'].hardware_pwm : False
// printer.configfile.settings['gcode_macro chamber_lights_off'].gcode :
// _general_Debug msg="Chamber_Lights_OFF - entering"
// WLED_OFF STRIP=Chamber_Lights
// _general_Debug msg="Chamber_Lights_OFF - exiting"
// printer.configfile.settings['gcode_macro chamber_lights_off'].description : Helper: Turn off the WLED server that controls the Chamber RGB lights
// printer.configfile.settings['gcode_macro set_fan_leds_on'].gcode :
// _general_Debug msg="set_fan_leds_on - entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set fan_effect = global.current_led_state.fan_leds %}
// SET_LED_EFFECT EFFECT={fan_effect}
// _general_Debug msg="set_fan_leds_on - exiting"
// printer.configfile.settings['gcode_macro set_fan_leds_on'].description : Helper: Turn on the stealthburner fan leds by using the SET_LED_EFFECT call
// printer.configfile.settings['gcode_macro status_homing'].gcode :
// _general_Debug msg="status_homing- entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set current_led_state = global.current_led_state %}
// SET_FAN_LEDS_OFF
// SET_LOGO_LEDS_OFF
// SET_NOZZLE_LEDS_OFF
// M117 off
// CHECK_PRINTER_STATE
// {% set progressbar_enabled = global.progressbar_enabled|int %}
// {% if progressbar_enabled == 0 %}
// SET_BAR_LEDS_OFF
// {% set _dummy = current_led_state.update({'bar_leds':'sb_bar_homing'}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=current_led_state VALUE="{current_led_state}"
// SET_BAR_LEDS_ON
// {% endif %}
// {% set _dummy = current_led_state.update({'fan_leds':'sb_fan_homing'}) %}
// {% set _dummy = current_led_state.update({'logo_leds':'sb_logo_homing'}) %}
// {% set _dummy = current_led_state.update({'nozzle_leds':'sb_nozzle_homing'}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=current_led_state VALUE="{current_led_state}"
// SET_FAN_LEDS_ON
// SET_LOGO_LEDS_ON
// M117 homing
// SET_NOZZLE_LEDS_ON
// _general_Debug msg="status_homing- exiting"
// printer.configfile.settings['gcode_macro status_homing'].description : Helper: set the Stealthburner leds to the STATUS_HOMING LED_EFFECT
// printer.configfile.settings['gcode_macro resume'].gcode :
// _general_Debug msg="RESUME - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set restore = global.restore %}
// {% if user.hw.display.ena %} _LCD_KNOB COLOR=RED {% endif %}
// RESUME_BASE VELOCITY={params.VELOCITY|default(user.speed.travel/60)}
// G0 E{user.filament.retract.pause} F{user.speed.retract}
// G0 F{restore.speed}
// {% if restore.absolute.extrude %}         M82 {% endif %} ; set back to absolute
// {% if not restore.absolute.coordinates %} G91 {% endif %} ; set back to relative
// _general_Debug msg="RESUME - exiting"
// printer.configfile.settings['gcode_macro resume'].description : Helper: Resume the actual running print
// printer.configfile.settings['gcode_macro resume'].rename_existing : RESUME_BASE
// printer.configfile.settings['gcode_macro pressure_advance_list'].gcode :
// _general_Debug msg="PRESSURE_ADVANCE_LIST - entering"
// {% if not printer.save_variables.variables.pressure_advance %}
// {action_respond_info("PRESSURE ADVANCE: No filament defined ABORDED")}
// {% else %}
// {% set pa_dic = printer.save_variables.variables.pressure_advance %}
// {% set out = ["PRESSURE ADVANCE: Defined filaments"] %}
// {% for filament in pa_dic|sort(attribute='id') %}
// {% set _dummy = out.append("%s" % filament.id) %}
// {% for setup in filament.val|sort(attribute='nozzle') %}
// {% set _dummy = out.append("Nozzle: %1.02f | Pressure Advance: %1.03f | Smooth Time: %1.03f" %
// (setup.nozzle, setup.pa, setup.st)) %}
// {% endfor %}
// {% endfor %}
// {action_respond_info(out|join("\n"))}
// {% endif %}
// _general_Debug msg="PRESSURE_ADVANCE_LIST - exiting"
// printer.configfile.settings['gcode_macro pressure_advance_list'].description : Helper: List all filament pressure advance settings
// printer.configfile.settings['gcode_macro progress_bar_leds_off'].gcode :
// _general_Debug msg="progress_bar_leds_off - entering"
// SET_LED LED=progress_bar_leds RED=0 GREEN=0 BLUE=0
// _general_Debug msg="progress_bar_leds_off - exiting"
// printer.configfile.settings['gcode_macro progress_bar_leds_off'].description : Helper: Turn off the progress_bar via the SET_LED command
// printer.configfile.settings['gcode_macro _lights_flicker'].gcode :
// _general_Debug msg="_LIGHTS_FLICKER - entering"
// {% set LEDTimes = [10, 20, 20, 240, 20, 40, 20, 100, 20, 20, 20, 260, 80, 20, 240, 60, 160, 20, 240, 20, 1000, 20, 20, 40, 100, 20, 274, 340, 860, 20, 1400, 20, 60, 20] %}
// {% set R = 255/255 %}
// {% set G = 131/255 %}
// {% set B = 156/255 %}
// {% set STRIP = params.STRIP|default('Chamber_Lights')|string %}
// {% for toggletime in LEDTimes %}
// {% set ledTime = toggletime|string %}
// {% set loopCount = loop.index %}
// {% if loopCount is divisibleby 2 %}
// SET_WLED STRIP="Chamber_Lights" RED={R} GREEN={G} BLUE={B} TRANSMIT=1
// SET_WLED STRIP="Bottom_Lights" RED={R} GREEN={G} BLUE={B} TRANSMIT=1
// G4 P{ledTime|int}
// {% else %}
// SET_WLED STRIP="Chamber_Lights" RED=0 GREEN=0 BLUE=0 TRANSMIT=1
// SET_WLED STRIP="Bottom_Lights" RED=0 GREEN=0 BLUE=0 TRANSMIT=1
// G4 P{ledTime|int}
// {% endif %}
// {% endfor %}
// M117 Boot up is complete
// _general_Debug msg="_LIGHTS_FLICKER - exiting"
// printer.configfile.settings['gcode_macro _lights_flicker'].description : Helper: Make the RGBW LEDs of the chamber lights flicker; Visual effect to show the current state of the printer (boot state)
// printer.configfile.settings['temperature_fan chamber'].control : watermark
// printer.configfile.settings['temperature_fan chamber'].rtd_nominal_r : 100.0
// printer.configfile.settings['temperature_fan chamber'].pin : tinyfan: FAN4_PWM
// printer.configfile.settings['temperature_fan chamber'].max_delta : 0.5
// printer.configfile.settings['temperature_fan chamber'].spi_bus : spi1
// printer.configfile.settings['temperature_fan chamber'].sensor_type : MAX31865
// printer.configfile.settings['temperature_fan chamber'].hardware_pwm : True
// printer.configfile.settings['temperature_fan chamber'].min_temp : 0.0
// printer.configfile.settings['temperature_fan chamber'].gcode_id : ChamberFan-ToolH
// printer.configfile.settings['temperature_fan chamber'].target_temp : 35.0
// printer.configfile.settings['temperature_fan chamber'].min_speed : 0.3
// printer.configfile.settings['temperature_fan chamber'].rtd_num_of_wires : 4
// printer.configfile.settings['temperature_fan chamber'].off_below : 0.1
// printer.configfile.settings['temperature_fan chamber'].rtd_reference_r : 430.0
// printer.configfile.settings['temperature_fan chamber'].max_speed : 1.0
// printer.configfile.settings['temperature_fan chamber'].sensor_pin : EBBCan: PA4
// printer.configfile.settings['temperature_fan chamber'].tachometer_pin : ^tinyfan:FAN4_RPM
// printer.configfile.settings['temperature_fan chamber'].rtd_use_50hz_filter : False
// printer.configfile.settings['temperature_fan chamber'].cycle_time : 4e-05
// printer.configfile.settings['temperature_fan chamber'].tachometer_poll_interval : 0.0015
// printer.configfile.settings['temperature_fan chamber'].shutdown_speed : 0.0
// printer.configfile.settings['temperature_fan chamber'].max_power : 1.0
// printer.configfile.settings['temperature_fan chamber'].kick_start_time : 0.1
// printer.configfile.settings['temperature_fan chamber'].tachometer_ppr : 2
// printer.configfile.settings['temperature_fan chamber'].spi_speed : 2000000
// printer.configfile.settings['temperature_fan chamber'].max_temp : 70.0
// printer.configfile.settings['gcode_macro detach_probe'].gcode :
// _Mag_Probe_Debug msg="DETACH_PROBE - entering"
// _MAG_PROBE ACTION=DOCK
// _MAG_PROBE ACTION=CHECK_DOCK
// _Mag_Probe_Debug msg="DETACH_PROBE - exiting"
// printer.configfile.settings['gcode_macro detach_probe'].description : Helper: Mag Probe; Dock the MagProbe if not already docked
// printer.configfile.settings['delayed_gcode _delay_sdcard_reset_file'].gcode :
// _general_Debug msg="_DELAY_SDCARD_RESET_FILE - entering"
// SDCARD_RESET_FILE
// _general_Debug msg="_DELAY_SDCARD_RESET_FILE - exiting"
// printer.configfile.settings['delayed_gcode _delay_sdcard_reset_file'].initial_duration : 0.0
// printer.configfile.settings['gcode_macro info_state_leds'].gcode :
// _general_Debug msg="INFO_STATE_LEDS - entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set string1 = "_INFO_STATE_LEDS <+++++++++++++++++" %}
// {% set string1 = string1 ~ "\n global.current_led_state.fan_leds = %s;" %}
// {% set string1 = string1 ~ "\n global.current_led_state.logo_leds = %s;" %}
// {% set string1 = string1 ~ "\n global.current_led_state.bar_leds = %s;" %}
// {% set string1 = string1 ~ "\n global.current_led_state.nozzle_leds = %s;" %}
// {% set string1 = string1 ~ "\n End of _INFO_STATE_LEDS +++++++++++++++++>" %}
// {action_respond_info(string1 % (global.current_led_state.fan_leds, global.current_led_state.logo_leds, global.current_led_state.bar_leds, global.current_led_state.nozzle_leds)) }
// _general_Debug msg="INFO_STATE_LEDS - exiting"
// printer.configfile.settings['gcode_macro info_state_leds'].description : Helper: compare the state of some of the variables in _GLOBAL_VARS to the state in the dictionary structure of _CURRENT_STATE.current_led_state
// printer.configfile.settings['gcode_macro _dock_klicky_probe'].gcode :
// _Mag_Probe_Debug msg="_DOCK_KLICKY_PROBE - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set move_z = [user.z_hop, printer.toolhead.position.z]|max %}     ; calc movement high
// G90                                                                  ; absolute positioning
// G0 Z{move_z} F{user.speed.z_hop}                                     ; move head up
// G0 X{user.probe.dock.x} Y{user.probe.dock.y} F{user.speed.travel}    ; step 1
// G0 Y{user.probe.store.y} F{user.speed.dock}                          ; step 2
// G0 X{user.probe.store.x} F{user.speed.dock}                          ; step 3
// {% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %} ; set back to relative
// _MAGPROBE_STATUS_READY
// _Mag_Probe_Debug msg="_DOCK_KLICKY_PROBE - exiting"
// printer.configfile.settings['gcode_macro _dock_klicky_probe'].description : Helper: Mag Probe; Dock Klicky MagProbe
// printer.configfile.settings['gcode_macro pressure_advance_remove'].gcode :
// _general_Debug msg="PRESSURE_ADVANCE_REMOVE - entering"
// {% if 'FILAMENT' not in params|upper %}
// {action_respond_info("PRESSURE ADVANCE: FILAMENT must be defined use \"PRESSURE_ADVANCE_REMOVE FILAMENT=id\" as a minimum")}
// {% else %}
// {% if not printer.save_variables.variables.pressure_advance %}
// {action_respond_info("PRESSURE ADVANCE: Nothing to remove, no save_variable defined yet")}
// {% else %}
// {% set id = params.FILAMENT|string %}
// {% set pa_dic = printer.save_variables.variables.pressure_advance %}
// {% for filament in pa_dic %}
// {% if id == filament.id %}
// {% if 'NOZZLE' in params|upper %}
// {% set nozzle = params.NOZZLE|float|round(2) %}
// {% set id_index = loop.index0 %}
// {% for setup in filament.val %}
// {% if nozzle == setup.nozzle %}
// {action_respond_info("PRESSURE ADVANCE: Remove Nozzle %s at Filament %s" % (nozzle,id))}
// {% set _dummy = pa_dic[id_index].val.pop(loop.index0) %}
// {% elif loop.last %}
// {action_respond_info("PRESSURE ADVANCE: Nothing to remove, Nozzle %s at Filament %s not defined" % (nozzle,id))}
// {% endif%}
// {% endfor %}
// {% else %}
// {action_respond_info("PRESSURE ADVANCE: Remove Filament %s" % id)}
// {% set _dummy = pa_dic.pop(loop.index0) %}
// {% endif %}
// {% elif loop.last %}
// {action_respond_info("PRESSURE ADVANCE: Nothing to remove, Filament %s not defined" % id)}
// {% endif %}
// {% endfor %}
// {% endif %}
// SAVE_VARIABLE VARIABLE=pressure_advance VALUE="{pa_dic}"
// {% endif %}
// _general_Debug msg="PRESSURE_ADVANCE_REMOVE - exiting"
// printer.configfile.settings['gcode_macro pressure_advance_remove'].description : Helper: Remove a filament or a nezzle setup
// printer.configfile.settings.respond.default_prefix : echo:
// printer.configfile.settings.respond.default_type : echo
// printer.configfile.settings['gcode_macro hotmesh'].gcode :
// _general_Debug msg="HOTMESH - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// CLEAR_PAUSE
// {% if printer.idle_timeout.state == "Printing" or printer.pause_resume.is_paused %}
// {action_respond_info("Cannot do that while printing")}
// {% else %}
// {% set MeshToApply = user.filament.profile.MeshToApply|default() %}
// {% set MeshName = params.NAME|default(MeshToApply) %}
// M118 Will be saving as {MeshName}
// {% if MeshName == "INSITU" or MeshToApply == "NONE" %}
// {action_respond_info("Mesh requires a proper name, specify via cli or change printer.cfg MeshToApply definition.")}
// {% else %}
// {% set defaultWN = user.filament.profile.defaultWarmNozzle|float %}
// {% set defaultTB = user.filament.profile.defaultTempBed|float %}
// {% set defaultENCLOSURE = user.filament.profile.defaultEnclosure|float %}
// {% set defaultSOAK = user.filament.profile.HotmeshSoakMinutes|float %}
// {% set BED_TEMP = params.BED_TEMP|default(defaultTB)|float %}
// {% set ENCLOSURE_TEMP = params.ENCLOSURE_TEMP|default(defaultENCLOSURE)|float %}
// {% set SOAK = params.SOAK|default(defaultSOAK)|float %}
// STATUS_HEATING
// M141 S{ENCLOSURE_TEMP}                                            ;set chamber temperature for Exhaust fan and Bed fans
// M140 S{BED_TEMP}
// M104 S{defaultWN}
// G90
// SET_GCODE_OFFSET Z=0.0
// M117 Performing initial homing.
// STATUS_HOMING
// {% if user.filament.profile.QGLbeforeSoakMesh|default() == true %}
// G32
// PARK_Center
// {% else %}
// G28
// {% endif %}
// M117 Bringing bed to temperature.
// M190 S{BED_TEMP}
// _HEAT_WAIT MINUTES={SOAK} MSG="Pre BED_MESH_CALIBRATE Soaking..."
// STATUS_MESHING
// M117 Performing hot level.
// CURRENT_HIGH
// M400
// QUAD_GANTRY_LEVEL ; this does a ATTACH_PROBE, QGL, DOCK_PROBE
// CLEAN_NOZZLE
// ATTACH_PROBE_LOCK
// G28 Z
// CALIBRATE_Z_BASE
// M117 Performing heated bed mesh calibration.
// BED_MESH_PROFILE REMOVE={MeshName}
// BED_MESH_CALIBRATE PRINT_MIN={params.PRINT_MIN} PRINT_MAX={params.PRINT_MAX}
// BED_MESH_PROFILE SAVE={MeshName}
// BED_MESH_OUTPUT PGP=1
// M118 Bed mesh calibration completed.
// TURN_OFF_HEATERS
// CURRENT_NORMAL
// DOCK_PROBE_UNLOCK
// PARK_UpperRight
// M18 X Y E
// STATUS_READY
// M117 Finished mesh, saved as {MeshName}.
// SAVE_CONFIG
// {% endif %}
// {% endif %}
// _general_Debug msg="HOTMESH - exiting"
// printer.configfile.settings['gcode_macro hotmesh'].description : Helper: Performs a heat-soaked bed-mesh
// printer.configfile.settings.virtual_sdcard.path : /home/pi/sdcard
// printer.configfile.settings.virtual_sdcard.on_error_gcode :
// printer.configfile.settings['gcode_macro current_normal'].gcode :
// _general_Debug msg="CURRENT_NORMAL - entering"
// M117 Decreased motor currents.
// SET_TMC_CURRENT STEPPER=stepper_x CURRENT={ printer["tmc2209 stepper_x"].run_current }
// SET_TMC_CURRENT STEPPER=stepper_y CURRENT={ printer["tmc2209 stepper_y"].run_current }
// SET_TMC_CURRENT STEPPER=stepper_z CURRENT={ printer["tmc2209 stepper_z"].run_current }
// SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT={ printer["tmc2209 stepper_z1"].run_current }
// SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT={ printer["tmc2209 stepper_z2"].run_current }
// SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT={ printer["tmc2209 stepper_z3"].run_current }
// _general_Debug msg="CURRENT_NORMAL - exiting"
// printer.configfile.settings['gcode_macro current_normal'].description : Helper: Lowers stepper current for NON-printing routines
// printer.configfile.settings['led_effect sb_logo_cooling'].layers :
// chase  0.3  2 add (0.00,0.00,1.00),(0.00,0.00,0.0)
// printer.configfile.settings['led_effect sb_logo_cooling'].leds :
// neopixel:sb_leds (9,11,15,16,14,10)
// printer.configfile.settings['led_effect sb_logo_cooling'].autostart : False
// printer.configfile.settings['led_effect sb_logo_cooling'].frame_rate : 5.0
// printer.configfile.settings['led_effect sb_logo_cooling'].run_on_error : False
// printer.configfile.settings['gcode_macro _mag_probe'].gcode :
// _Mag_Probe_Debug msg="_MAG_PROBE - entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set _mag_probe = global._mag_probe %}
// {% set id = _mag_probe.id %}
// {% set id = 1 if id == 0 else id + 1 %} ; generate an id not equal to 0
// QUERY_PROBE ID={id}
// _PROBE_ACTION ACTION={params.ACTION} ID={id} {"RESPOND=" + params.RESPOND if params.RESPOND is defined else ""}
// {% set _dummy = _mag_probe.update({'id':id}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=_mag_probe VALUE="{_mag_probe}"
// _Mag_Probe_Debug msg="_MAG_PROBE - exiting"
// printer.configfile.settings['gcode_macro _mag_probe'].description : Helper: Mag Probe; Query MagProbe state and request action
// printer.configfile.settings['thermistor reprap-thermistor-ntc-3950-100k'].resistance2 : 12540.0
// printer.configfile.settings['thermistor reprap-thermistor-ntc-3950-100k'].resistance3 : 396.0
// printer.configfile.settings['thermistor reprap-thermistor-ntc-3950-100k'].resistance1 : 125245.0
// printer.configfile.settings['thermistor reprap-thermistor-ntc-3950-100k'].temperature2 : 80.0
// printer.configfile.settings['thermistor reprap-thermistor-ntc-3950-100k'].temperature3 : 220.0
// printer.configfile.settings['thermistor reprap-thermistor-ntc-3950-100k'].temperature1 : 20.0
// printer.configfile.settings['gcode_macro lights_random'].gcode :
// _general_Debug msg="LIGHTS_RANDOM - entering"
// {% set CHAIN_COUNT = params.COUNT|default(92)|int %}
// {% set STRIP = params.STRIP|default("Chamber_Lights")|string %}
// {% for led in range(CHAIN_COUNT) %}
// {% if led == CHAIN_COUNT-1 %}
// SET_WLED STRIP={STRIP} RED={(range(0,100) | random) / 100} GREEN={(range(0,100) | random) / 100} BLUE={(range(0,100) | random) / 100} INDEX={led+1} TRANSMIT=1
// {% else %}
// SET_WLED STRIP={STRIP}  RED={(range(0,100) | random) / 100} GREEN={(range(0,100) | random) / 100} BLUE={(range(0,100) | random) / 100} INDEX={led+1} TRANSMIT=0
// {% endif %}
// G4 P15
// {% endfor %}
// _general_Debug msg="LIGHTS_RANDOM - exiting"
// printer.configfile.settings['gcode_macro lights_random'].description : Helper: Test the ability to Set all leds to a random RGB value for WLED strip
// printer.configfile.settings['gcode_macro set_logo_leds_on'].gcode :
// _general_Debug msg="SET_LOGO_LEDS_ON - entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set logo_effect = global.current_led_state.logo_leds %}
// SET_LED_EFFECT EFFECT={logo_effect}
// _general_Debug msg="SET_LOGO_LEDS_ON - exiting"
// printer.configfile.settings['gcode_macro set_logo_leds_on'].description : Helper: Turn on the stealthburner LOGO leds by using the SET_LED_EFFECT call
// printer.configfile.settings['temperature_sensor bed'].pullup_resistor : 4700.0
// printer.configfile.settings['temperature_sensor bed'].sensor_pin : PF5
// printer.configfile.settings['temperature_sensor bed'].sensor_type : gulfcoast-epcos-m3-hex-stud
// printer.configfile.settings['temperature_sensor bed'].inline_resistor : 0.0
// printer.configfile.settings['temperature_sensor bed'].min_temp : 0.0
// printer.configfile.settings['temperature_sensor bed'].gcode_id : BedT2
// printer.configfile.settings['temperature_sensor bed'].max_temp : 125.0
// printer.configfile.settings['led_effect sb_bar_part_ready'].layers :
// breathing  3 1 top (0.0, 1.0, 0.0)
// printer.configfile.settings['led_effect sb_bar_part_ready'].leds :
// neopixel:progress_bar_leds (1-33)
// printer.configfile.settings['led_effect sb_bar_part_ready'].autostart : False
// printer.configfile.settings['led_effect sb_bar_part_ready'].run_on_error : False
// printer.configfile.settings['led_effect sb_bar_part_ready'].frame_rate : 5.0
// printer.configfile.settings['gcode_macro test_wled_off'].gcode :
// _general_Debug msg="TEST_WLED_OFF - entering"
// {% set STRIP = params.STRIP|default("Chamber_Lights")|string %}
// WLED_OFF STRIP={STRIP}
// _general_Debug msg="TEST_WLED_OFF - exiting"
// printer.configfile.settings['gcode_macro test_wled_off'].description : Helper: test that ability to turn off a WLED strip
// printer.configfile.settings['gcode_macro _cg28'].gcode :
// _general_Debug msg="_CG28 - enter"
// {% if "xyz" not in printer.toolhead.homed_axes %}
// STATUS_HOMING
// G28
// {% endif %}
// _general_Debug msg="_CG28 - exit"
// printer.configfile.settings['gcode_macro _cg28'].description : Helper: Conditional G28 (home if not already homed)
// printer.configfile.settings['gcode_macro enablefilamentsensor'].gcode :
// _general_Debug msg="ENABLEFILAMENTSENSOR - entering"
// SET_FILAMENT_SENSOR SENSOR=runout ENABLE=1              ; enable the filament sensor
// _general_Debug msg="ENABLEFILAMENTSENSOR - exiting"
// printer.configfile.settings['gcode_macro enablefilamentsensor'].description : Helper: Enables the Filament sensor named "runout"
// printer.configfile.settings['gcode_macro set_probe_status'].gcode :
// _Mag_Probe_Debug msg="SET_PROBE_STATUS - entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set _probe_action = global._probe_action %}
// {% set mag_probe = user.mag_probe %}
// {% if not params.STATE or params.STATE|lower is not in ['unknown','attached','docked'] %}
// {action_raise_error("Invalid probe state: %s. Valid probe states are [UNKNOWN, ATTACHED, DOCKED]" % params.STATE|default('none')|upper)}
// {% endif %}
// {% set _dummy = _probe_action.update({'man_state': params.STATE|lower }) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=_probe_action VALUE="{_probe_action}"
// {% set _dummy = mag_probe.update({'state': params.STATE|lower }) %}
// SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=mag_probe VALUE="{mag_probe}"
// _Mag_Probe_Debug msg="SET_PROBE_STATUS - exiting"
// printer.configfile.settings['gcode_macro set_probe_status'].description : Helper: Mag Probe; Manually specify MagProbe status, valid probe states are UNKNOWN, ATTACHED and DOCKED
// printer.configfile.settings['gcode_macro status_off'].gcode :
// _general_Debug msg="status_off- entering"
// STOP_LED_EFFECTS
// M117 OFF
// SET_NOZZLE_LEDS_BY_NAME COLOR="OFF"
// _general_Debug msg="status_off- exiting"
// printer.configfile.settings['gcode_macro status_off'].description : Helper: Turn Off all the Stealthburner leds
// printer.configfile.settings['gcode_macro vent'].gcode :
// _general_Debug msg="VENT - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% if printer['temperature_fan chamber'].target|float > 0 and
// printer['temperature_fan chamber'].target|float <= user.peripheral.vent.on_val|float %}
// M141
// {% else %}
// M141 S{user.peripheral.vent.on_val}
// {% endif %}
// _VENT_INFO
// _general_Debug msg="VENT - exiting"
// printer.configfile.settings['gcode_macro vent'].description : Helper: Toggle Chamber fan
// printer.configfile.settings['gcode_macro bottom_lights_on'].gcode :
// _general_Debug msg="Bottom_Lights_ON - entering"
// WLED_ON STRIP=Bottom_Lights
// _general_Debug msg="Bottom_Lights_ON - exiting"
// printer.configfile.settings['gcode_macro bottom_lights_on'].description : Helper:  Turn on the WLED server that controls the Bottom lights
// printer.configfile.settings['gcode_macro is_probe_attached_at_boot'].gcode :
// _MAG_PROBE ACTION=GET_STATUS RESPOND=0
// OUTPUT_PROBE_MESSAGE
// printer.configfile.settings['gcode_macro is_probe_attached_at_boot'].description : Helper: This checks the state of the Euclid probe on system boot and reports a message to the UI console
// printer.configfile.settings['thermistor 100k3950_airtemp'].resistance2 : 35900.0
// printer.configfile.settings['thermistor 100k3950_airtemp'].resistance3 : 12933.0
// printer.configfile.settings['thermistor 100k3950_airtemp'].resistance1 : 125245.0
// printer.configfile.settings['thermistor 100k3950_airtemp'].temperature2 : 50.0
// printer.configfile.settings['thermistor 100k3950_airtemp'].temperature3 : 80.0
// printer.configfile.settings['thermistor 100k3950_airtemp'].temperature1 : 20.0
// printer.configfile.settings['gcode_macro _enable_progress_bar'].gcode :
// _general_Debug msg="_ENABLE_PROGRESS_BAR - entering"
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=progressbar_enabled VALUE=1
// _general_Debug msg="_ENABLE_PROGRESS_BAR - exiting"
// printer.configfile.settings['gcode_macro _enable_progress_bar'].description : Helper: Allow the progress bar to be used as a progress bar during a print
// printer.configfile.settings['gcode_macro _cool_wait'].gcode :
// _general_Debug msg="_COOL_WAIT - enter"
// M106 S250                                                  ;set part cooling fan speed
// {% set MINUTES = params.MINUTES|default(1)|int %}
// {% set MSG = params.MSG|default("Cooling...")|string %}
// STATUS_COOLING
// {% for i in range(0, MINUTES) %}
// M117 {MSG} {MINUTES-i} minute remaining.
// {% for s in range(0, 60) %}
// SET_LED LED=sb_leds INDEX=17 RED=0 GREEN=0 BLUE=0
// SET_LED LED=sb_leds INDEX=18 RED=0 GREEN=0 BLUE=.5
// G4 P500                                            ;wait 0.5 seconds
// SET_LED LED=sb_leds INDEX=17 RED=0 GREEN=0 BLUE=.5
// SET_LED LED=sb_leds INDEX=18 RED=0 GREEN=0 BLUE=0
// G4 P500                                            ;wait 0.5 seconds
// {% endfor %}
// {% endfor %}
// M107                                                        ;turn off part cooling fans
// _general_Debug msg="_COOL_WAIT - exit"
// printer.configfile.settings['gcode_macro _cool_wait'].description : Helper: Cooling cycle waiting routine
// printer.configfile.settings['gcode_macro test_set_wled'].gcode :
// _general_Debug msg="TEST_SET_WLED - entering"
// {% set INDEX = params.INDEX|default(1)|int %}
// {% set RED = params.RED|default(1)|float %}
// {% set GREEN = params.GREEN|default(0)|float %}
// {% set BLUE = params.BLUE|default(0)|float %}
// {% set WHITE = params.WHITE|default(0)|float %}
// {% set STRIP = params.STRIP|default("Chamber_Lights")|string %}
// SET_WLED STRIP={STRIP} RED={RED} GREEN={GREEN} BLUE={BLUE} WHITE={WHITE} INDEX={INDEX}
// _general_Debug msg="TEST_SET_WLED - exiting"
// printer.configfile.settings['gcode_macro test_set_wled'].description : Helper: Test the WLED strip to see if an issue exists where a single pixel would not turn back on or turn on with low brightness
// printer.configfile.settings['gcode_macro cancel_print'].gcode :
// _general_Debug msg="CANCEL_PRINT - entering"
// {% set user       = printer['gcode_macro _USER_VARIABLE'] %}
// {% set global     = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set filter_off = user.peripheral.filter.run_after_print %}
// {% set vent_on    = user.peripheral.vent.on_val %}
// {% set vent_off   = user.peripheral.vent.run_after_print %}
// {% set retract    = user.filament.retract.end if not printer.pause_resume.is_paused
// else user.filament.retract.cancel %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=execute VALUE=True
// SET_NOZZLE_LEDS_OFF
// STATUS_BUSY
// SET_VELOCITY_LIMIT ACCEL={user.speed.NPLimitAccel|float} ACCEL_TO_DECEL={user.speed.NPLimitDecel|float}
// M118 Cancel
// CANCEL_PRINT_BASE
// {% if global.state == 'Prepare' %}
// {% if not printer.extruder.can_extrude %}
// {action_respond_info("Extruder Temp to low heat to %3.1fC" % printer.configfile.settings.extruder.min_extrude_temp)}
// M109 S{printer.configfile.settings.extruder.min_extrude_temp}
// {% endif %}
// M83
// G1 E-{retract} F{user.speed.retract}
// {% endif %}
// CLEAR_PAUSE
// DISABLEFILAMENTSENSOR
// TURN_OFF_HEATERS
// CURRENT_NORMAL
// {% if params.PARK|default(0)|int == 1 or (not printer.pause_resume.is_paused and user.park.park_at_cancel) %}
// _TOOLHEAD_PARK P={params.PARK|default(0)} X={user.park.pause.x} Y={user.park.pause.y}
// {% endif %}
// {% if user.hw.chamber.fan %} M141 S{vent_on} {% endif %} ; vent chamber (setting fan to below ambient)
// _ADD_PRINT_TIME
// {% if params.ERROR|default(0)|int == 1 %}
// {% if user.hw.display.ena %} _LCD_KNOB COLOR=RED BLINK=0.2 {% endif %}
// _SD_PRINT_STATS R='abort'
// {% else %}
// {% if user.hw.display.ena %} _LCD_KNOB COLOR=BLUE {% endif %}
// _SD_PRINT_STATS R='canceled'
// {% endif %}
// _SD_PRINTER_STATS
// {% if user.hw.caselight.ena %} _CASELIGHT_OFF {% endif %}
// {% if user.hw.chamber.fan %} UPDATE_DELAYED_GCODE ID=_DELAY_VENT_OFF DURATION={vent_off} {% endif %}
// {% if user.hw.filter.ena %} UPDATE_DELAYED_GCODE ID=_DELAY_FILTER_OFF DURATION={filter_off} {% endif %}
// {% if user.unload_sd %} UPDATE_DELAYED_GCODE ID=_DELAY_SDCARD_RESET_FILE DURATION=10 {% endif %}
// {% if user.hw.display.ena %} UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=10  {% endif %}
// BED_MESH_CLEAR
// _COOL_WAIT MINUTES={user.filament.profile.PostPrintParkCool|float}
// SET_LED LED=sb_leds INDEX=17 RED=.2 GREEN=.5 BLUE=.2
// SET_LED LED=sb_leds INDEX=18 RED=.2 GREEN=.5 BLUE=.2
// STATUS_READY
// M118 Cancelled print, check nozzle clear.
// _general_Debug msg="CANCEL_PRINT - exiting"
// printer.configfile.settings['gcode_macro cancel_print'].description : Cancel the actual running print
// printer.configfile.settings['gcode_macro cancel_print'].rename_existing : CANCEL_PRINT_BASE
// printer.configfile.settings['gcode_macro status_meshing'].gcode :
// _general_Debug msg="status_meshing- entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set current_led_state = global.current_led_state %}
// SET_FAN_LEDS_OFF
// SET_LOGO_LEDS_OFF
// SET_NOZZLE_LEDS_OFF
// M117 off
// CHECK_PRINTER_STATE
// {% set progressbar_enabled = global.progressbar_enabled|int %}
// {% if progressbar_enabled == 0 %}
// SET_BAR_LEDS_OFF
// {% set _dummy = current_led_state.update({'bar_leds':'sb_bar_meshing'}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=current_led_state VALUE="{current_led_state}"
// SET_BAR_LEDS_ON
// {% endif %}
// {% set _dummy = current_led_state.update({'fan_leds':'sb_fan_meshing'}) %}
// {% set _dummy = current_led_state.update({'logo_leds':'sb_logo_meshing'}) %}
// {% set _dummy = current_led_state.update({'nozzle_leds':'sb_nozzle_meshing'}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=current_led_state VALUE="{current_led_state}"
// SET_FAN_LEDS_ON
// SET_LOGO_LEDS_ON
// M117 meshing
// SET_NOZZLE_LEDS_ON
// _general_Debug msg="status_meshing- exiting"
// printer.configfile.settings['gcode_macro status_meshing'].description : Helper: set the Stealthburner leds to the STATUS_MESHING LED_EFFECT
// printer.configfile.settings['gcode_macro m600'].gcode :
// _general_Debug msg="M600 - entering"
// PAUSE Y=10                        ; Pause, Y is the position in which to park the toolhead
// _general_Debug msg="M600 - exiting"
// printer.configfile.settings['gcode_macro m600'].description : Helper: Filament change
// printer.configfile.settings['gcode_macro m601'].gcode :
// _general_Debug msg="M601 - entering"
// RESUME                ; Resume
// _general_Debug msg="M601 - exiting"
// printer.configfile.settings['gcode_macro m601'].description : Helper: Resume print job after a color change
// printer.configfile.settings['gcode_macro progress_bar_leds_on'].gcode :
// _general_Debug msg="progress_bar_leds_on - entering"
// SET_BAR_LEDS_OFF
// {% for I in range(1,33, 3) %}
// SET_LED LED=progress_bar_leds RED=1 GREEN=0 BLUE=0 TRANSMIT=0 index={I}
// SET_LED LED=progress_bar_leds RED=0 GREEN=1 BLUE=0 TRANSMIT=0 index={I+1}
// SET_LED LED=progress_bar_leds RED=0 GREEN=0 BLUE=1 TRANSMIT=0 index={I+2}
// {% endfor %}
// SET_LED LED=progress_bar_leds RED=0 GREEN=0 BLUE=1 TRANSMIT=1 index=33
// _general_Debug msg="progress_bar_leds_on - exiting"
// printer.configfile.settings['gcode_macro progress_bar_leds_on'].description : Helper: Turn on the progress_bar via the SET_LED command
// printer.configfile.settings['gcode_macro _mag_probe_debug'].gcode :
// {% set message  = params.MSG %}
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set debug = user.mag_probe.debug|default(False) %}
// {% if debug %}
// { action_respond_info(message) }
// {% endif %}
// printer.configfile.settings['gcode_macro _mag_probe_debug'].description : Helper: Mag Probe; If this call which contains a message on the name of the current routine is placed at the beginning and ending of the current klicky probe routine then this can be used to determine where an error occurred (which Mag probe routine the error occurred in) if _USER_VARIABLE mag_probe.debug is set to True
// printer.configfile.settings['temperature_sensor m_y-axis_frame_temp'].pullup_resistor : 4700.0
// printer.configfile.settings['temperature_sensor m_y-axis_frame_temp'].sensor_pin : PF6
// printer.configfile.settings['temperature_sensor m_y-axis_frame_temp'].sensor_type : PartsBuilt-NTC3950-Bead_airtemp
// printer.configfile.settings['temperature_sensor m_y-axis_frame_temp'].inline_resistor : 0.0
// printer.configfile.settings['temperature_sensor m_y-axis_frame_temp'].min_temp : 0.0
// printer.configfile.settings['temperature_sensor m_y-axis_frame_temp'].gcode_id : YFrame
// printer.configfile.settings['temperature_sensor m_y-axis_frame_temp'].max_temp : 120.0
// printer.configfile.settings['gcode_macro github_backup'].gcode :
// RUN_SHELL_COMMAND CMD=backup_to_github
// printer.configfile.settings['gcode_macro github_backup'].description : Helper: run a shell script to backup printer config to your GitHub Repo
// printer.configfile.settings['neopixel tinyfan'].initial_red : 0.0
// printer.configfile.settings['neopixel tinyfan'].pin : tinyfan:LED
// printer.configfile.settings['neopixel tinyfan'].chain_count : 1
// printer.configfile.settings['neopixel tinyfan'].initial_white : 0.0
// printer.configfile.settings['neopixel tinyfan'].initial_green : 0.0
// printer.configfile.settings['neopixel tinyfan'].initial_blue : 1.0
// printer.configfile.settings['neopixel tinyfan'].color_order : ['GRB']
// printer.configfile.settings['led_effect set_logo_leds_rainbow_barf'].layers :
// static  1  0 top (1.0, 0.0, 0.0),(1.0, 0.0, 0.0),(0.0, 0.0, 1.0),(0.0, 0.0, 1.0),(0.0, 0.0, 1.0),(1.0, 0.0, 0.0),(1.0, 0.0, 0.0)
// printer.configfile.settings['led_effect set_logo_leds_rainbow_barf'].run_on_error : False
// printer.configfile.settings['led_effect set_logo_leds_rainbow_barf'].leds :
// neopixel:sb_leds (9,10,11,12,13,14,15,16)
// printer.configfile.settings['led_effect set_logo_leds_rainbow_barf'].frame_rate : 5.0
// printer.configfile.settings['led_effect set_logo_leds_rainbow_barf'].autostart : False
// printer.configfile.settings['gcode_macro m190'].rename_existing : M99190
// printer.configfile.settings['gcode_macro m190'].description : Helper: Wait for Bed Temperature with Bed Fan logic
// printer.configfile.settings['gcode_macro m190'].gcode :
// _general_Debug msg="M190 - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set S = params.S|int %}
// {% set THRESHOLD = user.bedfanvars.threshold|int %}
// {% if S >= THRESHOLD %}
// _BedFansSlow
// {% else %}
// _BedFansOff
// {% endif %}
// M140 {% for p in params
// %}{'%s%s' % (p, params[p])}{%
// endfor %}
// {% if S != 0 %}
// TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={S|int} MAXIMUM={S|int + 5}
// {% endif %}
// {% if S >= THRESHOLD %}
// _BedFansFast
// {% endif %}
// _general_Debug msg="M190 - exiting"
// printer.configfile.settings['gcode_macro rst_service'].gcode :
// _general_Debug msg="RST_SERVICE - entering"
// {% if printer.save_variables.variables.print_stats %}
// {% set print_stats = printer.save_variables.variables.print_stats %}
// {% set _dummy = print_stats.time.update({'service': 0}) %}
// SAVE_VARIABLE VARIABLE=print_stats VALUE="{print_stats}"
// {action_respond_info("Time since last service reseted to zero")}
// {% endif %}
// _general_Debug msg="RST_SERVICE - exiting"
// printer.configfile.settings['gcode_macro rst_service'].description : Reset Service interval time
// printer.configfile.settings['gcode_macro _home_z'].gcode :
// _Mag_Probe_Debug msg="_HOME_Z - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set _home_z = global._home_z %}
// ; use -10 as default to insure it error out in case the variable is not existing
// {% set z_endstop = user.homing.z_endstop|default({'x':-10,'y':-10,'z':0, 'hop':0}) %}
// {% if user.hw.mag_probe.ena %}
// {% set probe = user.mag_probe.state|default('unknown')|lower %} ; get probe state
// {% set error = "run \"_MAG_PROBE ACTION=GET_STATUS\"" if probe == 'unknown'
// else "last dock or undock failed"           if probe == 'error'
// else "not valid"                            if probe is not in ['docked','attached']
// else "" %}
// {% if error|length > 0 %}
// {action_raise_error("Home&Probe: MagProbe state %s %s" % (error,probe|upper))}
// {% endif %}
// {% endif %}
// {% if user.hw.mag_probe.ena and probe == 'attached' %}
// {action_respond_info("Home&Probe: Probe docked, remove probe first")}
// DETACH_PROBE                                          ; detach probe
// {% endif %}
// _SET_Z_CURRENT VAL=HOME                                 ; reduce Z current
// G90                                                     ; absolute position
// G0 X{z_endstop.x} Y{z_endstop.y} F{user.speed.travel}   ; move to endstop position
// G28 Z                                                   ; home Z
// G0 Z{z_endstop.z} F{user.speed.z_hop/3}                 ; lift toolhead to stop pressing on the pin
// {% if _home_z.calibrate_z_next %}
// {% set _dummy = _home_z.update({'calibrate_z_next': False }) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=_home_z VALUE="{_home_z}"
// {% else %}
// _SET_Z_CURRENT                                        ; set Z current back to cfg value
// G0 Z{user.z_hop} F{user.speed.z_hop}
// {% endif %}
// {% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %} ; set it back to relative
// _Mag_Probe_Debug msg="_HOME_Z - exiting"
// printer.configfile.settings['gcode_macro _home_z'].description : Helper: z homing
// printer.configfile.settings['gcode_macro calibrate_z'].rename_existing : CALIBRATE_Z_BASE
// printer.configfile.settings['gcode_macro calibrate_z'].description : Helper: Mag Probe; Use Mag Probe macros around the calibrate_z macro
// printer.configfile.settings['gcode_macro calibrate_z'].gcode :
// STATUS_CALIBRATING_Z
// ATTACH_PROBE
// CALIBRATE_Z_BASE {rawparams}
// DOCK_PROBE
// printer.configfile.settings['tmc2209 stepper_z3'].driver_pwm_ofs : 36
// printer.configfile.settings['tmc2209 stepper_z3'].driver_hstrt : 5
// printer.configfile.settings['tmc2209 stepper_z3'].driver_toff : 3
// printer.configfile.settings['tmc2209 stepper_z3'].sense_resistor : 0.11
// printer.configfile.settings['tmc2209 stepper_z3'].driver_hend : 0
// printer.configfile.settings['tmc2209 stepper_z3'].driver_pwm_reg : 8
// printer.configfile.settings['tmc2209 stepper_z3'].driver_iholddelay : 8
// printer.configfile.settings['tmc2209 stepper_z3'].interpolate : False
// printer.configfile.settings['tmc2209 stepper_z3'].stealthchop_threshold : 0.0
// printer.configfile.settings['tmc2209 stepper_z3'].hold_current : 2.0
// printer.configfile.settings['tmc2209 stepper_z3'].driver_tbl : 2
// printer.configfile.settings['tmc2209 stepper_z3'].driver_pwm_autograd : True
// printer.configfile.settings['tmc2209 stepper_z3'].driver_pwm_grad : 14
// printer.configfile.settings['tmc2209 stepper_z3'].run_current : 0.3
// printer.configfile.settings['tmc2209 stepper_z3'].uart_address : 0
// printer.configfile.settings['tmc2209 stepper_z3'].uart_pin : PE4
// printer.configfile.settings['tmc2209 stepper_z3'].driver_pwm_autoscale : True
// printer.configfile.settings['tmc2209 stepper_z3'].driver_tpowerdown : 20
// printer.configfile.settings['tmc2209 stepper_z3'].driver_pwm_freq : 1
// printer.configfile.settings['tmc2209 stepper_z3'].driver_pwm_lim : 12
// printer.configfile.settings['tmc2209 stepper_z3'].driver_sgthrs : 0
// printer.configfile.settings['led_effect sb_fan_busy'].layers :
// breathing  3 1 top (1,0,0)
// printer.configfile.settings['led_effect sb_fan_busy'].leds :
// neopixel:sb_leds (1-8)
// printer.configfile.settings['led_effect sb_fan_busy'].autostart : False
// printer.configfile.settings['led_effect sb_fan_busy'].frame_rate : 5.0
// printer.configfile.settings['led_effect sb_fan_busy'].run_on_error : False
// printer.configfile.settings['led_effect sb_nozzle_part_ready'].layers :
// breathing  3 1 top (0.0, 1.0, 0.0)
// printer.configfile.settings['led_effect sb_nozzle_part_ready'].run_on_error : False
// printer.configfile.settings['led_effect sb_nozzle_part_ready'].leds :
// neopixel:sb_leds (17,18)
// printer.configfile.settings['led_effect sb_nozzle_part_ready'].frame_rate : 2.0
// printer.configfile.settings['led_effect sb_nozzle_part_ready'].autostart : False
// printer.configfile.settings['gcode_macro _set_logo_leds'].gcode :
// _general_Debug msg="_SET_LOGO_LEDS - entering"
// {% set r = params.R|default(0)|float %}
// {% set g = params.G|default(0)|float %}
// {% set b = params.B|default(0)|float %}
// {% set w = params.W|default(0)|float %}
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set led = user.sb_vars.logo_led_name %}
// {% set idx = user.sb_vars.logo_idx %}
// _SET_SB_LEDS LED={led} R={r} G={g} B={b} W={w} IDX="{idx}"
// _general_Debug msg="_SET_LOGO_LEDS - exiting"
// printer.configfile.settings['gcode_macro _set_logo_leds'].description : Helper: Sets the color of the stealthburner LOGO leds
// printer.configfile.settings['gcode_macro _filter_on'].gcode :
// _general_Debug msg="_FILTER_ON - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// _SET_FILTER S={user.peripheral.filter.on_val}
// _general_Debug msg="_FILTER_ON - exiting"
// printer.configfile.settings['gcode_macro _filter_on'].description : Helper: Nevermore on
// printer.configfile.settings['gcode_macro current_high'].gcode :
// _general_Debug msg="CURRENT_HIGH - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// M117 Increased motor currents.
// SET_TMC_CURRENT STEPPER=stepper_x CURRENT={user.current_control.PrintCurrentXY|float}
// SET_TMC_CURRENT STEPPER=stepper_y CURRENT={user.current_control.PrintCurrentXY|float}
// SET_TMC_CURRENT STEPPER=stepper_z CURRENT={user.current_control.PrintCurrentZ|float}
// SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT={user.current_control.PrintCurrentZ|float}
// SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT={user.current_control.PrintCurrentZ|float}
// SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT={user.current_control.PrintCurrentZ|float}
// _general_Debug msg="CURRENT_HIGH - exiting"
// printer.configfile.settings['gcode_macro current_high'].description : Helper: Raises stepper current for printing routine
// printer.configfile.settings.extruder.control : pid
// printer.configfile.settings.extruder.pullup_resistor : 4700.0
// printer.configfile.settings.extruder.max_extrude_only_velocity : 79.8243241107
// printer.configfile.settings.extruder.rotation_distance : 22.6789511
// printer.configfile.settings.extruder.gear_ratio : ((50.0, 10.0),)
// printer.configfile.settings.extruder.max_extrude_only_distance : 50.0
// printer.configfile.settings.extruder.sensor_type : ATC-Semitec-104NT-4-R025H42G
// printer.configfile.settings.extruder.min_temp : 10.0
// printer.configfile.settings.extruder.enable_pin : !EBBCan: PD2
// printer.configfile.settings.extruder.pressure_advance : 0.055
// printer.configfile.settings.extruder.min_extrude_temp : 170.0
// printer.configfile.settings.extruder.max_extrude_cross_section : 0.64
// printer.configfile.settings.extruder.pwm_cycle_time : 0.1
// printer.configfile.settings.extruder.dir_pin : !EBBCan: PD1
// printer.configfile.settings.extruder.pid_kp : 37.239
// printer.configfile.settings.extruder.instantaneous_corner_velocity : 1.0
// printer.configfile.settings.extruder.full_steps_per_rotation : 200
// printer.configfile.settings.extruder.heater_pin : EBBCan: PB13
// printer.configfile.settings.extruder.smooth_time : 1.0
// printer.configfile.settings.extruder.pid_ki : 5.282
// printer.configfile.settings.extruder.filament_diameter : 1.75
// printer.configfile.settings.extruder.sensor_pin : EBBCan: PA3
// printer.configfile.settings.extruder.nozzle_diameter : 0.4
// printer.configfile.settings.extruder.pressure_advance_smooth_time : 0.03
// printer.configfile.settings.extruder.step_pin : EBBCan: PD0
// printer.configfile.settings.extruder.inline_resistor : 0.0
// printer.configfile.settings.extruder.max_power : 1.0
// printer.configfile.settings.extruder.microsteps : 32
// printer.configfile.settings.extruder.max_temp : 270.0
// printer.configfile.settings.extruder.max_extrude_only_accel : 798.243241107
// printer.configfile.settings.extruder.pid_kd : 65.635
// printer.configfile.settings['thermistor ntcalug03-mini-lug'].resistance2 : 2483.8
// printer.configfile.settings['thermistor ntcalug03-mini-lug'].resistance3 : 336.75
// printer.configfile.settings['thermistor ntcalug03-mini-lug'].resistance1 : 32624.0
// printer.configfile.settings['thermistor ntcalug03-mini-lug'].temperature2 : 60.0
// printer.configfile.settings['thermistor ntcalug03-mini-lug'].temperature3 : 125.0
// printer.configfile.settings['thermistor ntcalug03-mini-lug'].temperature1 : 0.0
// printer.configfile.settings['gcode_macro nzl_pid'].gcode :
// _general_Debug msg="NZL_PID - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}    ;if debug enabled display message
// {% if printer.idle_timeout.state == "Printing" or printer.pause_resume.is_paused %}
// {action_respond_info("Cannot do that while printing")}
// {% else %}
// {% set defaultTN = user.filament.profile.defaultTempNozzle|float %}
// {% set defaultTB = user.filament.profile.defaultTempBed|float %}
// {% set FAN_SPEED = params.FAN_SPEED|default(64)|float %}
// {% set SOAK_MINUTES = params.SOAK_MINUTES|default(12)|float %}
// {% set BED_TEMP = params.BED_TEMP|default(defaultTB)|float %}
// {% set NZL_TEMP = params.NZL_TEMP|default(defaultTN)|float %}
// {% set X_MID = printer.configfile.config.stepper_x.position_max|float / 2.0 %}
// {% set Y_MID = printer.configfile.config.stepper_y.position_max|float / 2.0 %}
// {% set defaultENCLOSURE = user.filament.profile.defaultEnclosure|float %}
// {% set ENCLOSURE_TEMP = params.ENCLOSURE_TEMP|default(defaultENCLOSURE)|float %}
// G90                                                                                       ;Absolute Positioning
// M117 Performing initial homing.
// G32                                                                                       ;Clears bed-mesh and performs G28, ATTACH_PROBE, QGL, DOCK_PROBE
// G1 Z5 Y{Y_MID} X{X_MID} F4000                                                             ;move to center of bed
// M117 Bringing bed to temperature.
// M141 S{ENCLOSURE_TEMP}                                                                    ;set chamber temperature for Exhaust fan and Bed fans
// M190 S{BED_TEMP}                                                                          ;Wait for bed temp within 5 degrees
// _HEAT_WAIT MINUTES={SOAK_MINUTES} MSG="Pre NZL_PID Soaking..."                            ;Heating cycle waiting routine
// SET_LED LED=sb_leds INDEX=17 RED=.5 GREEN=.5 BLUE=0
// SET_LED LED=sb_leds INDEX=18 RED=.5 GREEN=.5 BLUE=0
// M106 S{FAN_SPEED}                                                                         ;Part Cooling Fan On and start monitoring the tach signal
// M117 Starting PID calibration.
// PID_CALIBRATE HEATER=extruder TARGET={NZL_TEMP}                                           ;PID tune the extruder
// M117 Finished PID calibration.
// TURN_OFF_HEATERS                                                                          ;Turn off all heaters,bedfans and set temperature_fan chamber taget to 35C
// G90                                                                                       ;Absolute Positioning
// PARK_UpperRight                                                                           ;Parks nozzle at top front-right
// M18 X Y E                                                                                 ;Disable Stepper motor
// SET_LED LED=sb_leds INDEX=17 RED=.2 GREEN=.5 BLUE=.2
// SET_LED LED=sb_leds INDEX=18 RED=.2 GREEN=.5 BLUE=.2
// _COOL_WAIT MINUTES={user.filament.profile.PostPrintParkCool|float}                        ;Cooling cycle waiting routine
// STATUS_READY                                                                              ;SB LED status
// SAVE_CONFIG
// {% endif %}
// _general_Debug msg="NZL_PID - exiting"                                                        ;if debug enabled display message
// printer.configfile.settings['gcode_macro nzl_pid'].description : Helper: Performs NOZZLE PID tune
// printer.configfile.settings.board_pins.mcu : ('mcu',)
// printer.configfile.settings.board_pins.aliases : (('EXP1_1', 'PE8'), ('EXP1_2', 'PE7'), ('EXP1_3', 'PE9'), ('EXP1_4', 'PE10'), ('EXP1_5', 'PE12'), ('EXP1_6', 'PE13'), ('EXP1_7', 'PE14'), ('EXP1_8', 'PE15'), ('EXP1_9', '<GND>'), ('EXP1_10', '<5V>'), ('EXP2_1', 'PA6'), ('EXP2_2', 'PA5'), ('EXP2_3', 'PB1'), ('EXP2_4', 'PA4'), ('EXP2_5', 'PB2'), ('EXP2_6', 'PA7'), ('EXP2_7', 'PC15'), ('EXP2_8', '<RST>'), ('EXP2_9', '<GND>'), ('EXP2_10', '<5V>'))
// printer.configfile.settings['gcode_macro fake_position'].gcode :
// _general_Debug msg="FAKE_POSITION - entering"
// SET_KINEMATIC_POSITION X=30 Y=30 Z=30
// _general_Debug msg="FAKE_POSITION - exiting"
// printer.configfile.settings['gcode_macro fake_position'].description : Helper: Allows the printer to move the toolhead without homing first!
// printer.configfile.settings['gcode_macro chk_heat_expansion'].gcode :
// BED_MESH_CLEAR
// CURRENT_HIGH
// G28
// ATTACH_PROBE_LOCK
// _QUAD_GANTRY_LEVEL
// DOCK_PROBE_UNLOCK
// G28 Z
// G90
// {% set X_MID = printer.configfile.config["stepper_x"]["position_max"]|float / 2.0 %}
// {% set Y_MID = printer.configfile.config["stepper_y"]["position_max"]|float / 2.0 %}
// G0 X{X_MID} Y{Y_MID} F4000
// {% for LOOP in range(0, 9) %}
// M117 Testing... {i}.
// _TEST_PROBE0 TEST_LOOP={LOOP}
// {% endfor %}
// M140 S110
// {% for LOOP in range(10, 1000) %}
// M117 Testing... {i}.
// _TEST_PROBE0 TEST_LOOP={LOOP}
// {% endfor %}
// TURN_OFF_HEATERS
// CURRENT_NORMAL
// G90
// M402
// _COOL_WAIT MINUTES={printer["gcode_macro globalvariables"].postprintcool|float}
// PARK_UpperRight
// M18 X Y E
// printer.configfile.settings['gcode_macro chk_heat_expansion'].description : Helper: CHK_HEAT_EXPANSION macro; continuously records the z-height during a heat-soak cycle
// printer.configfile.settings.adxl345.cs_pin : EBBCan: PB12
// printer.configfile.settings.adxl345.spi_software_miso_pin : EBBCan: PB2
// printer.configfile.settings.adxl345.spi_software_sclk_pin : EBBCan: PB10
// printer.configfile.settings.adxl345.axes_map : ('x', 'y', 'z')
// printer.configfile.settings.adxl345.rate : 3200
// printer.configfile.settings.adxl345.spi_speed : 5000000
// printer.configfile.settings.adxl345.spi_software_mosi_pin : EBBCan: PB11
// printer.configfile.settings['gcode_macro _magprobe_status_busy'].gcode :
// {% if printer['gcode_macro status_busy'] is defined %}
// _Mag_Probe_Debug msg="_magprobe_status_busy activating the LED STATUS_BUSY"
// STATUS_BUSY
// {% endif %}
// printer.configfile.settings['gcode_macro _magprobe_status_busy'].description : Helper: Mag Probe, enable STATUS_BUSY LED state
// printer.configfile.settings['gcode_macro _set_bar_leds'].gcode :
// _general_Debug msg="_SET_BAR_LEDS - entering"
// {% set r = params.R|default(0)|float %}
// {% set g = params.G|default(0)|float %}
// {% set b = params.B|default(0)|float %}
// {% set w = params.W|default(0)|float %}
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set led = user.sb_vars.bar_led_name %}
// {% set idx = user.sb_vars.bar_idx %}
// _SET_SB_LEDS LED={led} R={r} G={g} B={b} W={w} IDX="{idx}"
// _general_Debug msg="_SET_BAR_LEDS - exiting"
// printer.configfile.settings['gcode_macro _set_bar_leds'].description : Helper: Sets the color of the progress bar LEDs
// printer.configfile.settings['gcode_macro nozzleclean'].gcode :
// _general_Debug msg="NOZZLECLEAN - entering"
// {% set user   = printer['gcode_macro _USER_VARIABLE'] %}
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set pos    = user.purge.purge %}
// {% set move_z = [user.z_hop,printer.toolhead.position.z]|max %} ; calc movement high
// {% set bucket_pos = global.bucket_pos %}
// SET_GCODE_OFFSET Z=0.0
// {% if user.hw.display.ena %}
// _PRINT_AR T="Clean Nozzle" SHOW_LCD=true
// {% else %}
// _PRINT_AR T="Clean Nozzle"
// {% endif %}
// _CG28                                                 ; home if not already homed
// STATUS_CLEANING                                       ; set status LEDs
// G90                                                   ; absolute positioning
// G1 Z{move_z} F{user.speed.z_hop}                      ; move head up
// G1 Y{pos.y} F{user.speed.travel}                      ; move to purge bucket location
// G1 X{pos.x[bucket_pos]} F{user.speed.travel}          ; move to purge bucket location
// G1 Z{pos.z} F{user.speed.z_hop}                       ; lower Z
// {% if user.purge.enable_purge %}
// {% if not printer.extruder.can_extrude %}
// {action_respond_info("Extruder Temp to low, heating to %3.1fC" % printer.configfile.settings.extruder.min_extrude_temp)}
// M109 S{printer.configfile.settings.extruder.min_extrude_temp}
// {% endif %}
// G92 E0                               ; reset Extruder
// M83                                  ; relative extrusion
// G1 E2 F500                           ; purge filament
// G1 E2 F800                           ; purge filament
// G1 E-1 F800                          ; retract filament
// G4 P500
// {% endif %}
// _WIPE
// {% if user.purge.enable_purge %}
// M109 S{printer.extruder.target} ; restore old extruder temperature
// {% endif %}
// {% if user.hw.display.ena %} UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=1  {% endif %}
// {% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %} ; set it back to relative
// {% if user.purge.enable_purge %}
// {% if printer.gcode_move.absolute_extrude %}         M82 {% endif %} ; set it back to absolute
// {% endif %}
// SET_GCODE_OFFSET Z={printer.gcode_move.homing_origin.z} MOVE=1
// _general_Debug msg="NOZZLECLEAN - exiting"
// printer.configfile.settings['gcode_macro nozzleclean'].description : Helper: Move to bucket and purge and scrub nozzle
// printer.configfile.settings['gcode_macro chamber_lights_on'].gcode :
// _general_Debug msg="Chamber_Lights_ON - entering"
// WLED_ON STRIP=Chamber_Lights
// _general_Debug msg="Chamber_Lights_ON - exiting"
// printer.configfile.settings['gcode_macro chamber_lights_on'].description : Helper: Turn on the WLED server that controls the Chamber RGB lights
// printer.configfile.settings['led_effect sb_logo_homing'].layers :
// gradient 1.00 2.00 top (0.00,0.00,1.00),(0.00,0.00,0.00),(1.00,0.30,0.00)
// printer.configfile.settings['led_effect sb_logo_homing'].run_on_error : False
// printer.configfile.settings['led_effect sb_logo_homing'].leds :
// neopixel:sb_leds (9-16)
// printer.configfile.settings['led_effect sb_logo_homing'].frame_rate : 5.0
// printer.configfile.settings['led_effect sb_logo_homing'].autostart : False
// printer.configfile.settings['gcode_macro _filament_ready'].gcode :
// _general_Debug msg="_FILAMENT_READY - entering"
// {% set user         = printer['gcode_macro _USER_VARIABLE'] %}
// {% set NZLD         = printer.configfile.config.extruder.nozzle_diameter|float %}
// {% set purgeRetract = user.filament.profile.purgeRetract|float %}
// SET_VELOCITY_LIMIT ACCEL={user.filament.profile.LimitAccel|float} ACCEL_TO_DECEL={user.filament.profile.LimitDecel|float}
// G1 X0 Y19.8 Z0.3 F1500.0
// G1 E{(12.5 * NZLD)} F3600
// M400
// G1 X0 Y0 Z0.3 F1500.0
// G1 X130 Y0.0 Z0.3 F1500.0 E{(37.5 * NZLD)}
// G1 X130 Y0.3 Z0.3 F5000.0
// G1 X010 Y0.3 Z0.3 F1500.0 E{(75.0 * NZLD)}
// M400
// G92 E0
// G1 E-{purgeRetract} F3000
// G1 Z5.0 F3000
// G1 Y10 F4000
// _general_Debug msg="_FILAMENT_READY - exiting"
// printer.configfile.settings['gcode_macro _filament_ready'].description : Helper: Performs filament specific purge line and readies for print
// printer.configfile.settings.idle_timeout.gcode :
// {% if printer.webhooks.state|lower == 'ready' %}
// {% if printer.pause_resume.is_paused|lower == 'false' %}
// {action_respond_info("TURN_OFF_HEATERS: Execute Idle Timeout")}
// TURN_OFF_HEATERS
// {% endif %}
// {% endif %}
// printer.configfile.settings.idle_timeout.timeout : 7200.0
// printer.configfile.settings['gcode_macro _wait_loop'].gcode :
// _general_Debug msg="_WAIT_Loop - entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set count = global.wait_variable.count|float %}
// {% set duration =  global.wait_variable.duration|float %}
// STATUS_BUSY
// SET_NOZZLE_LEDS_OFF
// UPDATE_DELAYED_GCODE ID=WAIT_Delayed DURATION={duration}
// {% if  count % 2 == 0 %}
// SET_LED LED=sb_leds INDEX=17 RED=.5 GREEN=0 BLUE=0
// SET_LED LED=sb_leds INDEX=18 RED=0 GREEN=0 BLUE=.5
// {% else %}
// SET_LED LED=sb_leds INDEX=17 RED=0 GREEN=0 BLUE=.5
// SET_LED LED=sb_leds INDEX=18 RED=.5 GREEN=0 BLUE=0
// {% endif %}
// _general_Debug msg="_WAIT_Loop - exiting"
// printer.configfile.settings['gcode_macro _wait_loop'].description : Helper: a non blocking wait (this is the wait loop)
// printer.configfile.settings['delayed_gcode prerun'].gcode :
// _general_Debug msg=" prerun- entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set current_led_state = global.current_led_state %}
// {% set z_offset = printer.configfile.config.probe.z_offset|float %}
// {% set nozzle_diameter = printer.configfile.config.extruder.nozzle_diameter|float %}
// {% set pressure_advance = printer.extruder.pressure_advance|float %}
// {% set pressure_advance_smooth_time = printer.configfile.config.extruder.pressure_advance_smooth_time|float %}
// M117 Printer online.
// TURN_OFF_HEATERS
// STOP_LED_EFFECTS
// SET_FAN_LEDS_ON
// SET_LOGO_LEDS_ON
// CHECK_PRINTER_STATE
// {% set progressbar_enabled = global.progressbar_enabled|int %}
// {% if progressbar_enabled == 0 %}
// {% set _dummy = current_led_state.update({'bar_leds':'set_bar_leds_rainbow'}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=current_led_state VALUE="{current_led_state}"
// SET_BAR_LEDS_ON
// {% endif %}
// {% for s in range(0, 30) %}
// SET_LED LED=sb_leds INDEX=17 RED=1 GREEN=0 BLUE=1
// SET_LED LED=sb_leds INDEX=18 RED=.5 GREEN=.5 BLUE=.5
// G4 P100
// SET_LED LED=sb_leds INDEX=17 RED=.5 GREEN=.5 BLUE=.5
// SET_LED LED=sb_leds INDEX=18 RED=1 GREEN=0 BLUE=1
// G4 P50
// {% endfor %}
// IS_PROBE_ATTACHED_AT_BOOT
// SET_VELOCITY_LIMIT ACCEL={user.speed.NPLimitAccel|float} ACCEL_TO_DECEL={user.speed.NPLimitDecel|float}
// M118 Z-Offset is set at {z_offset}mm.
// M118 Nozzle diameter is set at {nozzle_diameter}mm.
// M118 Pressure Advance is set at {pressure_advance}.
// M118 Pressure advance Smooth Time is set at {pressure_advance_smooth_time}.
// FILAMENT_ABOUT
// {% set _dummy = current_led_state.update({'nozzle_leds':'set_nozzle_leds_white'}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=current_led_state VALUE="{current_led_state}"
// SET_NOZZLE_LEDS_ON
// CASELIGHT
// _general_Debug msg=" prerun- exiting"
// printer.configfile.settings['delayed_gcode prerun'].initial_duration : 0.0
// printer.configfile.settings['gcode_macro _part_cooling_fan_check'].gcode :
// _general_Debug msg="_PART_COOLING_FAN_CHECK - entering"                     ;if debug enabled display message
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set fancheckvars = global.fancheckvars %}
// {% set pc_stop_count = global.fancheckvars.pc_stop_count|int %}
// {% set min_rpm = 600|float %}
// {% set max_consecutive_stops = 3 %}
// {% set rpm = printer.fan.rpm|float %}
// {% set he_target = printer.extruder.target|float %}
// {% set he_temp = printer.extruder.temperature|float %}
// {% set fan_on_temp = printer.configfile.settings['heater_fan fan_hotend'].heater_temp|float %}
// {% set pc_enabled = global.fancheckvars.part_cooling_fan_enabled|int %}
// {% if (he_target >= fan_on_temp) and (rpm < min_rpm) and (he_temp >= fan_on_temp) and (pc_enabled) %}
// {% set _dummy = fancheckvars.update({'pc_stop_count':(pc_stop_count + 1)}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=fancheckvars VALUE="{fancheckvars}"
// M118 WARNING: Part Cooling Fan stoppage detected ({pc_stop_count+1}/{max_consecutive_stops}).
// M400
// {% if global.fancheckvars.pc_stop_count|int >= max_consecutive_stops-1 %}
// _FAN_STOPPAGE_ROUTINE
// {% endif %}
// {% else %}
// {% set _dummy = fancheckvars.update({'pc_stop_count':0}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=fancheckvars VALUE="{fancheckvars}"
// {% endif %}
// _general_Debug msg="_PART_COOLING_FAN_CHECK - exiting"                     ;if debug enabled display message
// printer.configfile.settings['gcode_macro _part_cooling_fan_check'].description : Helper: Checks to see if the part cooling fan has failed
// printer.configfile.settings['mcu tinyfan'].baud : 250000
// printer.configfile.settings['mcu tinyfan'].restart_method : command
// printer.configfile.settings['mcu tinyfan'].serial : /dev/serial/by-id/usb-Klipper_rp2040_E66138935F916E28-if00
// printer.configfile.settings['mcu tinyfan'].max_stepper_error : 2.5e-05
// printer.configfile.settings['led_effect sb_logo_calibrating_z'].layers :
// breathing  3 1 top (1.00, 0.25, 0.00)
// printer.configfile.settings['led_effect sb_logo_calibrating_z'].leds :
// neopixel:sb_leds (9-16)
// printer.configfile.settings['led_effect sb_logo_calibrating_z'].autostart : False
// printer.configfile.settings['led_effect sb_logo_calibrating_z'].frame_rate : 5.0
// printer.configfile.settings['led_effect sb_logo_calibrating_z'].run_on_error : False
// printer.configfile.settings['gcode_macro m900'].gcode :
// _general_Debug msg="M900 - entering"
// SET_PRESSURE_ADVANCE ADVANCE={params.K|default(0)}
// _general_Debug msg="M900 - exiting"
// printer.configfile.settings['gcode_macro m900'].description : Helper: Set pressure advance
// printer.configfile.settings['led_effect sb_nozzle_homing'].layers :
// gradient 1.00 1.00 top (0.00,0.00,1.00),(0.00,0.00,0.00),(1.00,0.28,0.00)
// printer.configfile.settings['led_effect sb_nozzle_homing'].leds :
// neopixel:sb_leds (17,18)
// printer.configfile.settings['led_effect sb_nozzle_homing'].autostart : False
// printer.configfile.settings['led_effect sb_nozzle_homing'].run_on_error : False
// printer.configfile.settings['led_effect sb_nozzle_homing'].frame_rate : 2.0
// printer.configfile.settings['temperature_sensor o_electronic_case_temp'].pullup_resistor : 4700.0
// printer.configfile.settings['temperature_sensor o_electronic_case_temp'].sensor_pin : tinyfan: gpio26
// printer.configfile.settings['temperature_sensor o_electronic_case_temp'].sensor_type : FYSETC-HT-NTC100K-3950_airtemp
// printer.configfile.settings['temperature_sensor o_electronic_case_temp'].inline_resistor : 0.0
// printer.configfile.settings['temperature_sensor o_electronic_case_temp'].min_temp : -200.0
// printer.configfile.settings['temperature_sensor o_electronic_case_temp'].gcode_id : Case_Temp
// printer.configfile.settings['temperature_sensor o_electronic_case_temp'].max_temp : 125.0
// printer.configfile.settings['gcode_macro set_bar_leds_by_name'].gcode :
// _general_Debug msg="SET_BAR_LEDS_BY_NAME - entering"
// {% set color_name = params.COLOR %}
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set color = global.sb_vars.colors[color_name|lower] %}
// _SET_BAR_LEDS R={color.r} G={color.g} B={color.b} W={color.w}
// _general_Debug msg="SET_BAR_LEDS_BY_NAME - exiting"
// printer.configfile.settings['gcode_macro set_bar_leds_by_name'].description : Helper: Sets the color of the progress bar LEDs by only using the name of the color
// printer.configfile.settings['gcode_macro msg_probe_docked'].gcode :
// M118 Euclid probe is in the DOCK!!
// printer.configfile.settings['gcode_macro msg_probe_docked'].description : Helper: Euclid Probe; prints an message indicating the output of a QUERY_PROBE command when the Euclid probe is docked
// printer.configfile.settings['led_effect sb_logo_leveling'].layers :
// breathing  3 1 top (0.5, 0.1, 0.4)
// printer.configfile.settings['led_effect sb_logo_leveling'].run_on_error : False
// printer.configfile.settings['led_effect sb_logo_leveling'].leds :
// neopixel:sb_leds (9-16)
// printer.configfile.settings['led_effect sb_logo_leveling'].autostart : False
// printer.configfile.settings['led_effect sb_logo_leveling'].frame_rate : 5.0
// printer.configfile.settings.extended_template.path : /home/pi/klipper_config/ACTIVE/CONFIG/KLIPPER_FUNCTIONS/function_config.yaml
// printer.configfile.settings['filament_motion_sensor runout'].detection_length : 14.0
// printer.configfile.settings['filament_motion_sensor runout'].switch_pin : ^PG12
// printer.configfile.settings['filament_motion_sensor runout'].event_delay : 3.0
// printer.configfile.settings['filament_motion_sensor runout'].insert_gcode :
// M117 Insert Detected
// {action_respond_info("RUNOUT: Filament inserted")}
// printer.configfile.settings['filament_motion_sensor runout'].runout_gcode :
// M117 Runout Detected
// {action_respond_info("RUNOUT: Filament runout")}
// PAUSE
// printer.configfile.settings['filament_motion_sensor runout'].pause_on_runout : False
// printer.configfile.settings['filament_motion_sensor runout'].pause_delay : 0.5
// printer.configfile.settings['filament_motion_sensor runout'].extruder : extruder
// printer.configfile.settings['led_effect sb_logo_meshing'].layers :
// breathing  3 1 top (1.0, 1.0, 0.0)
// printer.configfile.settings['led_effect sb_logo_meshing'].leds :
// neopixel:sb_leds (9-16)
// printer.configfile.settings['led_effect sb_logo_meshing'].frame_rate : 5.0
// printer.configfile.settings['led_effect sb_logo_meshing'].run_on_error : False
// printer.configfile.settings['led_effect sb_logo_meshing'].autostart : False
// printer.configfile.settings['gcode_macro rst_filter'].gcode :
// _general_Debug msg="RST_FILTER - entering"
// {% if printer.save_variables.variables.print_stats %}
// {% set print_stats = printer.save_variables.variables.print_stats %}
// {% set _dummy = print_stats.time.update({'filter': 0}) %}
// SAVE_VARIABLE VARIABLE=print_stats VALUE="{print_stats}"
// {action_respond_info("Flter used time reseted to zero")}
// {% endif %}
// _general_Debug msg="RST_FILTER - exiting"
// printer.configfile.settings['gcode_macro rst_filter'].description : Reset Nevermore interval time
// printer.configfile.settings['delayed_gcode _delay_filter_off'].gcode :
// _general_Debug msg="_DELAY_FILTER_OFF - entering"
// {% if printer.print_stats.state|lower != "paused" and printer.print_stats.state|lower != "printing" %}
// _SET_FILTER
// _FILTER_INFO
// {% endif %}
// _general_Debug msg="_DELAY_FILTER_OFF - exiting"
// printer.configfile.settings['delayed_gcode _delay_filter_off'].initial_duration : 0.0
// printer.configfile.settings['delayed_gcode _lights_ready'].gcode :
// _general_Debug msg="_lights_ready - entering"
// LIGHTS STATUS=complete
// _general_Debug msg="_lights_ready - exiting"
// printer.configfile.settings['delayed_gcode _lights_ready'].initial_duration : 0.0
// printer.configfile.settings['gcode_macro info_bedfans'].gcode :
// _general_Debug msg="info_bedfans - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set chambertemp = printer["temperature_sensor J_Chamber_ZDragChain_PT100"].temperature|float %}
// {% set threshold = user.bedfanvars.threshold|int %}
// {% set defaultenclosure = user.filament.profile.defaultEnclosure %}
// {% set flag = global.bedfanvar.flag|int %}
// {% set lasttemp = global.bedfanvars.lasttemp %}
// {% set offset = user.bedfanvars.offset|int %}
// {% set string1 = "INFO_BEDFANS <+++++++++++++++++" %}
// {% set string1 = string1 ~ "\nHeater_threshold = %d;" %}
// {% set string1 = string1 ~ "\nChamberTEMP_threshold = %.2f;" %}
// {% set string1 = string1 ~ "\nFLAG = %d;" %}
// {% set string1 = string1 ~ "\nLAST_CHAMBER_TEMP = %.2f;" %}
// {% set string1 = string1 ~ "\ncurrent_CHAMBER_TEMP = %.2f;" %}
// {% set string1 = string1 ~ "\nOFFSET = %d;" %}
// {% set string1 = string1 ~ "\nEnd of INFO_BEDFANS +++++++++++++++++>" %}
// {action_respond_info(string1 % (threshold, defaultenclosure, flag, lasttemp, chambertemp, offset)) }
// _general_Debug msg="info_bedfans - exiting"
// printer.configfile.settings['gcode_macro info_bedfans'].description : Helper: Display information on Bed Fan variables
// printer.configfile.settings['output_pin lock_m106'].value : 0.0
// printer.configfile.settings['output_pin lock_m106'].shutdown_value : 0.0
// printer.configfile.settings['output_pin lock_m106'].pwm : False
// printer.configfile.settings['output_pin lock_m106'].maximum_mcu_duration : 0.0
// printer.configfile.settings['output_pin lock_m106'].pin : rpi: gpio16
// printer.configfile.settings['gcode_macro output_probe_message'].gcode :
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set mag_probe = user.mag_probe %}
// {% if mag_probe.state == 'unknown' %}
// {% set probe_attached = undefined %}
// {% elif mag_probe.state == 'attached' %}
// {% set probe_attached = True %}
// {% elif mag_probe.state == 'docked' %}
// {% set probe_attached = False %}
// {% endif %}
// {% if probe_attached and (not printer.probe.last_query) %}
// MSG_PROBE_ATTACHED
// {% elif (not probe_attached) and  printer.probe.last_query %}
// MSG_PROBE_DOCKED
// {% else %}
// M118 "Confilicting information about Probe location, run '_MAG_PROBE ACTION='get_status' RESPOND=1' command"
// {% endif %}
// printer.configfile.settings['gcode_macro output_probe_message'].description : Helper: Euclid Probe; prints an message indicating the output of a GET_PROBE_STATUS command
// printer.configfile.settings['tmc2209 stepper_z1'].driver_pwm_ofs : 36
// printer.configfile.settings['tmc2209 stepper_z1'].driver_hstrt : 5
// printer.configfile.settings['tmc2209 stepper_z1'].driver_toff : 3
// printer.configfile.settings['tmc2209 stepper_z1'].sense_resistor : 0.11
// printer.configfile.settings['tmc2209 stepper_z1'].uart_address : 0
// printer.configfile.settings['tmc2209 stepper_z1'].driver_pwm_reg : 8
// printer.configfile.settings['tmc2209 stepper_z1'].driver_iholddelay : 8
// printer.configfile.settings['tmc2209 stepper_z1'].interpolate : False
// printer.configfile.settings['tmc2209 stepper_z1'].uart_pin : PC7
// printer.configfile.settings['tmc2209 stepper_z1'].hold_current : 2.0
// printer.configfile.settings['tmc2209 stepper_z1'].driver_tbl : 2
// printer.configfile.settings['tmc2209 stepper_z1'].driver_pwm_autograd : True
// printer.configfile.settings['tmc2209 stepper_z1'].driver_pwm_grad : 14
// printer.configfile.settings['tmc2209 stepper_z1'].run_current : 0.3
// printer.configfile.settings['tmc2209 stepper_z1'].driver_hend : 0
// printer.configfile.settings['tmc2209 stepper_z1'].stealthchop_threshold : 0.0
// printer.configfile.settings['tmc2209 stepper_z1'].driver_pwm_autoscale : True
// printer.configfile.settings['tmc2209 stepper_z1'].driver_tpowerdown : 20
// printer.configfile.settings['tmc2209 stepper_z1'].driver_pwm_freq : 1
// printer.configfile.settings['tmc2209 stepper_z1'].driver_pwm_lim : 12
// printer.configfile.settings['tmc2209 stepper_z1'].driver_sgthrs : 0
// printer.configfile.settings['gcode_macro reboot'].gcode :
// _general_Debug msg="REBOOT - entering"
// {action_call_remote_method("reboot_machine")}
// _general_Debug msg="REBOOT - exiting"
// printer.configfile.settings['gcode_macro reboot'].description : Helper: Reboot the printer
// printer.configfile.settings['tmc2209 stepper_z2'].driver_pwm_ofs : 36
// printer.configfile.settings['tmc2209 stepper_z2'].driver_hstrt : 5
// printer.configfile.settings['tmc2209 stepper_z2'].driver_toff : 3
// printer.configfile.settings['tmc2209 stepper_z2'].sense_resistor : 0.11
// printer.configfile.settings['tmc2209 stepper_z2'].driver_hend : 0
// printer.configfile.settings['tmc2209 stepper_z2'].driver_pwm_reg : 8
// printer.configfile.settings['tmc2209 stepper_z2'].driver_iholddelay : 8
// printer.configfile.settings['tmc2209 stepper_z2'].interpolate : False
// printer.configfile.settings['tmc2209 stepper_z2'].stealthchop_threshold : 0.0
// printer.configfile.settings['tmc2209 stepper_z2'].hold_current : 2.0
// printer.configfile.settings['tmc2209 stepper_z2'].driver_tbl : 2
// printer.configfile.settings['tmc2209 stepper_z2'].driver_pwm_autograd : True
// printer.configfile.settings['tmc2209 stepper_z2'].driver_pwm_grad : 14
// printer.configfile.settings['tmc2209 stepper_z2'].run_current : 0.3
// printer.configfile.settings['tmc2209 stepper_z2'].uart_address : 0
// printer.configfile.settings['tmc2209 stepper_z2'].uart_pin : PE1
// printer.configfile.settings['tmc2209 stepper_z2'].driver_pwm_autoscale : True
// printer.configfile.settings['tmc2209 stepper_z2'].driver_tpowerdown : 20
// printer.configfile.settings['tmc2209 stepper_z2'].driver_pwm_freq : 1
// printer.configfile.settings['tmc2209 stepper_z2'].driver_pwm_lim : 12
// printer.configfile.settings['tmc2209 stepper_z2'].driver_sgthrs : 0
// printer.configfile.settings['thermistor cmfb103f3950fant'].resistance2 : 5309.0
// printer.configfile.settings['thermistor cmfb103f3950fant'].resistance3 : 1228.0
// printer.configfile.settings['thermistor cmfb103f3950fant'].resistance1 : 32116.0
// printer.configfile.settings['thermistor cmfb103f3950fant'].temperature2 : 40.0
// printer.configfile.settings['thermistor cmfb103f3950fant'].temperature3 : 80.0
// printer.configfile.settings['thermistor cmfb103f3950fant'].temperature1 : 0.0
// printer.configfile.settings['gcode_macro caselight_dim'].gcode :
// _general_Debug msg="CASELIGHT_DIM - entering"
// SET_PIN PIN=caselight VALUE=0.5
// _general_Debug msg="CASELIGHT_DIM - exiting"
// printer.configfile.settings['gcode_macro caselight_dim'].description : Helper: DIM the 24V white CASE Lights
// printer.configfile.settings['led_effect sb_nozzle_calibrating_z'].layers :
// breathing  3 1 top (1.00, 0.25, 0.00)
// printer.configfile.settings['led_effect sb_nozzle_calibrating_z'].run_on_error : False
// printer.configfile.settings['led_effect sb_nozzle_calibrating_z'].leds :
// neopixel:sb_leds (17,18)
// printer.configfile.settings['led_effect sb_nozzle_calibrating_z'].autostart : False
// printer.configfile.settings['led_effect sb_nozzle_calibrating_z'].frame_rate : 2.0
// printer.configfile.settings['verify_heater heater_bed'].max_error : 120.0
// printer.configfile.settings['verify_heater heater_bed'].check_gain_time : 60.0
// printer.configfile.settings['verify_heater heater_bed'].hysteresis : 5.0
// printer.configfile.settings['verify_heater heater_bed'].heating_gain : 2.0
// printer.configfile.settings['led_effect sb_fan_leveling'].layers :
// breathing  3 1 top (0.5, 0.1, 0.4)
// printer.configfile.settings['led_effect sb_fan_leveling'].run_on_error : False
// printer.configfile.settings['led_effect sb_fan_leveling'].leds :
// neopixel:sb_leds (1-8)
// printer.configfile.settings['led_effect sb_fan_leveling'].frame_rate : 5.0
// printer.configfile.settings['led_effect sb_fan_leveling'].autostart : False
// printer.configfile.settings['gcode_macro example'].gcode :
// {% set function  = 'pre_' ~ params.FUNCTION %}
// {action_respond_info("example macro: funtion = %s" % function)}
// printer.configfile.settings['gcode_macro example'].description : Helper: an example macro
// printer.configfile.settings['thermistor atc-semitec-104nt-4-r025h42g'].resistance2 : 1074.0
// printer.configfile.settings['thermistor atc-semitec-104nt-4-r025h42g'].resistance3 : 82.78
// printer.configfile.settings['thermistor atc-semitec-104nt-4-r025h42g'].resistance1 : 100000.0
// printer.configfile.settings['thermistor atc-semitec-104nt-4-r025h42g'].temperature2 : 160.0
// printer.configfile.settings['thermistor atc-semitec-104nt-4-r025h42g'].temperature3 : 300.0
// printer.configfile.settings['thermistor atc-semitec-104nt-4-r025h42g'].temperature1 : 25.0
// printer.configfile.settings['led_effect sb_logo_part_ready'].layers :
// breathing  3 1 top (0.0, 1.0, 0.0)
// printer.configfile.settings['led_effect sb_logo_part_ready'].run_on_error : False
// printer.configfile.settings['led_effect sb_logo_part_ready'].leds :
// neopixel:sb_leds (9-16)
// printer.configfile.settings['led_effect sb_logo_part_ready'].frame_rate : 5.0
// printer.configfile.settings['led_effect sb_logo_part_ready'].autostart : False
// printer.configfile.settings['thermistor trianglelab-ntc100k-b3950'].resistance2 : 1366.2
// printer.configfile.settings['thermistor trianglelab-ntc100k-b3950'].resistance3 : 168.6
// printer.configfile.settings['thermistor trianglelab-ntc100k-b3950'].resistance1 : 103180.0
// printer.configfile.settings['thermistor trianglelab-ntc100k-b3950'].temperature2 : 150.0
// printer.configfile.settings['thermistor trianglelab-ntc100k-b3950'].temperature3 : 250.0
// printer.configfile.settings['thermistor trianglelab-ntc100k-b3950'].temperature1 : 25.0
// printer.configfile.settings['gcode_macro get_probe_status'].gcode :
// _Mag_Probe_Debug msg="GET_PROBE_STATUS - entering"
// _MAG_PROBE ACTION=GET_STATUS RESPOND=1
// _Mag_Probe_Debug msg="GET_PROBE_STATUS - exiting"
// printer.configfile.settings['gcode_macro get_probe_status'].description : Helper: Mag Probe; Prints the current MagProbe state, valid probe states are UNKNOWN, ATTACHED and DOCKED
// printer.configfile.settings['delayed_gcode check_all_fans_loop'].gcode :
// _general_Debug msg="CHECK_ALL_FANS_LOOP - entering"
// UPDATE_DELAYED_GCODE ID=CHECK_ALL_FANS_LOOP DURATION=3   ; Invoke self (loop) every 3 seconds.
// _HOTEND_FAN_CHECK                                        ; Run hotend fan check routine
// _PART_COOLING_FAN_CHECK                                  ; Run Part Cooling fan check routine if Part Cooling fan is enabled - just check to see if fan is not stopped
// _general_Debug msg="CHECK_ALL_FANS_LOOP - exiting"
// printer.configfile.settings['delayed_gcode check_all_fans_loop'].initial_duration : 0.0
// printer.configfile.settings['led_effect sb_nozzle_standby'].layers :
// breathing  3 1 top (0.01, 0.01, 0.01)
// printer.configfile.settings['led_effect sb_nozzle_standby'].run_on_error : False
// printer.configfile.settings['led_effect sb_nozzle_standby'].leds :
// neopixel:sb_leds (17,18)
// printer.configfile.settings['led_effect sb_nozzle_standby'].frame_rate : 2.0
// printer.configfile.settings['led_effect sb_nozzle_standby'].autostart : False
// printer.configfile.settings.pause_resume.recover_velocity : 50.0
// printer.configfile.settings['gcode_macro _set_plate_offset'].gcode :
// _general_Debug msg="_SET_PLATE_OFFSET - entering"
// {% if not printer.save_variables.variables.plates %}
// {action_respond_info("FLEXPLATE: No Plate Array defined. ABORDED")}
// {% else %}
// {% set plates = printer.save_variables.variables.plates %}
// SET_GCODE_OFFSET Z_ADJUST={plates.array[plates.index].offset} MOVE={params.MOVE|default(0)}
// {% endif %}
// _general_Debug msg="_SET_PLATE_OFFSET - exiting"
// printer.configfile.settings['gcode_macro _set_plate_offset'].description : Helper: Apply the z-offset of the active flexplate
// printer.configfile.settings['gcode_macro _wipe'].gcode :
// _general_Debug msg="_WIPE - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set bucket_pos = global.bucket_pos %}
// {% set wipe     = user.purge.wipe %}
// G90 ; absolute positioning
// G0 Z{wipe.travel.z} F{user.speed.z_hop}
// G0 X{wipe.end.x[bucket_pos]} F{user.speed.wipe}
// G0 Y{wipe.end.y}
// G0 Z{wipe.start.z} F{user.speed.z_hop}
// {% for moves in range(0, wipe.cnt) %} ; move head diagonal to brush
// {% for coordinate in [wipe.start.x[bucket_pos], wipe.end.x[bucket_pos]] %}
// G0 X{coordinate} Y{wipe.start.y + wipe.offset * moves}
// {% endfor %}
// {% endfor %}
// G0 X{wipe.end.x[bucket_pos]} Y{wipe.end.y} Z{wipe.end.z}
// _general_Debug msg="_WIPE - exiting"
// printer.configfile.settings['gcode_macro _wipe'].description : Helper: Wipe nozzle at bucket
// printer.configfile.settings['led_effect sb_fan_part_ready'].layers :
// breathing  3 1 top (0.0, 1.0, 0.0)
// printer.configfile.settings['led_effect sb_fan_part_ready'].leds :
// neopixel:sb_leds (1-8)
// printer.configfile.settings['led_effect sb_fan_part_ready'].autostart : False
// printer.configfile.settings['led_effect sb_fan_part_ready'].run_on_error : False
// printer.configfile.settings['led_effect sb_fan_part_ready'].frame_rate : 5.0
// printer.configfile.settings['gcode_macro _caselight_on'].gcode :
// _general_Debug msg="_CASELIGHT_ON - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// SET_PIN PIN=caselight VALUE={user.peripheral.caselight.on_val}
// _general_Debug msg="_CASELIGHT_ON - exiting"
// printer.configfile.settings['gcode_macro _caselight_on'].description : Helper: Turn ON the 24V white CASE Lights
// printer.configfile.settings['gcode_macro _power_off_rgb_psu'].gcode :
// _general_Debug msg="_POWER_OFF_RGB_PSU - entering"
// {action_call_remote_method("set_device_power",
// device="tasmota_plug_RGB",
// state="off")}
// _general_Debug msg="_POWER_OFF_RGB_PSU - exiting"
// printer.configfile.settings['gcode_macro _power_off_rgb_psu'].description : Helper: Turn off the Tasmota RGB_PSU smart plug
// printer.configfile.settings['gcode_macro _print_offset'].gcode :
// _general_Debug msg="_PRINT_OFFSET - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set text = ["GCODE OFFSET for Z applied from:"] %}
// {% if user.hw.auto_z_offset.manu %}
// {% set _dummy = text.append("Plate %s %.3fmm" %
// (printer.save_variables.variables.plates.array[printer.save_variables.variables.plates.index].name,
// printer.save_variables.variables.plates.array[printer.save_variables.variables.plates.index].offset)) %}
// {% endif %}
// {% if user.hw.auto_z_offset.auto %}
// {% set _dummy = text.append("Z_CALIBRATE %.3fmm" % printer.z_calibration.last_z_offset) %}
// {% endif %}
// {% set _dummy = text.append("User %.3fmm" % user.var.z_adjust) %}
// {% set _dummy = text.append("Total %.3fmm" % printer.gcode_move.homing_origin.z) %}
// {action_respond_info(text|join("\n"))}
// _general_Debug msg="_PRINT_OFFSET - exiting"
// printer.configfile.settings['gcode_macro _print_offset'].description : Helper: Print gcode offsets defined by script or user in PRINT_START
// printer.configfile.settings['verify_heater extruder'].heating_gain : 2.0
// printer.configfile.settings['verify_heater extruder'].check_gain_time : 20.0
// printer.configfile.settings['verify_heater extruder'].max_error : 120.0
// printer.configfile.settings['verify_heater extruder'].hysteresis : 5.0
// printer.configfile.settings['gcode_macro disablefilamentsensor'].gcode :
// _general_Debug msg=" DISABLEFILAMENTSENSOR- entering"
// SET_FILAMENT_SENSOR SENSOR=runout ENABLE=0                ; disable the filament sensor
// _general_Debug msg=" DISABLEFILAMENTSENSOR- exiting"
// printer.configfile.settings['gcode_macro disablefilamentsensor'].description : Helper: Disables the Filament sensor named "runout"
// printer.configfile.settings['gcode_macro _attach_euclid_probe'].gcode :
// _Mag_Probe_Debug msg="_ATTACH_EUCLID_PROBE - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set move_z = [user.z_hop, printer.toolhead.position.z]|max %}     ; calc movement high
// G90                                                                  ; absolute positioning
// G0 Z{move_z} F{user.speed.z_hop}                                     ; move head up
// G0 X{user.probe.store.x} Y{user.probe.store.y} F{user.speed.travel}  ; step 1    G0 X50 Y306
// G0 X{user.probe.dock.x} F{user.speed.dock}                           ; step 2    G0 X0
// G0 X{user.probe.store.x} F{user.speed.dock}                          ; step 3    G0 X50
// {% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %} ; set back to relative
// _MAGPROBE_STATUS_READY
// _Mag_Probe_Debug msg="_ATTACH_EUCLID_PROBE - exiting"
// printer.configfile.settings['gcode_macro _attach_euclid_probe'].description : Helper: Mag Probe; Attach Euclid MagProbe
// printer.configfile.settings['gcode_macro pressure_advance_select'].gcode :
// _general_Debug msg="PRESSURE_ADVANCE_SELECT - entering"
// {% if not printer.save_variables.variables.pressure_advance %}
// {action_respond_info("PRESSURE ADVANCE: No filament defined ABORDED")}
// {% else %}
// {% set nozzle = params.NOZZLE|default(0.4)|float %}
// {% set id = params.FILAMENT|default('None')|string %}
// {% set pa_dic = printer.save_variables.variables.pressure_advance %}
// {% set found = {'id'    : 'default',
// 'nozzle': 0.4,
// 'pa'    : printer.configfile.settings.extruder.pressure_advance,
// 'st'    : printer.configfile.settings.extruder.pressure_advance_smooth_time} %}
// {% for filament in pa_dic %}
// {% if id == filament.id %}
// {% for setup in filament.val %}
// {% if nozzle == setup.nozzle %}
// {% set _dummy = found.update({'id': filament.id}) %}
// {% set _dummy = found.update({'nozzle': setup.nozzle}) %}
// {% set _dummy = found.update({'pa': setup.pa}) %}
// {% set _dummy = found.update({'st': setup.st}) %}
// {% endif %}
// {% endfor %}
// {% endif %}
// {% endfor %}
// SET_PRESSURE_ADVANCE ADVANCE={found.pa} SMOOTH_TIME={found.st}
// {action_respond_info("PRESSURE ADVANCE:
// Filament: %s   Nozzle: %1.02f
// Pressure Advance: %1.03f Smooth Time: %1.03f" % (found.id, found.nozzle, found.pa, found.st))}
// {% endif %}
// _general_Debug msg="PRESSURE_ADVANCE_SELECT - exiting"
// printer.configfile.settings['gcode_macro pressure_advance_select'].description : Helper: Set PA depending on nozzle and filament
// printer.configfile.settings['gcode_macro bed_mesh_calibrate'].gcode :
// _general_Debug msg="BED_MESH_CALIBRATE - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set bed_mesh = global.bed_mesh %}
// {% set buffer = global.bed_mesh.buffer %}
// {% set last_area_start_x = global.bed_mesh.last_area_start_x %}
// {% set last_area_start_y = global.bed_mesh.last_area_start_y %}
// {% set last_area_end_x = global.bed_mesh.last_area_end_x %}
// {% set last_area_end_y = global.bed_mesh.last_area_end_y %}
// {% if params.FORCE_NEW_MESH != null %}
// { action_respond_info("Force New Mesh: %s" % (params.FORCE_NEW_MESH)) }
// {% endif %}
// {% if printer.bed_mesh.profile_name == '' %}
// { action_respond_info("No existing bed mesh found.") }
// {% set last_area_end_x=-1 %}
// {% endif %}
// _CG28
// {% if user.hw.mag_probe.ena %} BED_MESH_CLEAR {% endif %}
// {% set klicky_available = printer['gcode_macro _Probe_Variables'] != null %}
// {% set euclid_available = user.hw.mag_probe.euclid %}
// {% if klicky_available %}
// {% set V = user.klicky.verbose %}
// {% if V %}
// { action_respond_info("Bed Mesh Calibrate") }
// {% endif %}
// {% endif %}
// {% if params.PRINT_MIN %}
// { action_respond_info("print_min: %s" % params.PRINT_MIN) }
// { action_respond_info("print_max: %s" % params.PRINT_MAX) }
// {% set blTouchConfig = printer.configfile.config.bltouch %}
// {% if blTouchConfig %}
// {% set OffsetX = blTouchConfig.x_offset|default(0)|float %}
// {% set OffsetY = blTouchConfig.y_offset|default(0)|float %}
// {% endif %}
// {% set probeConfig = printer.configfile.config.probe %}
// {% if probeConfig %}
// {% set OffsetX = probeConfig.x_offset|default(0)|float %}
// {% set OffsetY = probeConfig.y_offset|default(0)|float %}
// {% endif %}
// {% set print_min_x = params.PRINT_MIN.split(",")[0]|float %}
// {% set print_min_y = params.PRINT_MIN.split(",")[1]|float %}
// {% set print_max_x = params.PRINT_MAX.split(",")[0]|float %}
// {% set print_max_y = params.PRINT_MAX.split(",")[1]|float %}
// {% if last_area_start_x > 0 %}
// { action_respond_info("last_bed_mesh: %s,%s %s,%s" % (last_area_start_x, last_area_start_y, last_area_end_x, last_area_end_y)) }
// {% endif %}
// {% if (params.FORCE_NEW_MESH != null) or (print_min_x < last_area_start_x) or (print_max_x > last_area_end_x) or (print_min_y < last_area_start_y) or (print_max_y > last_area_end_y)  %}
// {% if klicky_available %}
// _CheckProbe action=query
// Attach_Probe
// {% elif euclid_available %}
// {% if not printer.quad_gantry_level.applied %} QUAD_GANTRY_LEVEL PARK=false {% endif %}
// ATTACH_PROBE
// {% endif %}
// {% if (print_min_x < print_max_x) and (print_min_y < print_max_y) %}
// {% set bedMeshConfig = printer.configfile.config.bed_mesh %}
// {% set minimum_probe_count = 3 %}
// {% if bedMeshConfig.algorithm == "bicubic" %}
// {% set minimum_probe_count = 5 %}
// {% endif %}
// {% set probe_count = bedMeshConfig.probe_count.split(",") %}
// {% set probe_count_x = probe_count[0]|int %}
// {% if probe_count.__len__() > 1 %}
// {% set probe_count_y = probe_count[1]|int %}
// {% else %}
// {% set probe_count_y = probe_count_x|int %}
// {% endif %}
// {% set relative_reference_index = bedMeshConfig.relative_reference_index %}
// {% set mesh_min_x = bedMeshConfig.mesh_min.split(",")[0]|float %}
// {% set mesh_min_y = bedMeshConfig.mesh_min.split(",")[1]|float %}
// {% set mesh_max_x = bedMeshConfig.mesh_max.split(",")[0]|float %}
// {% set mesh_max_y = bedMeshConfig.mesh_max.split(",")[1]|float %}
// {% if print_max_x - print_min_x < (mesh_max_x - mesh_min_x) * 0.50 %}
// {% set probe_count_x = minimum_probe_count %}
// {% endif %}
// {% if print_max_y - print_min_y < (mesh_max_y - mesh_min_y) * 0.50 %}
// {% set probe_count_y = minimum_probe_count %}
// {% endif %}
// {% if print_min_x - buffer >= mesh_min_x %}
// {% set mesh_min_x = print_min_x - buffer %}
// {% endif %}
// {% if print_min_y - buffer >= mesh_min_y %}
// {% set mesh_min_y = print_min_y - buffer %}
// {% endif %}
// {% if print_max_x + buffer <= mesh_max_x %}
// {% set mesh_max_x = print_max_x + buffer %}
// {% endif %}
// {% if print_max_y + buffer <= mesh_max_y %}
// {% set mesh_max_y = print_max_y + buffer %}
// {% endif %}
// { action_respond_info("mesh_min: %s,%s" % (mesh_min_x, mesh_min_y)) }
// { action_respond_info("mesh_max: %s,%s" % (mesh_max_x, mesh_max_y)) }
// { action_respond_info("probe_count: %s,%s" % (probe_count_x,probe_count_y)) }
// ; Set variables so they're available outside of macro
// {% set _dummy = bed_mesh.update({'last_area_start_x':print_min_x }) %}
// {% set _dummy = bed_mesh.update({'last_area_start_y':print_min_y}) %}
// {% set _dummy = bed_mesh.update({'last_area_end_x':print_max_x }) %}
// {% set _dummy = bed_mesh.update({'last_area_end_y':print_max_y}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=bed_mesh VALUE="{bed_mesh}"
// {% if printer["gcode_macro status_meshing"] != null %}
// STATUS_MESHING
// {% endif %}
// {% if relative_reference_index == 0 or relative_reference_index == null %}
// BED_MESH_CALIBRATE_BASE mesh_min={mesh_min_x},{mesh_min_y} mesh_max={mesh_max_x},{mesh_max_y} probe_count={probe_count_x},{probe_count_y}
// {% else %}
// {% set relative_reference_index = ((probe_count_x * probe_count_y - 1) / 2)|int %}
// { action_respond_info("relative_reference_index: %s" % relative_reference_index) }
// BED_MESH_CALIBRATE_BASE mesh_min={mesh_min_x},{mesh_min_y} mesh_max={mesh_max_x},{mesh_max_y} probe_count={probe_count_x},{probe_count_y} relative_reference_index={relative_reference_index}
// {% endif %}
// {% else %}
// {% if printer["gcode_macro status_meshing"] != null %}
// STATUS_MESHING
// {% endif %}
// BED_MESH_CALIBRATE_BASE
// {% endif %}
// {% if klicky_available %}
// Dock_Probe
// {% elif euclid_available %}
// DOCK_PROBE
// {% endif %}
// {% else %}
// { action_respond_info("No need to recreate Bed Mesh since it's same as current mesh or smaller") }
// {% endif %}
// {% else %}
// {% if klicky_available %}
// _CheckProbe action=query
// Attach_Probe
// {% elif euclid_available %}
// {% if not printer.quad_gantry_level.applied %} QUAD_GANTRY_LEVEL PARK=false {% endif %}
// ATTACH_PROBE
// {% endif %}
// {% if printer["gcode_macro status_meshing"] != null %}
// STATUS_MESHING
// {% endif %}
// BED_MESH_CALIBRATE_BASE
// {% if klicky_available %}
// Dock_Probe
// {% elif euclid_available %}
// DOCK_PROBE
// {% endif %}
// {% endif %}
// {% if printer["gcode_macro status_ready"] != null %}
// STATUS_READY
// {% endif %}
// _general_Debug msg="BED_MESH_CALIBRATE - exiting"
// printer.configfile.settings['gcode_macro bed_mesh_calibrate'].description : Helper: Perform Mesh Bed Leveling with Klicky Probe or MagProbe automount probes
// printer.configfile.settings['gcode_macro bed_mesh_calibrate'].rename_existing : BED_MESH_CALIBRATE_BASE
// printer.configfile.settings['gcode_macro dim_lights'].gcode :
// _general_Debug msg="DIM_LIGHTS - entering"
// LIGHTS PS=47
// SET_LED LED=sb_leds INDEX=17 WHITE=0.5
// SET_LED LED=sb_leds INDEX=18 WHITE=0.5
// _general_Debug msg="DIM_LIGHTS - exiting"
// printer.configfile.settings['gcode_macro dim_lights'].description : Helper: Set NOZZLE lights to a dim preset
// printer.configfile.settings['gcode_macro _check_state'].gcode :
// _Mag_Probe_Debug msg="_CHECK_STATE - entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set txt = "Please execute QUERY_PROBE first"                      if global._check_state.error_id == 1
// else "Call ID invalid or does not match QUERY_PROBE call ID" if global._check_state.error_id == 2
// else "action not defined"                                    if global._check_state.error_id == 3
// else "docking failed"                                        if global._check_state.error_id == 4
// else "attaching failed"                                      if global._check_state.error_id == 5 %}
// {% if global._check_state.error_id != 0 %} {action_raise_error("MagProbe: ERROR, %s" % txt)} {% endif %}
// _Mag_Probe_Debug msg="_CHECK_STATE - exiting"
// printer.configfile.settings['gcode_macro _check_state'].description : Helper: Mag Probe; Perform MagProbe error check
// printer.configfile.settings['gcode_macro status_leveling'].gcode :
// _general_Debug msg="status_leveling- entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set current_led_state = global.current_led_state %}
// SET_FAN_LEDS_OFF
// SET_LOGO_LEDS_OFF
// SET_NOZZLE_LEDS_OFF
// M117 off
// CHECK_PRINTER_STATE
// {% set progressbar_enabled = global.progressbar_enabled|int %}
// {% if progressbar_enabled == 0 %}
// SET_BAR_LEDS_OFF
// {% set _dummy = current_led_state.update({'bar_leds':'sb_bar_leveling'}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=current_led_state VALUE="{current_led_state}"
// SET_BAR_LEDS_ON
// {% endif %}
// {% set _dummy = current_led_state.update({'fan_leds':'sb_fan_leveling'}) %}
// {% set _dummy = current_led_state.update({'logo_leds':'sb_logo_leveling'}) %}
// {% set _dummy = current_led_state.update({'nozzle_leds':'sb_nozzle_leveling'}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=current_led_state VALUE="{current_led_state}"
// SET_FAN_LEDS_ON
// SET_LOGO_LEDS_ON
// M117 leveling
// SET_NOZZLE_LEDS_ON
// _general_Debug msg="status_leveling- exiting"
// printer.configfile.settings['gcode_macro status_leveling'].description : Helper: set the Stealthburner leds to the STATUS_LEVELING LED_EFFECT
// printer.configfile.settings['fan_generic bedfan_left'].cycle_time : 1.0
// printer.configfile.settings['fan_generic bedfan_left'].pin : PE5
// printer.configfile.settings['fan_generic bedfan_left'].off_below : 0.13
// printer.configfile.settings['fan_generic bedfan_left'].shutdown_speed : 0.0
// printer.configfile.settings['fan_generic bedfan_left'].max_power : 1.0
// printer.configfile.settings['fan_generic bedfan_left'].kick_start_time : 1.0
// printer.configfile.settings['fan_generic bedfan_left'].hardware_pwm : False
// printer.configfile.settings['gcode_macro set_fan_leds_by_name'].gcode :
// _general_Debug msg="SET_FAN_LEDS_BY_NAME - entering"
// {% set color_name = params.COLOR %}
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set color = global.sb_vars.colors[color_name|lower] %}
// _SET_FAN_LEDS R={color.r} G={color.g} B={color.b} W={color.w}
// _general_Debug msg="SET_FAN_LEDS_BY_NAME - exiting"
// printer.configfile.settings['gcode_macro set_fan_leds_by_name'].description : Helper: Sets the color of the stealthburner FAN leds by only using the name of the color
// printer.configfile.settings['gcode_macro zup'].gcode :
// _general_Debug msg="ZUP- entering"
// SET_GCODE_OFFSET Z_ADJUST=0.01 MOVE=1
// _general_Debug msg="ZUP- exiting"
// printer.configfile.settings['gcode_macro zup'].description : Helper: Helps in setting SET_GCODE_OFFSET to get the perfect squish; this moves z +0.01mm
// printer.configfile.settings['led_effect sb_nozzle_leveling'].layers :
// breathing  3 1 top (0.5, 0.1, 0.4)
// printer.configfile.settings['led_effect sb_nozzle_leveling'].leds :
// neopixel:sb_leds (17,18)
// printer.configfile.settings['led_effect sb_nozzle_leveling'].frame_rate : 2.0
// printer.configfile.settings['led_effect sb_nozzle_leveling'].run_on_error : False
// printer.configfile.settings['led_effect sb_nozzle_leveling'].autostart : False
// printer.configfile.settings['gcode_macro set_wled'].gcode :
// {% set strip = params.STRIP|default('lights')|string %}
// {% set red = params.RED|default(0)|float %}
// {% set green = params.GREEN|default(0)|float %}
// {% set blue = params.BLUE|default(0)|float %}
// {% set white = params.WHITE|default(0)|float %}
// {% set index = params.INDEX|default(-1)|int %}
// {% set transmit = params.TRANSMIT|default(1)|int %}
// {action_call_remote_method("set_wled",
// strip=strip,
// red=red, green=green, blue=blue, white=white,
// index=index, transmit=transmit)}
// printer.configfile.settings['gcode_macro set_wled'].description : Helper: SET_LED like functionality for WLED, applies to all active segments
// printer.configfile.settings['gcode_macro _wait_start'].gcode :
// _general_Debug msg="_WAIT_Start - entering"
// {% set MINUTES = params.MINUTES|default(0.5)|float %}
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set wait_variable = global.wait_variable %}
// {% set duration = global.wait_variable.duration|float %}
// {% set count = (MINUTES * 60.0) / duration %}
// {% set _dummy = wait_variable.update({'waiting':True}) %}
// {% set _dummy = wait_variable.update({'count':count}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=wait_variable VALUE="{wait_variable}"
// UPDATE_DELAYED_GCODE ID=WAIT_Delayed DURATION={duration}
// _general_Debug msg="_WAIT_Start - exiting"
// printer.configfile.settings['gcode_macro _wait_start'].description : Helper: a non blocking wait (this kicks off the wait loop)
// printer.configfile.settings['gcode_macro remove_plate'].gcode :
// _general_Debug msg="REMOVE_PLATE - entering"
// {% if not printer.save_variables.variables.plates %}
// {action_respond_info("FLEXPLATE: No Plate Array defined. ABORDED")}
// {% else %}
// {% set plates = printer.save_variables.variables.plates %}
// {% if 'INDEX' not in params|upper %}
// {action_respond_info("FLEXPLATE: No INDEX defined, use REMOVE_PLATE INDEX=index. ABORDED")}
// {% elif plates.array|length == 1 or params.INDEX|int == plates.index %}
// {action_respond_info("FLEXPLATE: Last or active plate can not be removed. ABORDED")}
// {% elif params.INDEX|int < 0 or params.INDEX|int >= plates.array|length %}
// {action_respond_info("FLEXPLATE: Index out of range [0..%d]. ABORDED" % (plates.array|length-1))}
// {% else %}
// {action_respond_info("FLEXPLATE: Remove plate with INDEX %d from list " % params.INDEX|int)}
// {% set _dummy = plates.array.pop(params.INDEX|int) %}
// SAVE_VARIABLE VARIABLE=plates VALUE="{plates}"
// {% endif %}
// {% endif %}
// _general_Debug msg="REMOVE_PLATE - exiting"
// printer.configfile.settings['gcode_macro remove_plate'].description : Helper: Remove a flexplate from the list
// printer.configfile.settings['gcode_macro filament_about'].gcode :
// _general_Debug msg="FILAMENT_ABOUT - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% if user.filament.profile.name == "ABS" %}
// M117 Loaded filament profile ABS04 (Generic ABS / 0.4mm Nozzle)
// {% elif user.filament.profile.name == "PETG" %}
// M117 Loaded filament profile PETG04 (Generic PETG / 0.4mm Nozzle)
// {% else %}
// {% endif %}
// _general_Debug msg="FILAMENT_ABOUT - exiting"
// printer.configfile.settings['gcode_macro filament_about'].description : Helper: Reports the loaded filament profile
// printer.configfile.settings['gcode_macro _magprobe_status_leveling'].gcode :
// {% if printer['gcode_macro status_leveling'] is defined %}
// _Mag_Probe_Debug msg="_magprobe_status_leveling activating the LED STATUS_LEVELING"
// STATUS_LEVELING
// {% endif %}
// printer.configfile.settings['gcode_macro _magprobe_status_leveling'].description : Helper: Mag Probe, enable STATUS_LEVELING LED state
// printer.configfile.settings.z_thermal_adjust.pullup_resistor : 4700.0
// printer.configfile.settings.z_thermal_adjust.sensor_pin : PF7
// printer.configfile.settings.z_thermal_adjust.z_adjust_off_above : 99999999.0
// printer.configfile.settings.z_thermal_adjust.sensor_type : Generic 3950
// printer.configfile.settings.z_thermal_adjust.inline_resistor : 0.0
// printer.configfile.settings.z_thermal_adjust.smooth_time : 2.0
// printer.configfile.settings.z_thermal_adjust.min_temp : 0.0
// printer.configfile.settings.z_thermal_adjust.gcode_id : ZFrame
// printer.configfile.settings.z_thermal_adjust.max_z_adjustment : 99999999.0
// printer.configfile.settings.z_thermal_adjust.temp_coeff : 0.0
// printer.configfile.settings.z_thermal_adjust.max_temp : 120.0
// printer.configfile.settings['led_effect sb_nozzle_meshing'].layers :
// breathing  3 1 top (1.0, 1.0, 0.0)
// printer.configfile.settings['led_effect sb_nozzle_meshing'].leds :
// neopixel:sb_leds (17,18)
// printer.configfile.settings['led_effect sb_nozzle_meshing'].frame_rate : 2.0
// printer.configfile.settings['led_effect sb_nozzle_meshing'].run_on_error : False
// printer.configfile.settings['led_effect sb_nozzle_meshing'].autostart : False
// printer.configfile.settings['delayed_gcode _update_leds_loop'].gcode :
// _general_Debug msg="_update_leds_loop - entering"
// CHECK_PRINTER_STATE
// _set_leds
// UPDATE_DELAYED_GCODE ID=_update_leds_loop DURATION=60
// _general_Debug msg="_update_leds_loop - exiting"
// printer.configfile.settings['delayed_gcode _update_leds_loop'].initial_duration : 0.0
// printer.configfile.settings['gcode_macro status_cooling'].gcode :
// _general_Debug msg="status_cooling- entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set current_led_state = global.current_led_state %}
// SET_FAN_LEDS_OFF
// SET_LOGO_LEDS_OFF
// SET_NOZZLE_LEDS_OFF
// M117 off
// CHECK_PRINTER_STATE
// {% set progressbar_enabled = global.progressbar_enabled|int %}
// {% if progressbar_enabled == 0 %}
// SET_BAR_LEDS_OFF
// {% set _dummy = current_led_state.update({'bar_leds':'sb_bar_cooling'}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=current_led_state VALUE="{current_led_state}"
// SET_BAR_LEDS_ON
// {% endif %}
// {% set _dummy = current_led_state.update({'fan_leds':'sb_fan_cooling'}) %}
// {% set _dummy = current_led_state.update({'logo_leds':'sb_logo_cooling'}) %}
// {% set _dummy = current_led_state.update({'nozzle_leds':'sb_nozzle_cooling'}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=current_led_state VALUE="{current_led_state}"
// SET_FAN_LEDS_ON
// SET_LOGO_LEDS_ON
// M117 cooling
// SET_NOZZLE_LEDS_ON
// _general_Debug msg="status_cooling- exiting"
// printer.configfile.settings['gcode_macro status_cooling'].description : Helper: set the Stealthburner leds to the STATUS_COOLING LED_EFFECT
// printer.configfile.settings['gcode_macro add_plate'].gcode :
// _general_Debug msg="ADD_PLATE - entering"
// {% set name = params.NAME|default('New')|string %}
// {% set offset = params.OFFSET|default(0.0)|float|round(3) %}
// {% if not printer.save_variables.variables.plates %}
// {action_respond_info("FLEXPLATE: Initialize Plate Array
// Add plate: %s with offset: %.3fmm at INDEX: 0" % (name,offset))}
// {% set plates = {'array': [{'name': name, 'offset': offset}], 'index' : 0} %}
// {% else %}
// {% set plates = printer.save_variables.variables.plates %}
// {action_respond_info("FLEXPLATE: Add plate: %s with offset: %.3fmm at INDEX: %d" % (name,offset,plates.array|length))}
// {% set _dummy = plates.array.append({'name': name, 'offset': offset}) %}
// {% endif %}
// SAVE_VARIABLE VARIABLE=plates VALUE="{plates}"
// _general_Debug msg="ADD_PLATE - exiting"
// printer.configfile.settings['gcode_macro add_plate'].description : Helper: Add a flexplate to the list
// printer.configfile.settings.firmware_retraction.unretract_extra_length : 0.0
// printer.configfile.settings.firmware_retraction.retract_length : 0.75
// printer.configfile.settings.firmware_retraction.unretract_speed : 30.0
// printer.configfile.settings.firmware_retraction.retract_speed : 50.0
// printer.configfile.settings['gcode_macro _magprobe_status_cleaning'].gcode :
// {% if printer['gcode_macro status_cleaning'] is defined %}
// _Mag_Probe_Debug msg="_magprobe_status_cleaning activating the LED STATUS_CLEANING"
// STATUS_CLEANING
// {% endif %}
// printer.configfile.settings['gcode_macro _magprobe_status_cleaning'].description : Helper: Mag Probe, enable STATUS_CLEANING LED state
// printer.configfile.settings['gcode_macro _sd_print_stats'].gcode :
// _general_Debug msg="_SD_PRINT_STATS - entering"
// {% set PT = printer.print_stats.print_duration %}
// {% set Ph,Pm,Ps = (PT / 3600)|int, ((PT / 60) % 60)|int, (PT % 60)|int %}
// {% set TT = printer.print_stats.total_duration %}
// {% set Th,Tm,Ts = (TT / 3600)|int, ((TT / 60) % 60)|int, (TT % 60)|int %}
// {% set Fil = printer.print_stats.filament_used|float / 1000.0 %}
// {action_respond_info("Statistic of last Print (%s):
// Name: %s
// Filament: %.4fm
// Print Time: %d:%02d:%02d
// Total Time: %d:%02d:%02d" %
// (params.R, printer.print_stats.filename, Fil, Ph, Pm, Ps, Th, Tm, Ts))}
// _general_Debug msg="_SD_PRINT_STATS - exiting"
// printer.configfile.settings['gcode_macro _sd_print_stats'].description : Helper: Print statistic of last print
// printer.configfile.settings['gcode_macro dump_print_area_limits'].gcode :
// {% set min = printer.toolhead.axis_minimum %}
// {% set max = printer.toolhead.axis_maximum %}
// {% set probe_offset = {'x' : printer.configfile.settings.probe.x_offset,
// 'y' : printer.configfile.settings.probe.y_offset} %}
// {% set probe_area = {'min' : {'x' : [min.x,(min.x-probe_offset.x)]|max,
// 'y' : [min.y,(min.y-probe_offset.y)]|max},
// 'max' : {'x' : [max.x,(max.x-probe_offset.x)]|min,
// 'y' : [max.y,(max.y-probe_offset.y)]|min}} %}
// {action_respond_info("Print Volume Limits:
// Min X:%7.1f, Y:%7.1f, Z:%7.1f
// Max X:%7.1f, Y:%7.1f, Z:%7.1f
// Probe Area Limits:
// Min X:%7.1f, Y:%7.1f
// Max X:%7.1f, Y:%7.1f" %
// (min.x,min.y,min.z,max.x,max.y,max.z,probe_area.min.x,probe_area.min.y, probe_area.max.x,probe_area.max.y))}
// printer.configfile.settings['gcode_macro dump_print_area_limits'].description : Helper: Debug: Print information about print volume and probable area
// printer.configfile.settings['bed_mesh meshjtm110'].tension : 0.2
// printer.configfile.settings['bed_mesh meshjtm110'].min_x : 50.5
// printer.configfile.settings['bed_mesh meshjtm110'].min_y : 48.0
// printer.configfile.settings['bed_mesh meshjtm110'].y_count : 7
// printer.configfile.settings['bed_mesh meshjtm110'].mesh_y_pps : 2
// printer.configfile.settings['bed_mesh meshjtm110'].x_count : 7
// printer.configfile.settings['bed_mesh meshjtm110'].points : ((0.01875, 0.03375, 0.02875, 0.0275, 0.02625, 0.02125, 0.0275), (0.0075, 0.02375, 0.01625, 0.01625, 0.02, 0.015, 0.01375), (-0.0075, 0.005, 0.00125, 0.0025, 0.00875, 0.00875, 0.0075), (-0.00875, 0.0025, -0.00375, 0.0, 0.01, 0.0125, 0.01), (-0.01, 0.00125, -0.00375, -0.005, -0.00125, 0.0025, -0.0025), (0.0075, 0.02, 0.00875, 0.01, 0.01, 0.0125, 0.01125), (0.03375, 0.0475, 0.035, 0.02875, 0.03, 0.03, 0.035))
// printer.configfile.settings['bed_mesh meshjtm110'].version : 1
// printer.configfile.settings['bed_mesh meshjtm110'].algo : bicubic
// printer.configfile.settings['bed_mesh meshjtm110'].mesh_x_pps : 2
// printer.configfile.settings['bed_mesh meshjtm110'].max_x : 250.48
// printer.configfile.settings['bed_mesh meshjtm110'].max_y : 247.98
// printer.configfile.settings['gcode_macro _power_off_esp_psu'].gcode :
// _general_Debug msg="_POWER_OFF_ESP_PSU - entering"
// {action_call_remote_method("set_device_power",
// device="tasmota_plug_ESP",
// state="off")}
// _general_Debug msg="_POWER_OFF_ESP_PSU - exiting"
// printer.configfile.settings['gcode_macro _power_off_esp_psu'].description : Helper: Turn off the Tasmota ESP_PSU smart plug
// printer.configfile.settings['gcode_macro query_probe_output'].gcode :
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set mag_probe = user.mag_probe %}
// GET_PROBE_STATUS
// {% if printer.probe.last_query %}
// {% set string2 = "TRUE" %}
// {% else %}
// {% set string2 = "FALSE" %}
// {% endif %}
// {% set string1 = "QUERY_PROBE_OUTPUT =================>>>" %}
// {% set string1 = string1 ~ "\nQUERY_PROBE = %s;" %}
// {% set string1 = string1 ~ "\nuser.mag_probe.state = %s;" %}
// {% set string1 = string1 ~ "\nQUERY_PROBE_OUTPUT =================<<<" %}
// { action_respond_info(string1 % (string2, user.mag_probe.state)) }
// printer.configfile.settings['gcode_macro query_probe_output'].description : Helper: Report the status of the probe (attached or docked)
// printer.configfile.settings['delayed_gcode bedfanloop'].gcode :
// _general_Debug msg="bedfanloop - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set bedfanvars = global.bedfanvars %}
// {% set THRESHOLD = user.bedfanvars.threshold|int %}                                                          ;target bed temperature you set
// {% set CHAMBER_THERSHOLD = user.filament.profile.defaultEnclosure %}                                         ;desired temperature for chamber
// {% set CURRENT_CHAMBERTEMP = printer["temperature_sensor J_Chamber_ZDragChain_PT100"].temperature %}         ;current chamber temperature
// {% set LAST_CHAMBERTEMP = global.bedfanvars.lasttemp %}                                                      ;previous chamber temperature
// {% set OFFSET = user.bedfanvars.offset|int %}                                                                ;window witdth for chamber temperature
// {% set FLAG = global.bedfanvars.flag|int %}                                                                  ;indicates the state of this macro
// {% if printer.heater_bed.target >= THRESHOLD %}
// {% if printer.heater_bed.temperature|int >= (printer.heater_bed.target|int - 1) %}
// {% if FLAG == 0 %}
// _BedFansFast
// {% set _dummy = bedfanvars.update({'lasttemp':CURRENT_CHAMBERTEMP}) %}
// {% set _dummy = bedfanvars.update({'flag':2}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=bedfanvars VALUE="{bedfanvars}"
// UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=8
// {% elif (FLAG != 0) %}
// {% if CURRENT_CHAMBERTEMP < LAST_CHAMBERTEMP  %}
// {% if CURRENT_CHAMBERTEMP < (CHAMBER_THERSHOLD-OFFSET) %}
// {% if FLAG != 3 %}
// _BedFansFastPlus_02
// {% set _dummy = bedfanvars.update({'flag':3}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=bedfanvars VALUE="{bedfanvars}"
// {% endif %}
// {% endif %}
// {% else %}
// {% if CURRENT_CHAMBERTEMP >= CHAMBER_THERSHOLD %}
// {% if FLAG != 4 %}
// _BedFansOff
// {% set _dummy = bedfanvars.update({'flag':4}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=bedfanvars VALUE="{bedfanvars}"
// {% endif %}
// {% endif %}
// {% endif %}
// {% set _dummy = bedfanvars.update({'lasttemp':CURRENT_CHAMBERTEMP}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=bedfanvars VALUE="{bedfanvars}"
// UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=8
// {% endif %}
// {% else %}
// {% set _dummy = bedfanvars.update({'lasttemp':CURRENT_CHAMBERTEMP}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=bedfanvars VALUE="{bedfanvars}"
// UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=8
// {% endif %}
// {% endif %}
// _general_Debug msg="bedfanloop - exiting"
// printer.configfile.settings['delayed_gcode bedfanloop'].initial_duration : 0.0
// printer.configfile.settings['gcode_macro shutdown'].gcode :
// _general_Debug msg="SHUTDOWN - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// _CG28 ; home if not already homed
// G90   ; absolute positioning
// G0 X{user.park.bed.x} Y{user.park.bed.y} Z{user.park.bed.z} F{user.speed.travel}
// _WAIT_Start MINUTES=0.17                            ;wait 10 seconds
// M400
// _general_Debug msg="SHUTDOWN - exiting"
// printer.configfile.settings['gcode_macro shutdown'].description : Helper: turn off all the lights (WLED strips and progres_bar LEDs and 24V LED lights and stealthburner LEDs)
// printer.configfile.settings['gcode_macro dock_probe'].gcode :
// _Mag_Probe_Debug msg="DOCK_PROBE - entering"
// DETACH_PROBE
// _Mag_Probe_Debug msg="DOCK_PROBE - exiting"
// printer.configfile.settings['gcode_macro dock_probe'].description : Helper: Mag Probe; Dock the MagProbe by calling DETACH_PROBE macro
// printer.configfile.settings['gcode_macro check_printer_state'].gcode :
// _general_Debug msg="check_printer_state - entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set progressbar_enabled = global.progressbar_enabled|int %}
// {% if printer.extruder.target == 0 %}
// _DISABLE_PROGRESS_BAR
// {% else %}
// {% if printer.idle_timeout.state == "Printing" and progressbar_enabled == 0 %}
// _ENABLE_PROGRESS_BAR
// SET_BAR_LEDS_OFF
// {% endif %}
// {% endif %}
// _general_Debug msg="check_printer_state - exiting"
// printer.configfile.settings['gcode_macro check_printer_state'].description : Helper: change the enable or disable state of the progress bar based on the state of the extruder heater and the state of the printer
// printer.configfile.settings['gcode_macro _error_if_probe_deployed'].gcode :
// G4 P300
// _MAG_PROBE ACTION='get_status' RESPOND=0
// _do_error_if_probe_deployed
// printer.configfile.settings['gcode_macro _error_if_probe_deployed'].description : Helper: Euclid Probe safety, to Verify Euclid probe is docked
// printer.configfile.settings['gcode_macro m117'].rename_existing : M117.1
// printer.configfile.settings['gcode_macro m117'].description : Helper: Display Message to Klipper Screen Status line
// printer.configfile.settings['gcode_macro m117'].gcode :
// _general_Debug msg="M117 - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set ns = namespace(printing=false) %}
// {% if rawparams|trim == '' %}
// UPDATE_DELAYED_GCODE ID=_lights_ready DURATION=3
// {% else %}
// {% for key, value in user.status_presets.lookup.items() %}
// {% if key.upper() in rawparams.upper() %}
// UPDATE_DELAYED_GCODE ID=_lights_ready DURATION=0
// LIGHTS STRIP="Chamber_Lights" STATUS='{key}'
// LIGHTS STRIP="Bottom_Lights" STATUS='{key}'
// {% if key == 'printing' %}
// {% set ns.printing=true %}
// {% elif ns.printing %}
// {% set ns.printing=false %}
// {% endif %}
// {% endif %}
// {% endfor %}
// {% endif %}
// {% if ns.printing %}
// M117.1
// {% else %}
// M117.1 {rawparams}
// {% endif %}
// M118 {rawparams}
// _general_Debug msg="M117 - exiting"
// printer.configfile.settings['gcode_macro m115'].gcode :
// _general_Debug msg="M115 - entering"
// {% set out = ['mcu build version:'] %}
// {% for name1 in printer %}
// {% for name2 in printer[name1] %}
// {% if name2 is in ['mcu_version'] %}
// {% set _dummy = out.append("%s: %s" % (name1, printer[name1][name2])) %}
// {% endif %}
// {% endfor %}
// {% endfor %}
// {action_respond_info(out|join("\n"))}
// M115.1
// _general_Debug msg="M115 - exiting"
// printer.configfile.settings['gcode_macro m115'].description : Helper: Print host and all MCUs versions in this printer
// printer.configfile.settings['gcode_macro m115'].rename_existing : M115.1
// printer.configfile.settings['led_effect sb_fan_meshing'].layers :
// breathing  3 1 top (1.0, 1.0, 0.0)
// printer.configfile.settings['led_effect sb_fan_meshing'].run_on_error : False
// printer.configfile.settings['led_effect sb_fan_meshing'].leds :
// neopixel:sb_leds (1-8)
// printer.configfile.settings['led_effect sb_fan_meshing'].frame_rate : 5.0
// printer.configfile.settings['led_effect sb_fan_meshing'].autostart : False
// printer.configfile.settings['gcode_macro bed_mesh_store'].gcode :
// _Mag_Probe_Debug msg="BED_MESH_STORE - entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set bed_mesh_store = global.bed_mesh_store %}
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set name = '' if printer.save_variables.variables.plates is not defined
// else printer.save_variables.variables.plates.array[printer.save_variables.variables.plates.index].name + '-' %}
// {% set mesh_name = name + "Bed_Temp-" + printer.heater_bed.target|int|string + "C" %}
// {action_respond_info("BED_MESH: Generate \"%s\"" % mesh_name)}
// BED_MESH_CALIBRATE PROFILE={mesh_name}
// {% if params.PARK|default('true')|lower == 'true' %}
// G90                                                                   ; set absolute
// G0 Z{user.park.bed.z} F{user.speed.z_hop}                             ; lift first
// G0 X{user.park.bed.x} Y{user.park.bed.y} F{user.speed.travel}         ; park toolhead
// {% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}  ; set it back to relative
// {% endif %}
// {% if params.SAVE|default('none')|lower == 'now' %}
// _PRINT_AR T="BED_MESH: Save Config!"
// SAVE_CONFIG
// {% elif params.SAVE|default('none')|lower == 'later' %}
// _PRINT_AR T="BED_MESH: Save Config after print done"
// {% set _dummy = bed_mesh_store.update({'save_at_end': True }) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=bed_mesh_store VALUE="{bed_mesh_store}"
// {% endif %}
// _Mag_Probe_Debug msg="BED_MESH_STORE - exiting"
// printer.configfile.settings['gcode_macro bed_mesh_store'].description : Helper: Mag Probe; Generate a mesh, name it and run save_config if requested
// printer.configfile.settings['gcode_macro m204'].gcode :
// _general_Debug msg="M204 - entering"
// {% set accel = params.S|float                      if 'S' in params and params.S|float > 0
// else [params.P|float,params.T|float]|min if 'P' in params and 'T' in params and
// params.P|float > 0 and params.T|float > 0 %}
// {% if accel is defined %}
// {% set lim_accel          = [accel,     printer.configfile.settings.printer.max_accel         ]|min %}
// {% set lim_accel_to_decel = [accel / 2, printer.configfile.settings.printer.max_accel_to_decel]|min %}
// SET_VELOCITY_LIMIT ACCEL={lim_accel} ACCEL_TO_DECEL={lim_accel_to_decel}
// {% else %}
// {action_respond_info("Invalid M204 command \"M204 %s\"" % rawparams)}
// {% endif %}
// _general_Debug msg="M204 - exiting"
// printer.configfile.settings['gcode_macro m204'].description : Helper: Set and limit acceleration to cfg value
// printer.configfile.settings['gcode_macro m204'].rename_existing : M204.1
// printer.configfile.settings.quad_gantry_level.retries : 10
// printer.configfile.settings.quad_gantry_level.horizontal_move_z : 15.0
// printer.configfile.settings.quad_gantry_level.retry_tolerance : 0.00375
// printer.configfile.settings.quad_gantry_level.gantry_corners : ((-60.0, -10.0), (360.0, 370.0))
// printer.configfile.settings.quad_gantry_level.points : ((50.0, 25.0), (50.0, 225.0), (250.0, 225.0), (250.0, 25.0))
// printer.configfile.settings.quad_gantry_level.speed : 200.0
// printer.configfile.settings.quad_gantry_level.max_adjust : 15.0
// printer.configfile.settings['gcode_macro _set_sb_leds'].gcode :
// {% set r = params.R|default(0)|float %}
// {% set g = params.G|default(0)|float %}
// {% set b = params.B|default(0)|float %}
// {% set w = params.W|default(0)|float %}
// {% set led = params.LED|string %}
// {% set idx = (params.IDX|string).split(',') %}
// {% set transmit_last = params.TRANSMIT|default(1) %}
// {% for led_index in idx %}
// {% set transmit=transmit_last if loop.last else 0 %}
// SET_LED LED={led} RED={r} GREEN={g} BLUE={b} WHITE={w} INDEX={led_index} TRANSMIT={transmit}
// {% endfor %}
// printer.configfile.settings['gcode_macro _set_sb_leds'].description : Helper: Sets the color of the leds which are specified by LED name and by IDX number for the Stealthburner LEDS
// printer.configfile.settings['temperature_sensor q_tinyfan'].min_temp : 0.0
// printer.configfile.settings['temperature_sensor q_tinyfan'].sensor_type : temperature_mcu
// printer.configfile.settings['temperature_sensor q_tinyfan'].sensor_mcu : tinyfan
// printer.configfile.settings['temperature_sensor q_tinyfan'].gcode_id : TinyFanPCB
// printer.configfile.settings['temperature_sensor q_tinyfan'].max_temp : 125.0
// printer.configfile.settings['gcode_macro lights_off'].gcode :
// _general_Debug msg="DIM_LIGHTS - entering"
// CHAMBER_LIGHTS_OFF
// BOTTOM_LIGHTS_OFF
// _general_Debug msg="DIM_LIGHTS - exiting"
// printer.configfile.settings['gcode_macro lights_off'].description : Helper: WLED lights off (CHAMBER_LIGHTS and BOTTOM_LIGHTS)
// printer.configfile.settings['gcode_macro resonances_test'].gcode :
// _general_Debug msg="RESONANCES_TEST - enter"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// _CG28                                                 ; home if needed
// TURN_OFF_HEATERS                                      ; turn off heaters
// M107                                                  ; turn off fan
// {% if user.hw.chamber.fan %} M141 {% endif %}         ; exhaust fan off
// {% if user.hw.filter.ena %} _SET_FILTER {% endif %}   ; filter off
// _PRINT_AR T="INPUT SHAPER: Noise values, check if sensor is installed"
// MEASURE_AXES_NOISE                                    ; get noise value in log
// _PRINT_AR T="INPUT SHAPER: Resonance Tests starting"
// _PRINT_AR T="INPUT SHAPER: Mesasure X axis"
// TEST_RESONANCES AXIS=X                                ; measure X
// _PRINT_AR T="INPUT SHAPER: Mesasure Y axis"
// TEST_RESONANCES AXIS=Y                                ; measure Y
// _PRINT_AR T="INPUT SHAPER: Resonance Tests done"
// _PRINT_AR T="INPUT SHAPER: Generate graph in backround"
// RUN_SHELL_COMMAND CMD=plot_graph PARAMS=SHAPER
// _general_Debug msg="RESONANCES_TEST - exit"
// printer.configfile.settings['gcode_macro resonances_test'].description : Helper: Run input shaper test
// printer.configfile.settings['led_effect sb_logo_printing'].layers :
// gradient  0.3  1 add (0.3, 0.0, 0.0),(0.3, 0.3, 0.0),(0.3, 0.1, 0.0)
// printer.configfile.settings['led_effect sb_logo_printing'].run_on_error : False
// printer.configfile.settings['led_effect sb_logo_printing'].leds :
// neopixel:sb_leds (9-16)
// printer.configfile.settings['led_effect sb_logo_printing'].autostart : False
// printer.configfile.settings['led_effect sb_logo_printing'].frame_rate : 5.0
// printer.configfile.settings.z_calibration.max_deviation : 1.0
// printer.configfile.settings.z_calibration.probe_switch_x : -1.0
// printer.configfile.settings.z_calibration.start_gcode : _SET_Z_CURRENT VAL=HOME
// DETACH_PROBE
// printer.configfile.settings.z_calibration.probe_switch_y : -1.0
// printer.configfile.settings.z_calibration.probe_bed_x : -1.0
// printer.configfile.settings.z_calibration.probe_bed_y : -1.0
// printer.configfile.settings.z_calibration.before_switch_gcode : ATTACH_PROBE
// G0 Z20
// printer.configfile.settings.z_calibration.switch_xy_position : 207, 278.5
// printer.configfile.settings.z_calibration.switch_offset : 0.13875
// printer.configfile.settings.z_calibration.samples_result : none
// printer.configfile.settings.z_calibration.probe_nozzle_x : -1.0
// printer.configfile.settings.z_calibration.probe_nozzle_y : -1.0
// printer.configfile.settings.z_calibration.nozzle_xy_position : 202, 303.5
// printer.configfile.settings.z_calibration.end_gcode : _SET_Z_CURRENT
// DETACH_PROBE
// printer.configfile.settings.z_calibration.probing_first_fast : True
// printer.configfile.settings.z_calibration.speed : 300.0
// printer.configfile.settings.z_calibration.clearance : 5.0
// printer.configfile.settings['gcode_macro park_center'].gcode :
// _general_Debug msg="PARK_Center - entering"
// {% set Z = params.Z|default(40)|float %}
// _general_entry_point function=PARK_Center
// {% set X_MID = printer.configfile.config.stepper_x.position_max|float / 2.0 %}
// {% set Y_MID = printer.configfile.config.stepper_y.position_max|float / 2.0 %}
// _CG28
// G0 X{X_MID} Y{Y_MID} Z{Z} F4000
// _general_exit_point function=PARK_Center
// _general_Debug msg="PARK_Center - exiting"
// printer.configfile.settings['gcode_macro park_center'].description : Helper: Parks the toolhead in the center position
// printer.configfile.settings['bed_mesh default'].tension : 0.2
// printer.configfile.settings['bed_mesh default'].min_x : 50.5
// printer.configfile.settings['bed_mesh default'].min_y : 48.0
// printer.configfile.settings['bed_mesh default'].y_count : 7
// printer.configfile.settings['bed_mesh default'].mesh_y_pps : 2
// printer.configfile.settings['bed_mesh default'].x_count : 7
// printer.configfile.settings['bed_mesh default'].mesh_x_pps : 2
// printer.configfile.settings['bed_mesh default'].points : ((0.01875, 0.03375, 0.02875, 0.0275, 0.02625, 0.02125, 0.0275), (0.0075, 0.02375, 0.01625, 0.01625, 0.02, 0.015, 0.01375), (-0.0075, 0.005, 0.00125, 0.0025, 0.00875, 0.00875, 0.0075), (-0.00875, 0.0025, -0.00375, 0.0, 0.01, 0.0125, 0.01), (-0.01, 0.00125, -0.00375, -0.005, -0.00125, 0.0025, -0.0025), (0.0075, 0.02, 0.00875, 0.01, 0.01, 0.0125, 0.01125), (0.03375, 0.0475, 0.035, 0.02875, 0.03, 0.03, 0.035))
// printer.configfile.settings['bed_mesh default'].algo : bicubic
// printer.configfile.settings['bed_mesh default'].version : 1
// printer.configfile.settings['bed_mesh default'].max_x : 250.48
// printer.configfile.settings['bed_mesh default'].max_y : 247.98
// printer.configfile.settings['gcode_macro _user_variable'].variable_current_control : {}
// printer.configfile.settings['gcode_macro _user_variable'].variable_z_hop : 0
// printer.configfile.settings['gcode_macro _user_variable'].variable_sb_vars : {}
// printer.configfile.settings['gcode_macro _user_variable'].variable_purge : {}
// printer.configfile.settings['gcode_macro _user_variable'].variable_bedfanvars : {}
// printer.configfile.settings['gcode_macro _user_variable'].variable_homing : {}
// printer.configfile.settings['gcode_macro _user_variable'].description : Helper: Contains User defined printer variables
// printer.configfile.settings['gcode_macro _user_variable'].variable_filament : {}
// printer.configfile.settings['gcode_macro _user_variable'].gcode :
// _general_Debug msg="_USER_VARIABLE - entering"
// {% set user_klicky_z_endstop_x                   = 202.60 %}
// {% set user_klicky_z_endstop_y                   = 303.5 %}
// {% set user_klicky_safe_z                        = 16 %}                                 ; Minimum Z for attach/dock and homing functions
// {% set user_klicky_docklocation_x                = 0 %}                                  ; X Dock position
// {% set user_klicky_docklocation_y                = 306 %}                                ; Y Dock position
// {% set user_klicky_attachmove_x                   = -50 %}
// {% set user_klicky_dockmove_y                     = -20 %}
// {% set user_klicky_dock_speed                    = 50 %}                                 ; how fast should the toolhead move when docking the probe for the final movement
// {% set user_klicky_z_drop_speed                  = 20 %}                                 ; how fast the z will lower when moving to the z location to clear the probe
// {% set user_klicky_move_accel                    = 1000 %}                               ; how fast should the toolhead accelerate when moving
// {% set user_sb_vars_fan_led_name                   =  'sb_leds' %}
// {% set user_sb_vars_fan_idx                        =  '1,2,3,4,5,6,7,8'  %}
// {% set user_sb_vars_logo_led_name                  =  'sb_leds' %}
// {% set user_sb_vars_logo_idx                       =  '9,10,11,12,13,14,15,16' %}
// {% set user_sb_vars_nozzle_led_name                =  'sb_leds' %}
// {% set user_sb_vars_nozzle_idx                     =  '17,18' %}
// {% set user_sb_vars_bar_led_name                   =  'progress_bar_leds' %}
// {% set user_sb_vars_bar_idx                        =  '1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33' %}
// {% set user_status_presets_off                     = 2 %}                                ; preset number in WLED for the off preset
// {% set user_status_presets_lookup                  = {
// 'off'              : 2,
// 'ready'            : 9,
// 'busy'             : 4,
// 'heating'          : 11,
// 'leveling'         : 7,
// 'homing'           : 13,
// 'cleaning'         : 5,
// 'meshing'          : 8,
// 'calibrating_z'    : 6,
// 'printing'         : 14,
// 'complete'         : 10,
// 'cooling'          : 12
// }
// %}
// {% set user_bedfanvars_threshold                   = 110 %}                             ; If bed temp target is equal to or above this threshold, fans will be enabled. If temp is set to below this threshold, fans will be disabled.
// {% set user_bedfanvars_fast                        = 0.4 %}                             ; Fan speed once bed temp is reached
// {% set user_bedfanvars_slow                        = 0.2 %}                             ; Fan speed while bed is heating
// {% set user_bedfanvars_offset                      = 0 %}                               ; Fan is off when chamber temp < (defaultenclosure-offset), if temp is falling.
// {% set user_bedfanvars_chamber_fast                = 0.60 %}                            ; fan speed to use when trying to keep chamber enclosure at defaultEnclosure temperature (set point chamber temperature)
// {% set user_current_control_PrintCurrentXY         = 1.1 %}                             ; Steppermotor current to be used while printing
// {% set user_current_control_PrintCurrentZ          = 0.8 %}                             ; Steppermotor current to be used while printing
// {% set user_z_endstop_xy                           = [user_klicky_z_endstop_x,user_klicky_z_endstop_y,user_klicky_safe_z] %}     ; z Endstop position insight left profile
// {% set user_z_endstop_hop                          = user_klicky_safe_z %}                                                       ; z hop for moves e.g homimg
// {% set user_z_home_current                         = 0.3 %}                                                                      ; reduced homing curent for z
// {% set user_home_accel                             = user_klicky_move_accel %}                                                   ; reduced ACCEL for homing
// {% set user_bed_y_offset                           = 6 %}                                                                        ; Endstop offset to bed max y
// {% set user_probe_dock_pos                         = [user_klicky_docklocation_x,user_klicky_docklocation_y] %}   ; position of the dock
// {% set user_probe_delta_x                          = ( -1 * user_klicky_attachmove_x) %}                          ; x offset for position before dock
// {% set user_probe_delta_y                          = user_klicky_dockmove_y %}                                    ; y offset to move probe out of dock
// {% set user_z_probe_hop                            = user_klicky_safe_z %}                                        ; z minimum height to avoid crash
// {% set user_park_ParkHeightPercentage              = 0.50 %}                              ; The percentage of Z height to park the nozzle, expressed as 0.2 to 1.0
// ; If the printed object is taller then the expressed Z-axis percent height,
// ; the toolhead will then park 10mm above the object.
// {% set user_park_xy_delta                          = 25 %}                                ; distance for x or y from the edge
// {% set user_park_z_max_delta                       = 40 %}                                ; insure to do not hit cam in front
// {% set user_park_z_min                             = 30 %}                                ; minimal z from bed
// {% set user_park_pause_z_delta                     = 2.0 %}                               ; distance to increase head while PAUSE/CANCEL_PRINT
// {% set user_park_at_cancel                         = False %}                             ; park head at CANCEL_PRINT if not paused [False/True]
// {% set user_filament_current_profile               = 'ABS' %}                          ; the profile you wanted loaded when Klipper starts up ("ABS"or "PETG")
// {% set user_filament_ABS_LimitAccel                = 3501 %}                           ; PRINT ABS ACCEL LIMITS - ACCEL velocity limit
// {% set user_filament_ABS_LimitDecel                = 1751 %}                           ; PRINT ABS ACCEL LIMITS - DECEL velocity limit
// {% set user_filament_ABS_defaultTempNozzle         = 245 %}                            ; DEFAULT ABS TEMPERATURES - NOZZLE EXTRUDING temperature if none is specified
// {% set user_filament_ABS_defaultReadyNozzle        = 210 %}                            ; DEFAULT ABS TEMPERATURES - NOZZLE READY temperature if none is specified
// {% set user_filament_ABS_defaultWarmNozzle         = 160 %}                            ; DEFAULT ABS TEMPERATURES - NOZZLE WARMING temperature if none is specified
// {% set user_filament_ABS_defaultTempBed            = 110 %}                            ; DEFAULT ABS TEMPERATURES - BED temperature if none is specified
// {% set user_filament_ABS_defaultEnclosure          = 40 %}                             ; DEFAULT ABS TEMPERATURES - ENCLOSURE temperature if none is specified
// {% set user_filament_ABS_MeshToApply               = 'INSITU' %}                       ; ABS MESH :
// {% set user_filament_ABS_QGLbeforeSoakMesh         = True %}                           ; ABS HEATSOAK & COOLING - (True/False) Perfrom QGL before applying heat soak for HOTMESH
// {% set user_filament_ABS_QGLbeforeSoakPrint        = True %}                           ; ABS HEATSOAK & COOLING - (True/False) Perfrom QGL before applying heat soak for PRINT
// {% set user_filament_ABS_HotmeshSoakMinutes        = 30 %}                             ; ABS HEATSOAK & COOLING - Minutes to heat-soak prior to running mesh
// {% set user_filament_ABS_PrePrintSoakMinutes       = 25 %}                             ; ABS HEATSOAK & COOLING - Minutes to heat-soak prior to printing
// {% set user_filament_ABS_InsituMeshSoakMinutes     = 01 %}                             ; ABS HEATSOAK & COOLING - Minutes to heat-soak prior to performing an insitu mesh (in addition to PrePrintSoak)
// {% set user_filament_ABS_PostPrintCool             = 1 %}                              ; ABS HEATSOAK & COOLING - Post-Print cooling to prevent nozzle string, minutes of cooling
// {% set user_filament_ABS_PostPrintParkCool         = 2  %}                             ; ABS HEATSOAK & COOLING - Once parks, minutes of cooling
// {% set user_filament_ABS_purgeRetract              = 0.3 %}                            ; ABS OTHER RETRACTIONS - After completing purgeline, how much retraction to perform (Not normally needed)
// {% set user_filament_ABS_EndRetract                = 2.0 %}                            ; ABS OTHER RETRACTIONS - After print has completed, how much retraction to perform
// {% set user_filament_PETG_LimitAccel               = 3501 %}                           ; PRINT PETG ACCEL LIMITS - ACCEL velocity limit
// {% set user_filament_PETG_LimitDecel               = 1751 %}                           ; PRINT PETG ACCEL LIMITS - DECEL velocity limit
// {% set user_filament_PETG_defaultTempNozzle        = 240 %}                            ; DEFAULT PETG TEMPERATURES - NOZZLE EXTRUDING temperature if none is specified
// {% set user_filament_PETG_defaultReadyNozzle       = 210 %}                            ; DEFAULT PETG TEMPERATURES - NOZZLE READY temperature if none is specified
// {% set user_filament_PETG_defaultWarmNozzle        = 160 %}                            ; DEFAULT PETG TEMPERATURES - NOZZLE WARMING temperature if none is specified
// {% set user_filament_PETG_defaultTempBed           = 80 %}                             ; DEFAULT PETG TEMPERATURES - BED temperature if none is specified
// {% set user_filament_PETG_defaultEnclosure         = 40 %}                             ; DEFAULT PETG TEMPERATURES - ENCLOSURE temperature if none is specified
// {% set user_filament_PETG_MeshToApply              = 'MESH110' %}                      ; PETG MESH :
// {% set user_filament_PETG_QGLbeforeSoakMesh        = True %}                           ; PETG HEATSOAK & COOLING - (True/False) Perfrom QGL before applying heat soak for HOTMESH
// {% set user_filament_PETG_QGLbeforeSoakPrint       = True %}                           ; PETG HEATSOAK & COOLING - (True/False) Perfrom QGL before applying heat soak for PRINT
// {% set user_filament_PETG_HotmeshSoakMinutes       = 25 %}                             ; PETG HEATSOAK & COOLING - Minutes to heat-soak prior to running mesh
// {% set user_filament_PETG_PrePrintSoakMinutes      = 15 %}                             ; PETG HEATSOAK & COOLING - Minutes to heat-soak prior to printing
// {% set user_filament_PETG_InsituMeshSoakMinutes    = 01 %}                             ; PETG HEATSOAK & COOLING - Minutes to heat-soak prior to performing an insitu mesh (in addition to PrePrintSoak)
// {% set user_filament_PETG_PostPrintCool            = 1 %}                              ; PETG HEATSOAK & COOLING - Post-Print cooling to prevent nozzle string, minutes of cooling
// {% set user_filament_PETG_PostPrintParkCool        = 2  %}                             ; PETG HEATSOAK & COOLING - Once parks, minutes of cooling
// {% set user_filament_PETG_purgeRetract             = 0.1 %}                            ; PETG OTHER RETRACTIONS - After completing purgeline, how much retraction to perform (Not normally needed)
// {% set user_filament_PETG_EndRetract               = 2.0 %}                            ; PETG OTHER RETRACTIONS - After print has completed, how much retraction to perform
// {% set user_extruder_min_add                       = 30 %}                            // printer.configfile.settings['gcode_macro _user_variable'].variable_respond : {}
// printer.configfile.settings['gcode_macro _user_variable'].variable_mag_probe : {}
// printer.configfile.settings['gcode_macro _user_variable'].variable_var : {}
// printer.configfile.settings['gcode_macro _user_variable'].variable_hw : {}
// printer.configfile.settings['gcode_macro _user_variable'].variable_speed : {}
// printer.configfile.settings['gcode_macro _user_variable'].variable_park : {}
// printer.configfile.settings['gcode_macro _user_variable'].variable_peripheral : {}
// printer.configfile.settings['gcode_macro _user_variable'].variable_unload_sd : False
// printer.configfile.settings['gcode_macro _user_variable'].variable_status_presets : {}
// printer.configfile.settings['gcode_macro _user_variable'].variable_print_start : {}
// printer.configfile.settings['gcode_macro _user_variable'].variable_probe : {}
// printer.configfile.settings['gcode_macro _user_variable'].variable_prime : {}
// printer.configfile.settings['gcode_macro _user_variable'].variable_klicky : {}
// printer.configfile.settings['gcode_macro _user_variable'].variable_run : False
// printer.configfile.settings['delayed_gcode _clear_display'].gcode :
// _general_Debug msg="_CLEAR_DISPLAY - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% if user.hw.display.ena %} M117 {% endif %}
// _general_Debug msg="_CLEAR_DISPLAY - exiting"
// printer.configfile.settings['delayed_gcode _clear_display'].initial_duration : 0.0
// printer.configfile.settings['delayed_gcode probe_accuracy_set_next_state'].gcode :
// {% set tmacro = printer['gcode_macro _GLOBAL_VARS'] %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=state VALUE='"{ tmacro.next_state }"'
// printer.configfile.settings['delayed_gcode probe_accuracy_set_next_state'].initial_duration : 0.0
// printer.configfile.settings['gcode_macro _runout_info'].gcode :
// _general_Debug msg="_RUNOUT_INFO - entering"
// {% set user = printer['gcode_macro _USER_VARIABLE'] %}
// {% set out = ['RUNOUT: ' + user.hw.runout.type|capitalize + ' Sensor'] if user.hw.runout.sensor
// else ['RUNOUT: Stored in file']                                if user.hw.runout.type == 'file'
// else ['RUNOUT: Not monitored'] %}
// {% set enable = printer["filament_" + user.hw.runout.type + "_sensor runout"].enabled if user.hw.runout.sensor
// else False %}
// {% set _dummy = out.append('Enabled: ' + enable|lower) if user.hw.runout.sensor %}
// {% set detected = printer["filament_" + user.hw.runout.type + "_sensor runout"].filament_detected if enable
// else printer.save_variables.variables.filament_loaded                                if user.hw.runout.type == 'file' %}
// {% set _dummy = out.append('Detect Filament: ' + detected|lower) if detected is defined %}
// {action_respond_info(out|join("\n"))}
// _general_Debug msg="_RUNOUT_INFO - exiting"
// printer.configfile.settings['gcode_macro _runout_info'].description : Helper: Print runout sensor status
// printer.configfile.settings['led_effect sb_fan_cooling'].layers :
// chase  0.3  2 add (0.00,0.00,1.00),(0.00,0.00,0.0)
// printer.configfile.settings['led_effect sb_fan_cooling'].leds :
// neopixel:sb_leds (1,3,7,8,6,2)
// printer.configfile.settings['led_effect sb_fan_cooling'].frame_rate : 5.0
// printer.configfile.settings['led_effect sb_fan_cooling'].run_on_error : False
// printer.configfile.settings['led_effect sb_fan_cooling'].autostart : False
// printer.configfile.settings['delayed_gcode wait_delayed'].gcode :
// _general_Debug msg="WAIT_Delayed- entering"
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set wait_variable = global.wait_variable %}
// {% set count = global.wait_variable.count|float %}
// {% set duration = global.wait_variable.duration|float %}
// M117 Waiting... {((duration * count) / 60)|round(3)} minutes left.
// {% set _dummy = wait_variable.update({'count':(count-1.0)}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=wait_variable VALUE="{wait_variable}"
// {% if count > 0 %} _WAIT_Loop  {% endif %}
// {% if count <= 0 %}
// {% set _dummy = wait_variable.update({'waiting':False}) %}
// SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=wait_variable VALUE="{wait_variable}"
// LIGHTS_OFF                                          ;turn off WLED lights - lights controlled by WLED servers (ESP32 chips)
// PROGRESS_BAR_LEDS_OFF                               ;turn off progress bar lights - lights controlled by Octopus Pro board's RGB port
// _CASELIGHT_OFF                                      ;turn off 24V White lights - lights controlled by Octopus Pro board's HE1 port
// STATUS_OFF                                          ;turn off Stealthburner LEDs - lights controlled by EBB36 board
// {% endif %}
// _general_Debug msg="WAIT_Delayed- exiting"
// printer.configfile.settings['delayed_gcode wait_delayed'].initial_duration : 0.0
// printer.configfile.settings['gcode_macro wled_control'].gcode :
// _general_Debug msg="WLED_CONTROL- entering"
// {% set strip = params.STRIP|default('lights')|string %}
// {% set brightness = params.BRIGHTNESS|default(-1)|int %}
// {% set intensity = params.INTENSITY|default(-1)|int %}
// {% set speed = params.SPEED|default(-1)|int %}
// {action_call_remote_method("set_wled_state",
// strip=strip,
// brightness=brightness,
// intensity=intensity,
// speed=speed)}
// _general_Debug msg="WLED_CONTROL- exiting"
// printer.configfile.settings['gcode_macro wled_control'].description : Helper: Control effect values and brightness for WLED strips
// printer.configfile.settings['gcode_macro set_nozzle_leds_by_name'].gcode :
// _general_Debug msg="SET_NOZZLE_LEDS_BY_NAME - entering"
// {% set color_name = params.COLOR %}
// {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
// {% set color = global.sb_vars.colors[color_name|lower] %}
// _SET_NOZZLE_LEDS R={color.r} G={color.g} B={color.b} W={color.w}
// _general_Debug msg="SET_NOZZLE_LEDS_BY_NAME - exiting"
// printer.configfile.settings['gcode_macro set_nozzle_leds_by_name'].description : Helper: Sets the color of the Stealthburner NOZZLE leds by only using the name of the color
// printer.configfile.save_config_pending : False
// printer['controller_fan In-take_Right_Side_Controller']
// printer['controller_fan In-take_Right_Side_Controller'].speed : 1.0
// printer['controller_fan In-take_Right_Side_Controller'].rpm : 1355.44734262
// printer.display_status
// printer.display_status.progress : 0.0
// printer.display_status.message : complete
// printer['extended_macro PARK_DICT']
// printer.extruder
// printer.extruder.pressure_advance : 0.055
// printer.extruder.target : 0.0
// printer.extruder.power : 0.0
// printer.extruder.can_extrude : False
// printer.extruder.smooth_time : 0.03
// printer.extruder.temperature : 27.21
// printer.fan
// printer.fan.speed : 0.0
// printer.fan.rpm : 0.0
// printer['fan_generic Bedfan_Left']
// printer['fan_generic Bedfan_Left'].speed : 0.0
// printer['fan_generic Bedfan_Left'].rpm : None
// printer['fan_generic Bedfan_Right']
// printer['fan_generic Bedfan_Right'].speed : 0.0
// printer['fan_generic Bedfan_Right'].rpm : None
// printer['fan_generic filter']
// printer['fan_generic filter'].speed : 0.0
// printer['fan_generic filter'].rpm : None
// printer['filament_motion_sensor runout']
// printer['filament_motion_sensor runout'].filament_detected : True
// printer['filament_motion_sensor runout'].enabled : False
// printer.firmware_retraction
// printer.firmware_retraction.retract_length : 0.75
// printer.firmware_retraction.unretract_extra_length : 0.0
// printer.firmware_retraction.unretract_speed : 30.0
// printer.firmware_retraction.retract_speed : 50.0
// printer['gcode_macro _ADD_PRINT_TIME']
// printer['gcode_macro _ATTACH_EUCLID_PROBE']
// printer['gcode_macro _ATTACH_KLICKY_PROBE']
// printer['gcode_macro _ATTACH_PROBE']
// printer['gcode_macro _BedFansFast']
// printer['gcode_macro _BedFansFastPlus_02']
// printer['gcode_macro _BedFansOff']
// printer['gcode_macro _BedFansSlow']
// printer['gcode_macro _CASELIGHT_OFF']
// printer['gcode_macro _CASELIGHT_ON']
// printer['gcode_macro _CG28']
// printer['gcode_macro _CHECK_CONSITENT']
// printer['gcode_macro _CHECK_FILTER']
// printer['gcode_macro _CHECK_STATE']
// printer['gcode_macro _COOL_WAIT']
// printer['gcode_macro _DISABLE_PROGRESS_BAR']
// printer['gcode_macro _DISPLAY_PRINT_TIME']
// printer['gcode_macro _do_error_if_probe_deployed']
// printer['gcode_macro _do_error_if_probe_not_deployed']
// printer['gcode_macro _DOCK_EUCLID_PROBE']
// printer['gcode_macro _DOCK_KLICKY_PROBE']
// printer['gcode_macro _DOCK_PROBE']
// printer['gcode_macro _ENABLE_PROGRESS_BAR']
// printer['gcode_macro _error_if_probe_deployed']
// printer['gcode_macro _error_if_probe_not_deployed']
// printer['gcode_macro _EXECUTE_AT_INIT']
// printer['gcode_macro _FAN_STOPPAGE_ROUTINE']
// printer['gcode_macro _FILAMENT_BALL']
// printer['gcode_macro _FILAMENT_READY']
// printer['gcode_macro _FILTER_INFO']
// printer['gcode_macro _FILTER_ON']
// printer['gcode_macro _general_Debug']
// printer['gcode_macro _general_entry_point']
// printer['gcode_macro _general_exit_point']
// printer['gcode_macro _GLOBAL_VARS']
// printer['gcode_macro _GLOBAL_VARS'].bedfanvars.flag : 0
// printer['gcode_macro _GLOBAL_VARS'].bedfanvars.lasttemp : 0.0
// printer['gcode_macro _GLOBAL_VARS'].restore.absolute.extrude : True
// printer['gcode_macro _GLOBAL_VARS'].restore.absolute.speed : 1500
// printer['gcode_macro _GLOBAL_VARS'].restore.absolute.coordinates : True
// printer['gcode_macro _GLOBAL_VARS'].layer.current : 0
// printer['gcode_macro _GLOBAL_VARS'].layer.total : 0
// printer['gcode_macro _GLOBAL_VARS']._mag_probe.id : 2
// printer['gcode_macro _GLOBAL_VARS'].bed_mesh_store.save_at_end : False
// printer['gcode_macro _GLOBAL_VARS'].current_led_state.bar_leds : set_bar_leds_rainbow
// printer['gcode_macro _GLOBAL_VARS'].current_led_state.fan_leds : set_fan_leds_rainbow
// printer['gcode_macro _GLOBAL_VARS'].current_led_state.nozzle_leds : set_nozzle_leds_white
// printer['gcode_macro _GLOBAL_VARS'].current_led_state.logo_leds : set_logo_leds_rainbow_barf
// printer['gcode_macro _GLOBAL_VARS'].probe_variables.z_endstop_x : 202.6
// printer['gcode_macro _GLOBAL_VARS'].probe_variables.z_endstop_y : 303.5
// printer['gcode_macro _GLOBAL_VARS'].progressbar_enabled : 0
// printer['gcode_macro _GLOBAL_VARS'].state : Prepare
// printer['gcode_macro _GLOBAL_VARS'].fancheckvars.he_stop_count : 0
// printer['gcode_macro _GLOBAL_VARS'].fancheckvars.part_cooling_fan_enabled : 0
// printer['gcode_macro _GLOBAL_VARS'].fancheckvars.pc_stop_count : 0
// printer['gcode_macro _GLOBAL_VARS'].bucket_pos : 1
// printer['gcode_macro _GLOBAL_VARS'].run : True
// printer['gcode_macro _GLOBAL_VARS']._home_z.calibrate_z_next : False
// printer['gcode_macro _GLOBAL_VARS'].sb_vars.colors.pink.r : 1.0
// printer['gcode_macro _GLOBAL_VARS'].sb_vars.colors.pink.b : 0.5
// printer['gcode_macro _GLOBAL_VARS'].sb_vars.colors.pink.w : 0.0
// printer['gcode_macro _GLOBAL_VARS'].sb_vars.colors.pink.g : 0.0
// printer['gcode_macro _GLOBAL_VARS'].sb_vars.colors.blue.r : 0.0
// printer['gcode_macro _GLOBAL_VARS'].sb_vars.colors.blue.b : 1.0
// printer['gcode_macro _GLOBAL_VARS'].sb_vars.colors.blue.w : 0.0
// printer['gcode_macro _GLOBAL_VARS'].sb_vars.colors.blue.g : 0.0
// printer['gcode_macro _GLOBAL_VARS'].sb_vars.colors.off.r : 0.0
// printer['gcode_macro _GLOBAL_VARS'].sb_vars.colors.off.b : 0.0
// printer['gcode_macro _GLOBAL_VARS'].sb_vars.colors.off.w : 0.0
// printer['gcode_macro _GLOBAL_VARS'].sb_vars.colors.off.g : 0.0
// printer['gcode_macro _GLOBAL_VARS'].sb_vars.colors.purple.r : 0.5
// printer['gcode_macro _GLOBAL_VARS'].sb_vars.colors.purple.b : 1.0
// printer['gcode_macro _GLOBAL_VARS'].sb_vars.colors.purple.w : 0.0
// printer['gcode_macro _GLOBAL_VARS'].sb_vars.colors.purple.g : 0.0
// printer['gcode_macro _GLOBAL_VARS'].sb_vars.colors.yellow.r : 1.0
// printer['gcode_macro _GLOBAL_VARS'].sb_vars.colors.yellow.b : 0.0
// printer['gcode_macro _GLOBAL_VARS'].sb_vars.colors.yellow.w : 0.0
// printer['gcode_macro _GLOBAL_VARS'].sb_vars.colors.yellow.g : 1.0
// printer['gcode_macro _GLOBAL_VARS'].sb_vars.colors.standby.r : 0.01
// printer['gcode_macro _GLOBAL_VARS'].sb_vars.colors.standby.b : 0.01
// printer['gcode_macro _GLOBAL_VARS'].sb_vars.colors.standby.w : 0.5
// printer['gcode_macro _GLOBAL_VARS'].sb_vars.colors.standby.g : 0.01
// printer['gcode_macro _GLOBAL_VARS'].sb_vars.colors.green.r : 0.0
// printer['gcode_macro _GLOBAL_VARS'].sb_vars.colors.green.b : 0.0
// printer['gcode_macro _GLOBAL_VARS'].sb_vars.colors.green.w : 0.0
// printer['gcode_macro _GLOBAL_VARS'].sb_vars.colors.green.g : 1.0
// printer['gcode_macro _GLOBAL_VARS'].sb_vars.colors.orange.r : 1.0
// printer['gcode_macro _GLOBAL_VARS'].sb_vars.colors.orange.b : 0.0
// printer['gcode_macro _GLOBAL_VARS'].sb_vars.colors.orange.w : 0.0
// printer['gcode_macro _GLOBAL_VARS'].sb_vars.colors.orange.g : 0.25
// printer['gcode_macro _GLOBAL_VARS'].sb_vars.colors.dimwhite.r : 0.0
// printer['gcode_macro _GLOBAL_VARS'].sb_vars.colors.dimwhite.b : 0.0
// printer['gcode_macro _GLOBAL_VARS'].sb_vars.colors.dimwhite.w : 0.4
// printer['gcode_macro _GLOBAL_VARS'].sb_vars.colors.dimwhite.g : 0.0
// printer['gcode_macro _GLOBAL_VARS'].sb_vars.colors.white.r : 0.0
// printer['gcode_macro _GLOBAL_VARS'].sb_vars.colors.white.b : 0.0
// printer['gcode_macro _GLOBAL_VARS'].sb_vars.colors.white.w : 1.0
// printer['gcode_macro _GLOBAL_VARS'].sb_vars.colors.white.g : 0.0
// printer['gcode_macro _GLOBAL_VARS'].sb_vars.colors.red.r : 1.0
// printer['gcode_macro _GLOBAL_VARS'].sb_vars.colors.red.b : 0.0
// printer['gcode_macro _GLOBAL_VARS'].sb_vars.colors.red.w : 0.0
// printer['gcode_macro _GLOBAL_VARS'].sb_vars.colors.red.g : 0.0
// printer['gcode_macro _GLOBAL_VARS']._set_z_current.last_val : CONFIG
// printer['gcode_macro _GLOBAL_VARS']._set_acc.last_val : CONFIG
// printer['gcode_macro _GLOBAL_VARS'].query_probe.id : 2
// printer['gcode_macro _GLOBAL_VARS'].execute : False
// printer['gcode_macro _GLOBAL_VARS'].wait_variable.count : 300.0
// printer['gcode_macro _GLOBAL_VARS'].wait_variable.duration : 2
// printer['gcode_macro _GLOBAL_VARS'].wait_variable.waiting : False
// printer['gcode_macro _GLOBAL_VARS'].wait_variable.ready : 200
// printer['gcode_macro _GLOBAL_VARS'].wait_variable.temp : 250
// printer['gcode_macro _GLOBAL_VARS']._check_state.error_id : 0
// printer['gcode_macro _GLOBAL_VARS']._probe_action.man_state : unknown
// printer['gcode_macro _GLOBAL_VARS'].tmacro.bed_temp : 0
// printer['gcode_macro _GLOBAL_VARS'].tmacro.end_idle_minutes : 0
// printer['gcode_macro _GLOBAL_VARS'].tmacro.dwell_seconds : 0
// printer['gcode_macro _GLOBAL_VARS'].tmacro.state : start
// printer['gcode_macro _GLOBAL_VARS'].tmacro.extruder_temp : 0
// printer['gcode_macro _GLOBAL_VARS'].tmacro.extruder_soak_minutes : 0
// printer['gcode_macro _GLOBAL_VARS'].tmacro.bed_soak_minutes : 0
// printer['gcode_macro _GLOBAL_VARS'].tmacro.start_idle_minutes : 0
// printer['gcode_macro _GLOBAL_VARS'].tmacro.dwell_lift_z : 0
// printer['gcode_macro _GLOBAL_VARS'].tmacro.next_state : none
// printer['gcode_macro _GLOBAL_VARS'].bed_mesh.buffer : 20
// printer['gcode_macro _GLOBAL_VARS'].bed_mesh.last_area_end_x : -1
// printer['gcode_macro _GLOBAL_VARS'].bed_mesh.last_area_start_y : -1
// printer['gcode_macro _GLOBAL_VARS'].bed_mesh.last_area_start_x : -1
// printer['gcode_macro _GLOBAL_VARS'].bed_mesh.last_area_end_y : -1
// printer['gcode_macro _HEAT_WAIT']
// printer['gcode_macro _HOME_Z']
// printer['gcode_macro _HOTEND_FAN_CHECK']
// printer['gcode_macro _LAYER']
// printer['gcode_macro _LIGHTS_FLICKER']
// printer['gcode_macro _MAG_PROBE']
// printer['gcode_macro _Mag_Probe_Debug']
// printer['gcode_macro _magprobe_status_busy']
// printer['gcode_macro _magprobe_status_calibrating_z']
// printer['gcode_macro _magprobe_status_cleaning']
// printer['gcode_macro _magprobe_status_homing']
// printer['gcode_macro _magprobe_status_leveling']
// printer['gcode_macro _magprobe_status_meshing']
// printer['gcode_macro _magprobe_status_ready']
// printer['gcode_macro _PART_COOLING_FAN_CHECK']
// printer['gcode_macro _POWER_OFF_ESP2']
// printer['gcode_macro _POWER_OFF_ESP_PSU']
// printer['gcode_macro _POWER_OFF_IR_PSU']
// printer['gcode_macro _POWER_OFF_Pi_PSU']
// printer['gcode_macro _POWER_OFF_RGB2']
// printer['gcode_macro _POWER_OFF_RGB_PSU']
// printer['gcode_macro _POWER_ON_ESP2']
// printer['gcode_macro _POWER_ON_ESP_PSU']
// printer['gcode_macro _POWER_ON_IR_PSU']
// printer['gcode_macro _POWER_ON_Pi_PSU']
// printer['gcode_macro _POWER_ON_RGB2']
// printer['gcode_macro _POWER_ON_RGB_PSU']
// printer['gcode_macro _PRINT_AR']
// printer['gcode_macro _PRINT_OFFSET']
// printer['gcode_macro _PROBE_ACTION']
// printer['gcode_macro _PROBE_DEPLOY']
// printer['gcode_macro _PROBE_STOW']
// printer['gcode_macro _RESTORE_FILAMENT_SENSOR']
// printer['gcode_macro _RUNOUT_INFO']
// printer['gcode_macro _SD_PRINT_STATS']
// printer['gcode_macro _SD_PRINTER_STATS']
// printer['gcode_macro _SET_ACC']
// printer['gcode_macro _SET_BAR_LEDS']
// printer['gcode_macro _SET_FAN_LEDS']
// printer['gcode_macro _SET_FILTER']
// printer['gcode_macro _set_leds']
// printer['gcode_macro _SET_LOGO_LEDS']
// printer['gcode_macro _SET_NOZZLE_LEDS']
// printer['gcode_macro _SET_PLATE_OFFSET']
// printer['gcode_macro _SET_SB_LEDS']
// printer['gcode_macro _SET_Z_CURRENT']
// printer['gcode_macro _TEST_PROBE0']
// printer['gcode_macro _TEST_PROBE1']
// printer['gcode_macro _TOOLHEAD_PARK']
// printer['gcode_macro _USER_VARIABLE']
// printer['gcode_macro _USER_VARIABLE'].respond.acc : 0
// printer['gcode_macro _USER_VARIABLE'].respond.layer : 0
// printer['gcode_macro _USER_VARIABLE'].respond.z_current : 0
// printer['gcode_macro _USER_VARIABLE'].respond.display_info : False
// printer['gcode_macro _USER_VARIABLE'].respond.debug : False
// printer['gcode_macro _USER_VARIABLE'].respond.probe_action : 1
// printer['gcode_macro _USER_VARIABLE'].bedfanvars.threshold : 110
// printer['gcode_macro _USER_VARIABLE'].bedfanvars.chamber_fast : 0.6
// printer['gcode_macro _USER_VARIABLE'].bedfanvars.slow : 0.2
// printer['gcode_macro _USER_VARIABLE'].bedfanvars.fast : 0.4
// printer['gcode_macro _USER_VARIABLE'].bedfanvars.offset : 0
// printer['gcode_macro _USER_VARIABLE'].run : True
// printer['gcode_macro _USER_VARIABLE'].print_start.prime_mult : 2.0
// printer['gcode_macro _USER_VARIABLE'].print_start.bed_up : 10.0
// printer['gcode_macro _USER_VARIABLE'].print_start.ival : 1
// printer['gcode_macro _USER_VARIABLE'].print_start.time.bed : 180
// printer['gcode_macro _USER_VARIABLE'].print_start.time.extruder : 180
// printer['gcode_macro _USER_VARIABLE'].prime.spacing : 0.4
// printer['gcode_macro _USER_VARIABLE'].prime.pos.y : 30.0
// printer['gcode_macro _USER_VARIABLE'].prime.pos.x : 5.0
// printer['gcode_macro _USER_VARIABLE'].prime.pos.z : 0.34
// printer['gcode_macro _USER_VARIABLE'].prime.seg : 11
// printer['gcode_macro _USER_VARIABLE'].prime.extrude_per_seg : 2
// printer['gcode_macro _USER_VARIABLE'].prime.length_per_seg : 20.0
// printer['gcode_macro _USER_VARIABLE'].prime.dir : Y+
// printer['gcode_macro _USER_VARIABLE'].peripheral.filter.run_after_print : 1800
// printer['gcode_macro _USER_VARIABLE'].peripheral.filter.warning : 80
// printer['gcode_macro _USER_VARIABLE'].peripheral.filter.on_val : 0.5
// printer['gcode_macro _USER_VARIABLE'].peripheral.vent.run_after_print : 1805
// printer['gcode_macro _USER_VARIABLE'].peripheral.vent.on_val : 15
// printer['gcode_macro _USER_VARIABLE'].peripheral.ADXLsoakMinutes : 30
// printer['gcode_macro _USER_VARIABLE'].peripheral.caselight.on_val : 0.4
// printer['gcode_macro _USER_VARIABLE'].probe.dock.y : 286
// printer['gcode_macro _USER_VARIABLE'].probe.dock.x : 0
// printer['gcode_macro _USER_VARIABLE'].probe.store.y : 306
// printer['gcode_macro _USER_VARIABLE'].probe.store.x : 50
// printer['gcode_macro _USER_VARIABLE'].park.pause.y : 304.5
// printer['gcode_macro _USER_VARIABLE'].park.pause.x : [49.5, 128.0]
// printer['gcode_macro _USER_VARIABLE'].park.pause.dz : 2.0
// printer['gcode_macro _USER_VARIABLE'].park.center.y : 150.0
// printer['gcode_macro _USER_VARIABLE'].park.center.x : 150.0
// printer['gcode_macro _USER_VARIABLE'].park.center.z : 130.0
// printer['gcode_macro _USER_VARIABLE'].park.ParkHeightPercentage : 0.5
// printer['gcode_macro _USER_VARIABLE'].park.bed.y : 150.0
// printer['gcode_macro _USER_VARIABLE'].park.bed.x : 150.0
// printer['gcode_macro _USER_VARIABLE'].park.bed.z : 30
// printer['gcode_macro _USER_VARIABLE'].park.mid.y : 153.0
// printer['gcode_macro _USER_VARIABLE'].park.mid.x : 150.0
// printer['gcode_macro _USER_VARIABLE'].park.park_at_cancel : False
// printer['gcode_macro _USER_VARIABLE'].park.front.y : 25.0
// printer['gcode_macro _USER_VARIABLE'].park.front.x : 150.0
// printer['gcode_macro _USER_VARIABLE'].park.front.z : 220.0
// printer['gcode_macro _USER_VARIABLE'].park.rear.y : 275.0
// printer['gcode_macro _USER_VARIABLE'].park.rear.x : 25.0
// printer['gcode_macro _USER_VARIABLE'].park.rear.z : 220.0
// printer['gcode_macro _USER_VARIABLE'].park.frontlow.y : 25.0
// printer['gcode_macro _USER_VARIABLE'].park.frontlow.x : 150.0
// printer['gcode_macro _USER_VARIABLE'].park.frontlow.z : 30
// printer['gcode_macro _USER_VARIABLE'].hw.runout.ena : False
// printer['gcode_macro _USER_VARIABLE'].hw.runout.sensor : False
// printer['gcode_macro _USER_VARIABLE'].hw.runout.type : none
// printer['gcode_macro _USER_VARIABLE'].hw.relay.ena : False
// printer['gcode_macro _USER_VARIABLE'].hw.mag_probe.ena : True
// printer['gcode_macro _USER_VARIABLE'].hw.mag_probe.euclid : True
// printer['gcode_macro _USER_VARIABLE'].hw.mag_probe.klicky : False
// printer['gcode_macro _USER_VARIABLE'].hw.endstop_temp.ena : False
// printer['gcode_macro _USER_VARIABLE'].hw.caselight.ena : True
// printer['gcode_macro _USER_VARIABLE'].hw.filter.ena : True
// printer['gcode_macro _USER_VARIABLE'].hw.chamber.ena : True
// printer['gcode_macro _USER_VARIABLE'].hw.chamber.fan : True
// printer['gcode_macro _USER_VARIABLE'].hw.chamber.type : fan
// printer['gcode_macro _USER_VARIABLE'].hw.auto_z_offset.ena : True
// printer['gcode_macro _USER_VARIABLE'].hw.auto_z_offset.type : z_calib
// printer['gcode_macro _USER_VARIABLE'].hw.auto_z_offset.manu : False
// printer['gcode_macro _USER_VARIABLE'].hw.auto_z_offset.auto : True
// printer['gcode_macro _USER_VARIABLE'].hw.display.ena : False
// printer['gcode_macro _USER_VARIABLE'].purge.purge_len : 10
// printer['gcode_macro _USER_VARIABLE'].purge.purge_spd : 150
// printer['gcode_macro _USER_VARIABLE'].purge.bucket_start : 27
// printer['gcode_macro _USER_VARIABLE'].purge.clearance_z : 15
// printer['gcode_macro _USER_VARIABLE'].purge.prep_spd_xy : 3000
// printer['gcode_macro _USER_VARIABLE'].purge.brush_top : 3
// printer['gcode_macro _USER_VARIABLE'].purge.prep_spd_z : 1500
// printer['gcode_macro _USER_VARIABLE'].purge.brush_start : 59
// printer['gcode_macro _USER_VARIABLE'].purge.wipe_qty : 3
// printer['gcode_macro _USER_VARIABLE'].purge.enable_purge : True
// printer['gcode_macro _USER_VARIABLE'].purge.wipe_spd_xy : 5000
// printer['gcode_macro _USER_VARIABLE'].purge.purge_temp_min : 240
// printer['gcode_macro _USER_VARIABLE'].purge.brush_width : 30
// printer['gcode_macro _USER_VARIABLE'].purge.bucket_left_width : 45
// printer['gcode_macro _USER_VARIABLE'].purge.brush_front : 302
// printer['gcode_macro _USER_VARIABLE'].purge.wipe.start.y : 302
// printer['gcode_macro _USER_VARIABLE'].purge.wipe.start.x : [57, 27]
// printer['gcode_macro _USER_VARIABLE'].purge.wipe.start.z : 3
// printer['gcode_macro _USER_VARIABLE'].purge.wipe.travel.z : 18
// printer['gcode_macro _USER_VARIABLE'].purge.wipe.end.y : 306.0
// printer['gcode_macro _USER_VARIABLE'].purge.wipe.end.x : [27, 57]
// printer['gcode_macro _USER_VARIABLE'].purge.wipe.end.z : 3
// printer['gcode_macro _USER_VARIABLE'].purge.wipe.cnt : 3
// printer['gcode_macro _USER_VARIABLE'].purge.wipe.offset : 1.33333333333
// printer['gcode_macro _USER_VARIABLE'].purge.ooze_dwell : 2
// printer['gcode_macro _USER_VARIABLE'].purge.purge_ret : 2
// printer['gcode_macro _USER_VARIABLE'].purge.location_bucket_rear : False
// printer['gcode_macro _USER_VARIABLE'].purge.bucket_right_width : 40
// printer['gcode_macro _USER_VARIABLE'].purge.bucket_gap : 36
// printer['gcode_macro _USER_VARIABLE'].purge.purge.y : 304.5
// printer['gcode_macro _USER_VARIABLE'].purge.purge.x : [49.5, 128.0]
// printer['gcode_macro _USER_VARIABLE'].purge.purge.z : 5.5
// printer['gcode_macro _USER_VARIABLE'].purge.brush_depth : 5
// printer['gcode_macro _USER_VARIABLE'].var.temp.endstop : 0.0
// printer['gcode_macro _USER_VARIABLE'].var.temp.chamber : 40
// printer['gcode_macro _USER_VARIABLE'].var.temp.bed : 110
// printer['gcode_macro _USER_VARIABLE'].var.temp.extruder : 245
// printer['gcode_macro _USER_VARIABLE'].var.delta.chamber : 0
// printer['gcode_macro _USER_VARIABLE'].var.delta.bed : 10
// printer['gcode_macro _USER_VARIABLE'].var.z_adjust : 0.0
// printer['gcode_macro _USER_VARIABLE'].var.filter : True
// printer['gcode_macro _USER_VARIABLE'].var.prime_height : 0.0
// printer['gcode_macro _USER_VARIABLE'].var.time.soak : 1500.0
// printer['gcode_macro _USER_VARIABLE'].var.time.soak_extra : 900
// printer['gcode_macro _USER_VARIABLE'].var.redo_qgl : True
// printer['gcode_macro _USER_VARIABLE'].sb_vars.bar_led_name : progress_bar_leds
// printer['gcode_macro _USER_VARIABLE'].sb_vars.logo_led_name : sb_leds
// printer['gcode_macro _USER_VARIABLE'].sb_vars.fan_idx : 1,2,3,4,5,6,7,8
// printer['gcode_macro _USER_VARIABLE'].sb_vars.nozzle_led_name : sb_leds
// printer['gcode_macro _USER_VARIABLE'].sb_vars.fan_led_name : sb_leds
// printer['gcode_macro _USER_VARIABLE'].sb_vars.nozzle_idx : 17,18
// printer['gcode_macro _USER_VARIABLE'].sb_vars.bar_idx : 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33
// printer['gcode_macro _USER_VARIABLE'].sb_vars.logo_idx : 9,10,11,12,13,14,15,16
// printer['gcode_macro _USER_VARIABLE'].status_presets.lookup.busy : 4
// printer['gcode_macro _USER_VARIABLE'].status_presets.lookup.off : 2
// printer['gcode_macro _USER_VARIABLE'].status_presets.lookup.complete : 10
// printer['gcode_macro _USER_VARIABLE'].status_presets.lookup.leveling : 7
// printer['gcode_macro _USER_VARIABLE'].status_presets.lookup.heating : 11
// printer['gcode_macro _USER_VARIABLE'].status_presets.lookup.cooling : 12
// printer['gcode_macro _USER_VARIABLE'].status_presets.lookup.printing : 14
// printer['gcode_macro _USER_VARIABLE'].status_presets.lookup.cleaning : 5
// printer['gcode_macro _USER_VARIABLE'].status_presets.lookup.homing : 13
// printer['gcode_macro _USER_VARIABLE'].status_presets.lookup.ready : 9
// printer['gcode_macro _USER_VARIABLE'].status_presets.lookup.calibrating_z : 6
// printer['gcode_macro _USER_VARIABLE'].status_presets.lookup.meshing : 8
// printer['gcode_macro _USER_VARIABLE'].status_presets.off : 2
// printer['gcode_macro _USER_VARIABLE'].homing.z_endstop.y : 303.5
// printer['gcode_macro _USER_VARIABLE'].homing.z_endstop.x : 202.6
// printer['gcode_macro _USER_VARIABLE'].homing.z_endstop.z : 4.0
// printer['gcode_macro _USER_VARIABLE'].homing.z_endstop.hop : 16
// printer['gcode_macro _USER_VARIABLE'].homing.z_current : 0.3
// printer['gcode_macro _USER_VARIABLE'].homing.accel : 1000
// printer['gcode_macro _USER_VARIABLE'].filament.retract.cancel : 1.5
// printer['gcode_macro _USER_VARIABLE'].filament.retract.pause : 0.5
// printer['gcode_macro _USER_VARIABLE'].filament.retract.end : 2.0
// printer['gcode_macro _USER_VARIABLE'].filament.profile.HotmeshSoakMinutes : 30
// printer['gcode_macro _USER_VARIABLE'].filament.profile.LimitDecel : 1751
// printer['gcode_macro _USER_VARIABLE'].filament.profile.MeshToApply : INSITU
// printer['gcode_macro _USER_VARIABLE'].filament.profile.name : ABS
// printer['gcode_macro _USER_VARIABLE'].filament.profile.PrePrintSoakMinutes : 25
// printer['gcode_macro _USER_VARIABLE'].filament.profile.InsituMeshSoakMinutes : 1
// printer['gcode_macro _USER_VARIABLE'].filament.profile.EndRetract : 2.0
// printer['gcode_macro _USER_VARIABLE'].filament.profile.PostPrintCool : 1
// printer['gcode_macro _USER_VARIABLE'].filament.profile.defaultTempBed : 110
// printer['gcode_macro _USER_VARIABLE'].filament.profile.defaultReadyNozzle : 210
// printer['gcode_macro _USER_VARIABLE'].filament.profile.defaultWarmNozzle : 160
// printer['gcode_macro _USER_VARIABLE'].filament.profile.defaultTempNozzle : 245
// printer['gcode_macro _USER_VARIABLE'].filament.profile.defaultEnclosure : 40
// printer['gcode_macro _USER_VARIABLE'].filament.profile.PostPrintParkCool : 2
// printer['gcode_macro _USER_VARIABLE'].filament.profile.LimitAccel : 3501
// printer['gcode_macro _USER_VARIABLE'].filament.profile.purgeRetract : 0.3
// printer['gcode_macro _USER_VARIABLE'].filament.profile.QGLbeforeSoakPrint : True
// printer['gcode_macro _USER_VARIABLE'].filament.profile.QGLbeforeSoakMesh : True
// printer['gcode_macro _USER_VARIABLE'].filament.unload_distance : 75
// printer['gcode_macro _USER_VARIABLE'].filament.load_extrude : 50
// printer['gcode_macro _USER_VARIABLE'].filament.load_distance : 90
// printer['gcode_macro _USER_VARIABLE'].unload_sd : True
// printer['gcode_macro _USER_VARIABLE'].mag_probe.debug : False
// printer['gcode_macro _USER_VARIABLE'].mag_probe.state : docked
// printer['gcode_macro _USER_VARIABLE'].speed.load : 3000
// printer['gcode_macro _USER_VARIABLE'].speed.prime : 1500
// printer['gcode_macro _USER_VARIABLE'].speed.ZprobeSpeed : 5.0
// printer['gcode_macro _USER_VARIABLE'].speed.NPLimitDecel : 1500
// printer['gcode_macro _USER_VARIABLE'].speed.ZprobeSamples : 7
// printer['gcode_macro _USER_VARIABLE'].speed.ZprobeRetract : 1.5
// printer['gcode_macro _USER_VARIABLE'].speed.wipe : 5000.0
// printer['gcode_macro _USER_VARIABLE'].speed.z_hop : 1200
// printer['gcode_macro _USER_VARIABLE'].speed.dock : 3000
// printer['gcode_macro _USER_VARIABLE'].speed.NPLimitAccel : 3000
// printer['gcode_macro _USER_VARIABLE'].speed.retract : 1800
// printer['gcode_macro _USER_VARIABLE'].speed.ZprobeTolerance : 0.05
// printer['gcode_macro _USER_VARIABLE'].speed.travel_speed : 200
// printer['gcode_macro _USER_VARIABLE'].speed.travel : 12000
// printer['gcode_macro _USER_VARIABLE'].z_hop : 16
// printer['gcode_macro _USER_VARIABLE'].current_control.PrintCurrentZ : 0.8
// printer['gcode_macro _USER_VARIABLE'].current_control.PrintCurrentXY : 1.1
// printer['gcode_macro _VENT_INFO']
// printer['gcode_macro _WAIT_Loop']
// printer['gcode_macro _WAIT_Start']
// printer['gcode_macro _WIPE']
// printer['gcode_macro _Z_MOVE_CHECK']
// printer['gcode_macro ADD_PLATE']
// printer['gcode_macro ATTACH_PROBE']
// printer['gcode_macro BED_MESH_CALIBRATE']
// printer['gcode_macro BED_MESH_LOAD']
// printer['gcode_macro BED_MESH_STORE']
// printer['gcode_macro BED_PID']
// printer['gcode_macro BELT_TEST']
// printer['gcode_macro Bottom_Lights_OFF']
// printer['gcode_macro Bottom_Lights_ON']
// printer['gcode_macro CALIBRATE_Z']
// printer['gcode_macro CANCEL_PRINT']
// printer['gcode_macro CASELIGHT']
// printer['gcode_macro CASELIGHT_DIM']
// printer['gcode_macro Chamber_Lights_OFF']
// printer['gcode_macro Chamber_Lights_ON']
// printer['gcode_macro CHANGE_PLATE_VALUE']
// printer['gcode_macro check_printer_state']
// printer['gcode_macro CHECK_QGL']
// printer['gcode_macro CHK_HEAT_EXPANSION']
// printer['gcode_macro CURRENT_HIGH']
// printer['gcode_macro CURRENT_NORMAL']
// printer['gcode_macro DETACH_PROBE']
// printer['gcode_macro DIM_LIGHTS']
// printer['gcode_macro DIRECT_MOVE']
// printer['gcode_macro DISABLEFILAMENTSENSOR']
// printer['gcode_macro DOCK_PROBE']
// printer['gcode_macro DUMP_DICTIONARY']
// printer['gcode_macro DUMP_PRINT_AREA_LIMITS']
// printer['gcode_macro ENABLEFILAMENTSENSOR']
// printer['gcode_macro example']
// printer['gcode_macro FAKE_POSITION']
// printer['gcode_macro FILAMENT_ABOUT']
// printer['gcode_macro FILAMENT_LOAD']
// printer['gcode_macro FILAMENT_UNLOAD']
// printer['gcode_macro G0']
// printer['gcode_macro G1']
// printer['gcode_macro G32']
// printer['gcode_macro G3201']
// printer['gcode_macro G34']
// printer['gcode_macro G3401']
// printer['gcode_macro GET_PROBE_STATUS']
// printer['gcode_macro GITHUB_BACKUP']
// printer['gcode_macro HOTMESH']
// printer['gcode_macro INFO__GLOBAL_VARS']
// printer['gcode_macro INFO__USER_VARIABLE']
// printer['gcode_macro info_bedfans']
// printer['gcode_macro INFO_FAN_CHECK']
// printer['gcode_macro INFO_STATE_LEDS']
// printer['gcode_macro IS_PROBE_ATTACHED_AT_BOOT']
// printer['gcode_macro LIGHTS']
// printer['gcode_macro LIGHTS_OFF']
// printer['gcode_macro LIGHTS_RANDOM']
// printer['gcode_macro LIST_PLATES']
// printer['gcode_macro LOG_INFO']
// printer['gcode_macro M106']
// printer['gcode_macro M107']
// printer['gcode_macro M115']
// printer['gcode_macro M117']
// printer['gcode_macro M140']
// printer['gcode_macro M141']
// printer['gcode_macro M190']
// printer['gcode_macro M204']
// printer['gcode_macro M401']
// printer['gcode_macro M402']
// printer['gcode_macro M600']
// printer['gcode_macro M601']
// printer['gcode_macro M900']
// printer['gcode_macro move_bed_center']
// printer['gcode_macro MSG_PROBE_ATTACHED']
// printer['gcode_macro MSG_PROBE_DOCKED']
// printer['gcode_macro NOZZLECLEAN']
// printer['gcode_macro NZL_PID']
// printer['gcode_macro OUTPUT_PROBE_MESSAGE']
// printer['gcode_macro PA_CAL']
// printer['gcode_macro PARK']
// printer['gcode_macro PARK_Center']
// printer['gcode_macro PARK_UpperRight']
// printer['gcode_macro PAUSE']
// printer['gcode_macro PRESSURE_ADVANCE_ADD']
// printer['gcode_macro PRESSURE_ADVANCE_LIST']
// printer['gcode_macro PRESSURE_ADVANCE_REMOVE']
// printer['gcode_macro PRESSURE_ADVANCE_SELECT']
// printer['gcode_macro PRIME_LINE']
// printer['gcode_macro PRINT_END']
// printer['gcode_macro PRINT_START']
// printer['gcode_macro PROBE']
// printer['gcode_macro PROBE_ACCURACY']
// printer['gcode_macro PROBE_CALIBRATE']
// printer['gcode_macro progress_bar_leds_off']
// printer['gcode_macro progress_bar_leds_on']
// printer['gcode_macro QUAD_GANTRY_LEVEL']
// printer['gcode_macro QUERY_PROBE']
// printer['gcode_macro QUERY_PROBE_OUTPUT']
// printer['gcode_macro query_thermistors']
// printer['gcode_macro REBOOT']
// printer['gcode_macro REMOVE_PLATE']
// printer['gcode_macro reset_rp2040']
// printer['gcode_macro RESETRGB']
// printer['gcode_macro RESONANCES_TEST']
// printer['gcode_macro RESUME']
// printer['gcode_macro RST_FILTER']
// printer['gcode_macro RST_SERVICE']
// printer['gcode_macro SEARCH_PRINTER_OBJECTS']
// printer['gcode_macro SET_BAR_LEDS_BY_NAME']
// printer['gcode_macro set_bar_leds_off']
// printer['gcode_macro set_bar_leds_on']
// printer['gcode_macro SET_FAN_LEDS_BY_NAME']
// printer['gcode_macro set_fan_leds_off']
// printer['gcode_macro set_fan_leds_on']
// printer['gcode_macro SET_FILAMENT_SENSOR']
// printer['gcode_macro SET_HEATER_TEMPERATURE']
// printer['gcode_macro SET_LOGO_LEDS_BY_NAME']
// printer['gcode_macro SET_LOGO_LEDS_OFF']
// printer['gcode_macro SET_LOGO_LEDS_ON']
// printer['gcode_macro SET_LOGO_RAINBOW_LEDS_OFF']
// printer['gcode_macro SET_LOGO_RAINBOW_LEDS_ON']
// printer['gcode_macro SET_NOZZLE_LEDS_BY_NAME']
// printer['gcode_macro SET_NOZZLE_LEDS_OFF']
// printer['gcode_macro SET_NOZZLE_LEDS_ON']
// printer['gcode_macro SET_PLATE']
// printer['gcode_macro SET_PROBE_STATUS']
// printer['gcode_macro SET_WLED']
// printer['gcode_macro SHUTDOWN']
// printer['gcode_macro status_busy']
// printer['gcode_macro status_calibrating_z']
// printer['gcode_macro status_cleaning']
// printer['gcode_macro status_cooling']
// printer['gcode_macro status_heating']
// printer['gcode_macro status_homing']
// printer['gcode_macro status_leveling']
// printer['gcode_macro status_meshing']
// printer['gcode_macro status_off']
// printer['gcode_macro status_part_ready']
// printer['gcode_macro status_printing']
// printer['gcode_macro status_ready']
// printer['gcode_macro TEST_CONTROL']
// printer['gcode_macro TEST_LIGHTS_RGB']
// printer['gcode_macro TEST_PRESET']
// printer['gcode_macro TEST_PROBE_ACCURACY']
// printer['gcode_macro TEST_RANGE']
// printer['gcode_macro TEST_SET_BLACK']
// printer['gcode_macro TEST_SET_WLED']
// printer['gcode_macro TEST_WLED_OFF']
// printer['gcode_macro TEST_WLED_ON']
// printer['gcode_macro TOGGLE_LAYER_OUTPUT']
// printer['gcode_macro TURN_OFF_HEATERS']
// printer['gcode_macro VENT']
// printer['gcode_macro WAIT_Quit']
// printer['gcode_macro WLED_CONTROL']
// printer['gcode_macro WLED_OFF']
// printer['gcode_macro WLED_ON']
// printer['gcode_macro ZDOWN']
// printer['gcode_macro ZUP']
// printer.gcode_move
// printer.gcode_move.homing_origin : Coord(x=0.0, y=0.0, z=0.0, e=0.0)
// printer.gcode_move.speed_factor : 1.0
// printer.gcode_move.gcode_position : Coord(x=150.0, y=20.0, z=50.0, e=0.0)
// printer.gcode_move.absolute_extrude : True
// printer.gcode_move.absolute_coordinates : True
// printer.gcode_move.position : Coord(x=150.0, y=20.0, z=50.0, e=0.0)
// printer.gcode_move.speed : 4000.0
// printer.gcode_move.extrude_factor : 1.0
// printer.heater_bed
// printer.heater_bed.temperature : 26.08
// printer.heater_bed.power : 0.0
// printer.heater_bed.target : 0.0
// printer['heater_fan fan_hotend']
// printer['heater_fan fan_hotend'].speed : 0.0
// printer['heater_fan fan_hotend'].rpm : 0.0
// printer.heaters
// printer.heaters.available_sensors : ['temperature_fan Fan_EBB36_TH', 'temperature_fan Octopus_Driver_XYEZ_Fans', 'temperature_fan chamber', 'temperature_fan Out-take_Left_Side_Controller', 'heater_bed', 'temperature_sensor bed', 'temperature_sensor J_Chamber_ZDragChain_PT100', 'temperature_sensor L_X-Axis_Frame_Temp', 'temperature_sensor M_Y-Axis_Frame_Temp', 'temperature_sensor O_Electronic_Case_Temp', 'temperature_sensor P_External_Ambient_Temp', 'temperature_sensor Q_TinyFan', 'z_thermal_adjust', 'extruder']
// printer.heaters.available_heaters : ['heater_bed', 'extruder']
// printer.idle_timeout
// printer.idle_timeout.state : Ready
// printer.idle_timeout.printing_time : 0.0
// printer.manual_probe
// printer.manual_probe.z_position : None
// printer.manual_probe.is_active : False
// printer.manual_probe.z_position_upper : None
// printer.manual_probe.z_position_lower : None
// printer.mcu
// printer.mcu.mcu_build_versions : gcc: (15:8-2019-q3-1+b1) 8.3.1 20190703 (release) [gcc-8-branch revision 273027] binutils: (2.35.2-2+14+b2) 2.35.2
// printer.mcu.mcu_version : v0.11.0-40-gaac613bf
// printer.mcu.last_stats.retransmit_seq : 2
// printer.mcu.last_stats.receive_seq : 15632
// printer.mcu.last_stats.send_seq : 15632
// printer.mcu.last_stats.bytes_invalid : 0
// printer.mcu.last_stats.rto : 0.025
// printer.mcu.last_stats.ready_bytes : 0
// printer.mcu.last_stats.srtt : 0.001
// printer.mcu.last_stats.stalled_bytes : 0
// printer.mcu.last_stats.bytes_write : 452377
// printer.mcu.last_stats.mcu_awake : 0.032
// printer.mcu.last_stats.mcu_task_avg : 4.4e-05
// printer.mcu.last_stats.rttvar : 0.0
// printer.mcu.last_stats.mcu_task_stddev : 0.000192
// printer.mcu.last_stats.freq : 180001667
// printer.mcu.last_stats.bytes_retransmit : 9
// printer.mcu.last_stats.bytes_read : 397183
// printer.mcu.mcu_constants.BUS_PINS_i2c1 : PB6,PB7
// printer.mcu.mcu_constants.BUS_PINS_i2c3 : PA8,PC9
// printer.mcu.mcu_constants.BUS_PINS_i2c2 : PB10,PB11
// printer.mcu.mcu_constants.BUS_PINS_spi3a : PC11,PC12,PC10
// printer.mcu.mcu_constants.PWM_MAX : 255
// printer.mcu.mcu_constants.BUS_PINS_spi2a : PC2,PC3,PB10
// printer.mcu.mcu_constants.BUS_PINS_i2c1a : PB8,PB9
// printer.mcu.mcu_constants.RESERVE_PINS_crystal : PH0,PH1
// printer.mcu.mcu_constants.STEPPER_BOTH_EDGE : 1
// printer.mcu.mcu_constants.ADC_MAX : 4095
// printer.mcu.mcu_constants.BUS_PINS_spi4 : PE13,PE14,PE12
// printer.mcu.mcu_constants.RESERVE_PINS_USB : PA11,PA12
// printer.mcu.mcu_constants.CLOCK_FREQ : 180000000
// printer.mcu.mcu_constants.BUS_PINS_spi1 : PA6,PA7,PA5
// printer.mcu.mcu_constants.BUS_PINS_spi3 : PB4,PB5,PB3
// printer.mcu.mcu_constants.MCU : stm32f446xx
// printer.mcu.mcu_constants.BUS_PINS_spi2 : PB14,PB15,PB13
// printer.mcu.mcu_constants.BUS_PINS_spi1a : PB4,PB5,PB3
// printer.mcu.mcu_constants.STATS_SUMSQ_BASE : 256
// printer['mcu EBBCan']
// printer['mcu EBBCan'].mcu_build_versions : gcc: (15:8-2019-q3-1+b1) 8.3.1 20190703 (release) [gcc-8-branch revision 273027] binutils: (2.35.2-2+14+b2) 2.35.2
// printer['mcu EBBCan'].mcu_version : v0.11.0-40-gaac613bf
// printer['mcu EBBCan'].last_stats.retransmit_seq : 0
// printer['mcu EBBCan'].last_stats.receive_seq : 9803
// printer['mcu EBBCan'].last_stats.send_seq : 9803
// printer['mcu EBBCan'].last_stats.bytes_invalid : 0
// printer['mcu EBBCan'].last_stats.rto : 0.025
// printer['mcu EBBCan'].last_stats.ready_bytes : 0
// printer['mcu EBBCan'].last_stats.srtt : 0.001
// printer['mcu EBBCan'].last_stats.stalled_bytes : 0
// printer['mcu EBBCan'].last_stats.bytes_write : 145894
// printer['mcu EBBCan'].last_stats.mcu_awake : 0.035
// printer['mcu EBBCan'].last_stats.mcu_task_avg : 5.6e-05
// printer['mcu EBBCan'].last_stats.rttvar : 0.0
// printer['mcu EBBCan'].last_stats.mcu_task_stddev : 0.000148
// printer['mcu EBBCan'].last_stats.freq : 63999916
// printer['mcu EBBCan'].last_stats.bytes_retransmit : 0
// printer['mcu EBBCan'].last_stats.adj : 63999463
// printer['mcu EBBCan'].last_stats.bytes_read : 206869
// printer['mcu EBBCan'].mcu_constants.RECEIVE_WINDOW : 192
// printer['mcu EBBCan'].mcu_constants.PWM_MAX : 255
// printer['mcu EBBCan'].mcu_constants.BUS_PINS_i2c1_PB6_PB7 : PB6,PB7
// printer['mcu EBBCan'].mcu_constants.BUS_PINS_spi2a : PC2,PC3,PB10
// printer['mcu EBBCan'].mcu_constants.BUS_PINS_i2c2_PB10_PB11 : PB10,PB11
// printer['mcu EBBCan'].mcu_constants.BUS_PINS_spi3 : PB4,PB5,PB3
// printer['mcu EBBCan'].mcu_constants.RESERVE_PINS_CAN : PB0,PB1
// printer['mcu EBBCan'].mcu_constants.CANBUS_FREQUENCY : 500000
// printer['mcu EBBCan'].mcu_constants.STEPPER_BOTH_EDGE : 1
// printer['mcu EBBCan'].mcu_constants.ADC_MAX : 4095
// printer['mcu EBBCan'].mcu_constants.BUS_PINS_spi2 : PB14,PB15,PB13
// printer['mcu EBBCan'].mcu_constants.RESERVE_PINS_crystal : PF0,PF1
// printer['mcu EBBCan'].mcu_constants.CLOCK_FREQ : 64000000
// printer['mcu EBBCan'].mcu_constants.BUS_PINS_spi1 : PA6,PA7,PA5
// printer['mcu EBBCan'].mcu_constants.BUS_PINS_i2c2_PB13_PB14 : PB13,PB14
// printer['mcu EBBCan'].mcu_constants.BUS_PINS_i2c1_PB8_PB9 : PB8,PB9
// printer['mcu EBBCan'].mcu_constants.MCU : stm32g0b1xx
// printer['mcu EBBCan'].mcu_constants.BUS_PINS_i2c1_PA9_PA10 : PA9,PA10
// printer['mcu EBBCan'].mcu_constants.BUS_PINS_i2c3_PB3_PB4 : PB3,PB4
// printer['mcu EBBCan'].mcu_constants.BUS_PINS_spi1a : PB4,PB5,PB3
// printer['mcu EBBCan'].mcu_constants.STATS_SUMSQ_BASE : 256
// printer['mcu rpi']
// printer['mcu rpi'].mcu_build_versions : gcc: (Debian 10.2.1-6) 10.2.1 20210110 binutils: (GNU Binutils for Debian) 2.35.2
// printer['mcu rpi'].mcu_version : v0.11.0-40-gaac613bf
// printer['mcu rpi'].last_stats.retransmit_seq : 0
// printer['mcu rpi'].last_stats.receive_seq : 618
// printer['mcu rpi'].last_stats.send_seq : 618
// printer['mcu rpi'].last_stats.bytes_invalid : 0
// printer['mcu rpi'].last_stats.rto : 0.025
// printer['mcu rpi'].last_stats.ready_bytes : 0
// printer['mcu rpi'].last_stats.srtt : 0.0
// printer['mcu rpi'].last_stats.stalled_bytes : 0
// printer['mcu rpi'].last_stats.bytes_write : 3862
// printer['mcu rpi'].last_stats.mcu_awake : 0.0
// printer['mcu rpi'].last_stats.mcu_task_avg : 5e-06
// printer['mcu rpi'].last_stats.rttvar : 0.0
// printer['mcu rpi'].last_stats.mcu_task_stddev : 8e-06
// printer['mcu rpi'].last_stats.freq : 49999579
// printer['mcu rpi'].last_stats.bytes_retransmit : 0
// printer['mcu rpi'].last_stats.adj : 49999184
// printer['mcu rpi'].last_stats.bytes_read : 13827
// printer['mcu rpi'].mcu_constants.PCA9685_MAX : 4096
// printer['mcu rpi'].mcu_constants.ADC_MAX : 4095
// printer['mcu rpi'].mcu_constants.PWM_MAX : 32768
// printer['mcu rpi'].mcu_constants.CLOCK_FREQ : 50000000
// printer['mcu rpi'].mcu_constants.MCU : linux
// printer['mcu rpi'].mcu_constants.STATS_SUMSQ_BASE : 256
// printer['mcu tinyfan']
// printer['mcu tinyfan'].mcu_build_versions : gcc: (15:8-2019-q3-1+b1) 8.3.1 20190703 (release) [gcc-8-branch revision 273027] binutils: (2.35.2-2+14+b2) 2.35.2
// printer['mcu tinyfan'].mcu_version : v0.10.0-635-gcfb633a0
// printer['mcu tinyfan'].last_stats.retransmit_seq : 2
// printer['mcu tinyfan'].last_stats.receive_seq : 638
// printer['mcu tinyfan'].last_stats.send_seq : 638
// printer['mcu tinyfan'].last_stats.bytes_invalid : 0
// printer['mcu tinyfan'].last_stats.rto : 0.025
// printer['mcu tinyfan'].last_stats.ready_bytes : 0
// printer['mcu tinyfan'].last_stats.srtt : 0.0
// printer['mcu tinyfan'].last_stats.stalled_bytes : 0
// printer['mcu tinyfan'].last_stats.bytes_write : 4149
// printer['mcu tinyfan'].last_stats.mcu_awake : 0.002
// printer['mcu tinyfan'].last_stats.mcu_task_avg : 6e-06
// printer['mcu tinyfan'].last_stats.rttvar : 0.0
// printer['mcu tinyfan'].last_stats.mcu_task_stddev : 5e-06
// printer['mcu tinyfan'].last_stats.freq : 12000343
// printer['mcu tinyfan'].last_stats.bytes_retransmit : 9
// printer['mcu tinyfan'].last_stats.adj : 12000227
// printer['mcu tinyfan'].last_stats.bytes_read : 45971
// printer['mcu tinyfan'].mcu_constants.BUS_PINS_spi0a : gpio0,gpio3,gpio2
// printer['mcu tinyfan'].mcu_constants.BUS_PINS_i2c0h : gpio28,gpio29
// printer['mcu tinyfan'].mcu_constants.BUS_PINS_spi0c : gpio16,gpio19,gpio18
// printer['mcu tinyfan'].mcu_constants.BUS_PINS_spi0d : gpio20,gpio23,gpio22
// printer['mcu tinyfan'].mcu_constants.BUS_PINS_i2c0b : gpio4,gpio5
// printer['mcu tinyfan'].mcu_constants.BUS_PINS_i2c0c : gpio8,gpio9
// printer['mcu tinyfan'].mcu_constants.BUS_PINS_i2c0a : gpio0,gpio1
// printer['mcu tinyfan'].mcu_constants.BUS_PINS_i2c0f : gpio20,gpio21
// printer['mcu tinyfan'].mcu_constants.BUS_PINS_i2c0g : gpio24,gpio25
// printer['mcu tinyfan'].mcu_constants.BUS_PINS_i2c0d : gpio12,gpio13
// printer['mcu tinyfan'].mcu_constants.BUS_PINS_i2c0e : gpio16,gpio17
// printer['mcu tinyfan'].mcu_constants.CLOCK_FREQ : 12000000
// printer['mcu tinyfan'].mcu_constants.STEPPER_BOTH_EDGE : 1
// printer['mcu tinyfan'].mcu_constants.ADC_MAX : 4095
// printer['mcu tinyfan'].mcu_constants.PWM_MAX : 255
// printer['mcu tinyfan'].mcu_constants.BUS_PINS_spi0b : gpio4,gpio7,gpio6
// printer['mcu tinyfan'].mcu_constants.BUS_PINS_i2c1a : gpio2,gpio3
// printer['mcu tinyfan'].mcu_constants.BUS_PINS_i2c1c : gpio10,gpio11
// printer['mcu tinyfan'].mcu_constants.BUS_PINS_i2c1b : gpio6,gpio7
// printer['mcu tinyfan'].mcu_constants.BUS_PINS_i2c1e : gpio18,gpio19
// printer['mcu tinyfan'].mcu_constants.BUS_PINS_i2c1d : gpio14,gpio15
// printer['mcu tinyfan'].mcu_constants.BUS_PINS_i2c1g : gpio26,gpio27
// printer['mcu tinyfan'].mcu_constants.BUS_PINS_i2c1f : gpio22,gpio23
// printer['mcu tinyfan'].mcu_constants.BUS_PINS_spi1c : gpio24,gpio27,gpio26
// printer['mcu tinyfan'].mcu_constants.BUS_PINS_spi1b : gpio12,gpio15,gpio14
// printer['mcu tinyfan'].mcu_constants.BUS_PINS_spi1a : gpio8,gpio11,gpio10
// printer['mcu tinyfan'].mcu_constants.STATS_SUMSQ_BASE : 256
// printer['mcu tinyfan'].mcu_constants.MCU : rp2040
// printer.motion_report
// printer.motion_report.live_position : Coord(x=150.0, y=20.000000000000004, z=50.027513476347636, e=0.0)
// printer.motion_report.steppers : ['extruder', 'stepper_x', 'stepper_y', 'stepper_z', 'stepper_z1', 'stepper_z2', 'stepper_z3']
// printer.motion_report.live_velocity : -1.42108547152e-14
// printer.motion_report.live_extruder_velocity : 0.0
// printer.motion_report.trapq : ['extruder', 'toolhead']
// printer['neopixel progress_bar_leds']
// printer['neopixel progress_bar_leds'].color_data : [(0.0, 0.0, 1.0, 0.0), (0.0, 0.0, 1.0, 0.0), (0.0, 0.0, 1.0, 0.0), (0.0, 0.0, 1.0, 0.0), (0.0, 0.0, 1.0, 0.0), (0.0, 0.0, 1.0, 0.0), (1.0, 0.0, 0.0, 0.0), (1.0, 0.0, 0.0, 0.0), (1.0, 0.0, 0.0, 0.0), (1.0, 0.0, 0.0, 0.0), (1.0, 0.0, 0.0, 0.0), (1.0, 0.25, 0.0, 0.0), (1.0, 0.25, 0.0, 0.0), (1.0, 0.25, 0.0, 0.0), (1.0, 0.25, 0.0, 0.0), (1.0, 0.25, 0.0, 0.0), (1.0, 0.25, 0.0, 0.0), (0.0, 0.0, 1.0, 0.0), (0.0, 0.0, 1.0, 0.0), (0.0, 0.0, 1.0, 0.0), (0.0, 0.0, 1.0, 0.0), (0.0, 0.0, 1.0, 0.0), (1.0, 0.0, 0.0, 0.0), (1.0, 0.0, 0.0, 0.0), (1.0, 0.0, 0.0, 0.0), (1.0, 0.0, 0.0, 0.0), (1.0, 0.0, 0.0, 0.0), (1.0, 0.0, 0.0, 0.0), (1.0, 0.25, 0.0, 0.0), (1.0, 0.25, 0.0, 0.0), (1.0, 0.25, 0.0, 0.0), (1.0, 0.25, 0.0, 0.0), (1.0, 0.25, 0.0, 0.0)]
// printer['neopixel sb_leds']
// printer['neopixel sb_leds'].color_data : [(0.125, 0.105, 0.875, 0.0), (0.5, 0.42, 0.5, 0.0), (0.875, 0.735, 0.125, 0.0), (1.0, 0.63, 0.0, 0.0), (1.0, 0.315, 0.0, 0.0), (1.0, 0.0, 0.0, 0.0), (0.625, 0.0, 0.375, 0.0), (0.25, 0.0, 0.75, 0.0), (1.0, 0.0, 0.0, 0.0), (1.0, 0.0, 0.0, 0.0), (0.2857142857142858, 0.0, 0.7142857142857142, 0.0), (0.0, 0.0, 1.0, 0.0), (0.0, 0.0, 1.0, 0.0), (0.2857142857142856, 0.0, 0.7142857142857144, 0.0), (1.0, 0.0, 0.0, 0.0), (1.0, 0.0, 0.0, 0.0), (0.0, 0.0, 0.0, 0.5), (0.0, 0.0, 0.0, 0.5)]
// printer['neopixel tinyfan']
// printer['neopixel tinyfan'].color_data : [(0.0, 0.0, 1.0, 0.0)]
// printer['output_pin caselight']
// printer['output_pin caselight'].value : 0.0
// printer['output_pin lock_M106']
// printer['output_pin lock_M106'].value : 0.0
// printer['output_pin reset_line_RP2040']
// printer['output_pin reset_line_RP2040'].value : 0.0
// printer.pause_resume
// printer.pause_resume.is_paused : False
// printer.print_stats
// printer.print_stats.info.total_layer : None
// printer.print_stats.info.current_layer : None
// printer.print_stats.print_duration : 0.0
// printer.print_stats.total_duration : 0.0
// printer.print_stats.filament_used : 0.0
// printer.print_stats.filename :
// printer.print_stats.state : standby
// printer.print_stats.message :
// printer.probe
// printer.probe.last_z_result : 0.0
// printer.probe.last_query : 1
// printer.quad_gantry_level
// printer.quad_gantry_level.applied : False
// printer.query_endstops
// printer.save_variables
// printer.save_variables.variables.filament_sensor.runout : 0
// printer.system_stats
// printer.system_stats.sysload : 0.53
// printer.system_stats.memavail : 7319684
// printer.system_stats.cputime : 2168.242006
// printer['temperature_fan chamber']
// printer['temperature_fan chamber'].speed : 0.0
// printer['temperature_fan chamber'].rpm : 0.0
// printer['temperature_fan chamber'].temperature : 28.37
// printer['temperature_fan chamber'].target : 35.0
// printer['temperature_fan Fan_EBB36_TH']
// printer['temperature_fan Fan_EBB36_TH'].speed : 1.0
// printer['temperature_fan Fan_EBB36_TH'].rpm : None
// printer['temperature_fan Fan_EBB36_TH'].temperature : 35.39
// printer['temperature_fan Fan_EBB36_TH'].target : 35.0
// printer['temperature_fan Octopus_Driver_XYEZ_Fans']
// printer['temperature_fan Octopus_Driver_XYEZ_Fans'].speed : 1.0
// printer['temperature_fan Octopus_Driver_XYEZ_Fans'].rpm : 2425.19564774
// printer['temperature_fan Octopus_Driver_XYEZ_Fans'].temperature : 33.29
// printer['temperature_fan Octopus_Driver_XYEZ_Fans'].target : 25.0
// printer['temperature_fan Out-take_Left_Side_Controller']
// printer['temperature_fan Out-take_Left_Side_Controller'].speed : 1.0
// printer['temperature_fan Out-take_Left_Side_Controller'].rpm : 1495.49657592
// printer['temperature_fan Out-take_Left_Side_Controller'].temperature : 39.92
// printer['temperature_fan Out-take_Left_Side_Controller'].target : 25.0
// printer['temperature_host Out-take_Left_Side_Controller']
// printer['temperature_host Out-take_Left_Side_Controller'].temperature : 39.92
// printer['temperature_sensor bed']
// printer['temperature_sensor bed'].measured_min_temp : 27.09
// printer['temperature_sensor bed'].measured_max_temp : 27.68
// printer['temperature_sensor bed'].temperature : 27.4
// printer['temperature_sensor J_Chamber_ZDragChain_PT100']
// printer['temperature_sensor J_Chamber_ZDragChain_PT100'].measured_min_temp : 25.77
// printer['temperature_sensor J_Chamber_ZDragChain_PT100'].measured_max_temp : 26.68
// printer['temperature_sensor J_Chamber_ZDragChain_PT100'].temperature : 26.38
// printer['temperature_sensor L_X-Axis_Frame_Temp']
// printer['temperature_sensor L_X-Axis_Frame_Temp'].measured_min_temp : 27.56
// printer['temperature_sensor L_X-Axis_Frame_Temp'].measured_max_temp : 27.9
// printer['temperature_sensor L_X-Axis_Frame_Temp'].temperature : 27.86
// printer['temperature_sensor M_Y-Axis_Frame_Temp']
// printer['temperature_sensor M_Y-Axis_Frame_Temp'].measured_min_temp : 26.94
// printer['temperature_sensor M_Y-Axis_Frame_Temp'].measured_max_temp : 27.38
// printer['temperature_sensor M_Y-Axis_Frame_Temp'].temperature : 27.05
// printer['temperature_sensor O_Electronic_Case_Temp']
// printer['temperature_sensor O_Electronic_Case_Temp'].measured_min_temp : 18.15
// printer['temperature_sensor O_Electronic_Case_Temp'].measured_max_temp : 28.15
// printer['temperature_sensor O_Electronic_Case_Temp'].temperature : 21.91
// printer['temperature_sensor P_External_Ambient_Temp']
// printer['temperature_sensor P_External_Ambient_Temp'].measured_min_temp : 18.49
// printer['temperature_sensor P_External_Ambient_Temp'].measured_max_temp : 24.44
// printer['temperature_sensor P_External_Ambient_Temp'].temperature : 20.62
// printer['temperature_sensor Q_TinyFan']
// printer['temperature_sensor Q_TinyFan'].measured_min_temp : 37.69
// printer['temperature_sensor Q_TinyFan'].measured_max_temp : 38.74
// printer['temperature_sensor Q_TinyFan'].temperature : 37.75
// printer['tmc2209 extruder']
// printer['tmc2209 extruder'].phase_offset_position : 0.000708717221875
// printer['tmc2209 extruder'].hold_current : 0.550727396886
// printer['tmc2209 extruder'].drv_status : None
// printer['tmc2209 extruder'].mcu_phase_offset : 1
// printer['tmc2209 extruder'].run_current : 0.550727396886
// printer['tmc2209 stepper_x']
// printer['tmc2209 stepper_x'].phase_offset_position : 170.125
// printer['tmc2209 stepper_x'].hold_current : 0.795495128835
// printer['tmc2209 stepper_x'].drv_status.cs_actual : 25
// printer['tmc2209 stepper_x'].drv_status.stst : 1
// printer['tmc2209 stepper_x'].mcu_phase_offset : 21
// printer['tmc2209 stepper_x'].run_current : 0.795495128835
// printer['tmc2209 stepper_y']
// printer['tmc2209 stepper_y'].phase_offset_position : 130.3625
// printer['tmc2209 stepper_y'].hold_current : 0.795495128835
// printer['tmc2209 stepper_y'].drv_status.cs_actual : 25
// printer['tmc2209 stepper_y'].drv_status.stst : 1
// printer['tmc2209 stepper_y'].mcu_phase_offset : 123
// printer['tmc2209 stepper_y'].run_current : 0.795495128835
// printer['tmc2209 stepper_z']
// printer['tmc2209 stepper_z'].phase_offset_position : 50.07125
// printer['tmc2209 stepper_z'].hold_current : 0.305959664936
// printer['tmc2209 stepper_z'].drv_status.cs_actual : 9
// printer['tmc2209 stepper_z'].drv_status.stst : 1
// printer['tmc2209 stepper_z'].mcu_phase_offset : 49
// printer['tmc2209 stepper_z'].run_current : 0.305959664936
// printer['tmc2209 stepper_z1']
// printer['tmc2209 stepper_z1'].phase_offset_position : 50.08375
// printer['tmc2209 stepper_z1'].hold_current : 0.305959664936
// printer['tmc2209 stepper_z1'].drv_status.cs_actual : 9
// printer['tmc2209 stepper_z1'].drv_status.stst : 1
// printer['tmc2209 stepper_z1'].mcu_phase_offset : 59
// printer['tmc2209 stepper_z1'].run_current : 0.305959664936
// printer['tmc2209 stepper_z2']
// printer['tmc2209 stepper_z2'].phase_offset_position : 50.07625
// printer['tmc2209 stepper_z2'].hold_current : 0.305959664936
// printer['tmc2209 stepper_z2'].drv_status.cs_actual : 9
// printer['tmc2209 stepper_z2'].drv_status.stst : 1
// printer['tmc2209 stepper_z2'].mcu_phase_offset : 53
// printer['tmc2209 stepper_z2'].run_current : 0.305959664936
// printer['tmc2209 stepper_z3']
// printer['tmc2209 stepper_z3'].phase_offset_position : 50.07375
// printer['tmc2209 stepper_z3'].hold_current : 0.305959664936
// printer['tmc2209 stepper_z3'].drv_status.cs_actual : 9
// printer['tmc2209 stepper_z3'].drv_status.stst : 1
// printer['tmc2209 stepper_z3'].mcu_phase_offset : 51
// printer['tmc2209 stepper_z3'].run_current : 0.305959664936
// printer.toolhead
// printer.toolhead.square_corner_velocity : 5.0
// printer.toolhead.max_accel : 3000.0
// printer.toolhead.homed_axes : xyz
// printer.toolhead.estimated_print_time : 516.848763828
// printer.toolhead.max_velocity : 300.0
// printer.toolhead.print_time : 68.6863309718
// printer.toolhead.max_accel_to_decel : 1500.0
// printer.toolhead.axis_minimum : Coord(x=0.0, y=0.0, z=-6.8, e=0.0)
// printer.toolhead.stalls : 0
// printer.toolhead.axis_maximum : Coord(x=300.0, y=306.0, z=260.0, e=0.0)
// printer.toolhead.position : Coord(x=150.0, y=20.0, z=50.027513476347636, e=0.0)
// printer.toolhead.extruder : extruder
// printer.virtual_sdcard
// printer.virtual_sdcard.progress : 0.0
// printer.virtual_sdcard.file_position : 0
// printer.virtual_sdcard.is_active : False
// printer.virtual_sdcard.file_path : None
// printer.virtual_sdcard.file_size : 0
// printer.webhooks
// printer.webhooks.state : ready
// printer.webhooks.state_message : Printer is ready
// printer.z_calibration
// printer.z_calibration.last_query : False
// printer.z_calibration.last_z_offset : 0.0
// printer.z_thermal_adjust
// printer.z_thermal_adjust.temperature : 26.1513810287
// printer.z_thermal_adjust.measured_min_temp : 0.0
// printer.z_thermal_adjust.enabled : True
// printer.z_thermal_adjust.z_adjust_ref_temperature : 26.0515165524
// printer.z_thermal_adjust.measured_max_temp : 26.19
// printer.z_thermal_adjust.current_z_adjust : 0.0
