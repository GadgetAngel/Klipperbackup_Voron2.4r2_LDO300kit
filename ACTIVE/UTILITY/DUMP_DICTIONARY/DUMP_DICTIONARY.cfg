# DUMP_DICTIONARY if from one macro routine:
#    SEARCH_VARS macro from Mental published at https://klipper.discourse.group/t/example-search-printer-objects/164
#
#  DUMP_DICTIONARY will not crash your printer and will display a message indicating it did not find a match for your search.
#.................................................................................................................
# DUMP_DICTIONARY - optional parameters: 
#
#    (parameter appears by itself and/or with SHOW_MESH and/or with GCODE)........................SHOW_CFG=0  - print all parameters expect for printer[configfile] sections: (printer[configfile].config and printer[coonfigfile].settings) 
#    (parameter appears by itself and/or with SHOW_CFG and/or with GCODE and/or RENAME)...........SHOW_MESH=0 - print all parameters expect for bed_mesh.mesh_matrix section 
#    (parameter appears by itself and/or with SHOW_CFG and/or with GCODE and/or RENAME)...........SHOW_MESH=1 - print all parameters expect for bed_mesh.mesh_matrix section and bed_mesh.profiles.(default or profile_nane).points
#    (parameter appears by itself and/or with SHOW_MESH and/or with SHOW_CFG and/or RENAME).......GCODE=0 - print all parameters expect gcode section (meaning the actual gcode code will not be printed out)
#    (parameter appears by itself and/or with SHOW_MESH and/or with SHOW_CFG(1,2) and/or GCODE)...RENAME=1 - print only sections that have the rename_existing attribute
#    (parameter appears by itself and/or with and/or GCODE and/or with SHOW_CFG(1,2)).............DESC=1 - print only gcode macros names and the description attribute 
#
# / Usage: 
#        DUMP_DICTIONARY                                                ; print out the whole PRINTER OBJ
#        DUMP_DICTIONARY GCODE=0                                        ; print out the PRINTER OBJ for this printer WITHOUT the GCODE sections.
#        DUMP_DICTIONARY SHOW_CFG=0                                     ; print out the PRINTER OBJ with GCODE sections but without printer.configfile sections
#        DUMP_DICTIONARY SHOW_CFG=1                                     ; print out the PRINTER OBJ with GCODE sections but without printer.configfile.config sections (you should only see one line "printer.config.oonfig:" but nothing else from the section)
#        DUMP_DICTIONARY SHOW_CFG=2                                     ; print out the PRINTER OBJ with GCODE sections but without printer.configfile.settings sections (you should only see one line "printer.config.settings:" but nothing else from the section)
#        DUMP_DICTIONARY SHOW_MESH=0                                    ; print out the PRINTER OBJ with GCODE sections but without bed_mesh.mesh_matrix section settings and bed_mesh.probed_matrix section (you should only see two lines "printer.bed_mesh.mesh_matrix: and printer.bed_mesh.probed_matrix:" but nothing else from the sections)
#        DUMP_DICTIONARY SHOW_MESH=1                                    ; print out the PRINTER OBJ with GCODE sections but without bed_mesh.mesh_matrix section values, bed_mesh.probed_matrix section values and bed_mesh.profiles.(default or profile_nane).points values; (you should only see three lines "printer.bed_mesh.mesh_matrix:, printer.bed_mesh.probed_matrix: and printer.bed_mesh.profiles.(default or profile_nane).points:" but nothing else from the sections)
#        DUMP_DICTIONARY SHOW_CFG=1 GCODE=0                             ; print out the PRINTER OBJ WITHOUT GCODE sections and without printer.configfile.config sections
#        DUMP_DICTIONARY SHOW_CFG=2 GCODE=0 SHOW_MESH=1                 ; print out the PRINTER OBJ WITHOUT GCODE sections and without printer.configfile.settings and do not show values from bed_mesh.mesh_matrix, bed_mesh.probed_matrix and bed_mesh.profiles.(default or profile_nane).points
#        DUMP_DICTIONARY GCODE=0 SHOW_MESH=1                            ; print out the PRINTER OBJ WITHOUT GCODE sections and without bed_mesh.mesh_matrix section values, bed_mesh.probed_matrix section values and bed_mesh.profiles.(default or profile_nane).points values; (you should only see three lines "printer.bed_mesh.mesh_matrix:, printer.bed_mesh.probed_matrix: and printer.bed_mesh.profiles.(default or profile_nane).points:" but nothing else from the sections)
#        DUMP_DICTIONARY RENAME=1                                       ; print out the PRINTER OBJ for ONLY G-CODE Macro has a rename_existing attribute
#        DUMP_DICTIONARY RENAME=1 GCODE=0                               ; print out the PRINTER OBJ for ONLY G-CODE Macro has a rename_existing attribute but do not print out the GCODE sections
#        DUMP_DICTIONARY RENAME=1 GCODE=0 SHOW_CFG=1                    ; print out the PRINTER OBJ for ONLY G-CODE Macro has a rename_existing attribute but only search the printer.confifile.config
#        DUMP_DICTIONARY RENAME=1 GCODE=0 SHOW_CFG=2                    ; print out the PRINTER OBJ for ONLY G-CODE Macro has a rename_existing attribute but only search the printer.confifile.settings
#        DUMP_DICTIONARY RENAME=1 GCODE=0 SHOW_CFG=0                    ; error message
#        DUMP_DICTIONARY DESC=1                                         ; print out all the gcode macro descriptions  and do not display the .gcode sections; this will allow you to get the descriptions from .config and .settings and then you can find which gcode macros do not have the description set because a blank description will only have one entry not two
#        DUMP_DICTIONARY DESC=1 GCODE=0                                 ; print out all the gcode macro descriptions  and do not display the .gcode sections
#        DUMP_DICTIONARY DESC=1 GCODE=0 SHOW_CFG=0                      ; error message
#        DUMP_DICTIONARY DESC=1 GCODE=0 SHOW_CFG=1                      ; print out all the gcode macro descriptions and do not display the .gcode sections; only use printer.configfile.settings out of the printer.configfile branch
#        DUMP_DICTIONARY DESC=1 GCODE=0 SHOW_CFG=2                      ; print out all the gcode macro descriptions and do not display the .gcode sections; only use printer.configfile.config out of the printer.configfile branch
#
#.................................................................................................................
# Required variable(s) to be set. Add the following to your global variable dictionary block as:
#
# ---NONE---
#.................................................................................................................
# Required external macro(s) used by this macro set.
#
# ---NONE---  
#.................................................................................................................
#.................................................................................................................
#
## URL Resources:  https://klipper.discourse.group/t/example-search-printer-objects/164
#   
#.................................................................................................................
#
# use ls -la /tmp/printer to find out which device /tmp/printer points to.
# output:
#     /tmp/printer -> /dev/pts/1
# to save the output from the UI console ssh over to pi:
# sudo cat /dev/pts/1 > /home/pi/UI/console_config2.txt
#   to exit CTRL-C
#
###############################################################################
#          DUMP_DICTIONARY
###############################################################################
# List of name1 in printer object:
#
# bed_mesh
# configfile
#   configfile.config
#   configfile.settings
# controller_fan xxx
# display_status
# extruder
# fan
# fan_generic xxx
# filament_motion_sensor xxxx
# firmware_retraction
# gcode_macro xxxx
# gcode_move
# heater_bed
# heater_fan xxx
# heaters
# idle_timeout
# manual_probe
# mcu
# mcu EBBCan
# mcu rpi
# mcu tinyfan
# motion_report
# neopixel xxxx
# output_pin xxxx
# pause_resume
# print_stats
# probe
# quad_gantry_level
# query_endstops
# save_variables
# system_stats
# temperature_fan xxx
# temperature_host xxx
# temperature_sensor xxx
# tmc2209 extruder
# tmc2209 xxx
# toolhead
# virtual_sdcard
# webhooks
# z_calibration
# z_thermal_adjust
#
#.................................................................................................................
# DUMP_DICTIONARY S=homing_positive_dir
#
[gcode_macro DUMP_DICTIONARY]
description: Dump all Klipper parameters located in printer object to terminal, helps find names and values of variables for use in macros
gcode:

  
     ################################## INSTRUCTION on how to save the Console output to a text file #########################
     #
     #
     # If you want to capture the output from the Mainsail or Fluidd UI console to a text file do the following:
     #  SSH over the the rapberry pi that is running Klipper for your printer then do the following commands at the pi's commad prompt:
     #    To find out which device /tmp/printer is presetly using do the following command:
     #       $ ls -la /tmp/printer 
     #       output from the above command will look like the following:
     #          /tmp/printer -> /dev/pts/1
     #    To save the output from the Mainsail or Fluidd UI console to a file do the following command at the pi's command prompt:
     #       The next command only needs to be done one time.  This creates a dirctory to store the console.txt files in
     #       $ mkdir /home/pi/<your_directory> 
     #       This next command will redirect the Mainsail or Fluidd console output to a file called console.txt it will be stored at /home/pi/<your_directory>     
     #       $ sudo cat /dev/pts/1 > /home/pi/<your_directory>/console.txt
     #       for me: sudo cat /dev/pts/1 > /home/pi/UI/console.txt
     #
     #       Leave the SSH window open and do not exit out of the window (press CTRL-C) until after the DUMP_DICTIONARY command
     #       has finished executing in the Mainsail or Fluidd console. Now go to the Mainsail or Fluidd console prompt and type in
     #       your DUMP_DICTIONARY command.  DUMP_DICTIONARY macro will run.  You will know it finishes
     #       when the output stop scrollings the console window or if the load is too much Klipper will automatically shutdown.  Personally I do not
     #       execute DUMP_DICTIONARY while my printer is running a print job.
     #
     #       Once DUMP_DICTIONARY is done go back to the SSH window on the reapberry pi and hit the Control-C keys
     #       so you can exit back out to the pi's command prompt.  This stops the output from going to the /home/pi/<your_directory>/console.txt file
     #       Use SCP Software or some other software to move the /home/pi/<your_directory>/console.txt to you desktop computer. 
     #
     #  DUMP_DICTIONARY GCODE=0        - do not print any .gcode sections in items()
     #  DUMP_DICTIONARY SHOW_CFG=0     - do not print printer.configfile (printer.configfile.config and printer.configfile.settings)
     #  DUMP_DICTIONARY SHOW_CFG=1     - do not print printer.configfile.config section, (print the printer.configfile.settings section ONLY)
     #  DUMP_DICTIONARY SHOW_CFG=2     - do not print printer.configfile.settings.section, (print the printer.configfile.config section ONLY)
     #  DUMP_DICTIONARY SHOW_MESH=0    - do not print printer.bed_mesh.mesh_matrix section 
     #  DUMP_DICTIONARY SHOW_MESH=1    - do not print printer.bed_mesh.mesh_matrix section and bed_mesh.profiles.(default or profile_nane).points
     #
     # DUMP_DICTIONARY SHOW_CFG=1 GCODE=0             - print out PRINTER_OBJ except for printer.configfile.config and all .gcode setiions
     # DUMP_DICTIONARY SHOW_CFG=2 GCODE=0 SHOW_MESH=1 - print out PRINTER_OBJ except for the printer.configfile.setting and all .gcode sections and all points in bed_mesh secion
     # DUMP_DICTIONARY RENAME=1 GCODE=0 SHOW_CFG=1    - print only renamed gcode macro from printer.configfile.settings
     # DUMP_DICTIONARY RENAME=1 GCODE=0 SHOW_CFG=2    - print only renamed gcode macro from printer.configfile.config
     # DUMP_DICTIONARY RENAME=1 GCODE=0 SHOW_CFG=0    - error message
     # DUMP_DICTIONARY DESC=1 GCODE=0 SHOW_CFG=0      - error message
     # DUMP_DICTIONARY DESC=1 GCODE=0 SHOW_CFG=1      - print out gcode macro descriptions without .gcode sections from printer.configfile.settings
     # DUMP_DICTIONARY DESC=1 GCODE=0 SHOW_CFG=2      - print out gcode macro descriptions without .gcode sections from printer.configfile.config
     # DUMP_DICTIONARY DESC=1 GCODE=0                 - print out gcode macro descriptions without .gcode sections from both printer.configfile.settings and printer.configfile.config
     # DUMP_DICTIONARY DESC=1                         - print out gcode macro descriptions without .gcode sections from both printer.configfile.settings and printer.configfile.config
     #
     # sudo cat /dev/pts/1 > /home/pi/UI/console20.txt
     # DUMP_DICTIONARY
     # 
     # DUMP_DICTIONARY DESC=1 GCODE=0 SHOW_CFG=1
  
gcode:
    {% set stop_gcode = params.GCODE|default(-1)|int %}
    {% set stop_configfile = params.SHOW_CFG|default(-1)|int %}
    {% set stop_bed_mesh = params.SHOW_MESH|default(-1)|int %}
    {% set only_rename_existing = params.RENAME|default(0)|int %}
    {% set only_gcode_macros_description = params.DESC|default(0)|int %}
     
     # { action_respond_info(" stop_gcode = %d" % (stop_gcode)) }
     # { action_respond_info(" stop_configfile = %d" % (stop_configfile)) }
     # { action_respond_info(" stop_bed_mesh = %d" % (stop_bed_mesh)) }
     # { action_respond_info(" only_rename_existing = %d" % (only_rename_existing)) }
     # { action_respond_info(" only_gcode_macros_description = %d" % (only_gcode_macros_description)) }
     
     {% set error_message = True if (((only_rename_existing == 1 ) and (stop_configfile == 0 ) ) or (only_gcode_macros_description == 1 and stop_configfile == 0 )) else False %}
     {% if error_message %}
        {% if (only_rename_existing == 1 ) and (stop_configfile == 0 ) %}
            { action_respond_info("The following params where specified:\nSHOW_CFG = %d\nRENAME = %d" % (stop_configfile,only_rename_existing)) }
            { action_respond_info("This combination of parameters will not produce a result because printer.configfile has been totally removed from the search!\nPlease change the SHOW_CFG parameter to a 1 or 2 ") }
        {% elif only_gcode_macros_description == 1 and stop_configfile == 0 %}
            { action_respond_info("The following params where specified:\nSHOW_CFG = %d\nDESC = %d" % (stop_configfile,only_gcode_macros_description)) }
            { action_respond_info("This combination of parameters will not produce a result because printer.configfile has been totally removed from the search!\nPlease change the SHOW_CFG parameter to a 1 or 2 ") }
        {%endif %}
     {% endif %}
    
    {% set ns = namespace(rename_existing=0, flag=0, gcode_description=0) %}
    {% if not error_message %}
      {% set flag = 0 %}
      {% for item in printer|sort  %}
        
        {% if item|lower == 'configfile' and stop_configfile == 0 %}
            #do nothing
        {% elif (item|lower != 'configfile' and only_rename_existing == 1) or (item|lower != 'configfile' and only_gcode_macros_description == 1 ) %}
            # do nothing
        {% else %}
            {% if (item|lower == 'configfile' and only_rename_existing == 1 ) or ( item|lower == 'configfile' and only_gcode_macros_description == 1 ) %}
                {% set ns.path = ['',''] %} 
                {% if flag != 0 %}
                    {% set ns.flag = 1 %}
                    { action_respond_info(ns.path|join) }
                    #{ action_respond_info("You are here 9") }          
                {% else %}
                    {% set flag = 1 %}
                {% endif %}
            {% else %}
                {% if ' ' in item %}
                    {% set ns.path = ['printer', "['%s']" % (item), ''] %}
                {% else %}
                    {% set ns.path = ['printer.', item, ''] %}   
                {% endif %} 
                {% set ns.flag = 1 %}
                { action_respond_info(ns.path|join) }
                #{ action_respond_info("You are here 10") }          
            {% endif %}

            {% if printer[item].items()|sort %}
                {% if only_gcode_macros_description == 1 %}
                    {% for childkey, child in printer[item].items() recursive %}
                        #printer.configfile.config['gcode_macro status_cleaning'].gcode:
                        {% set ns.path = ns.path[:loop.depth|int + 1] %}
                    
                        {%if only_gcode_macros_description == 1 %}
                            {% if childkey in ['config','settings'] %}
                               #do nothing
                                  {% set null = ns.path.append("") %}
                            {% else %}
                                {% if ' ' in childkey %}
                                    {% set null = ns.path.append("['%s']" % (childkey|lower)) %}
                                {% else %}
                                    {% set null = ns.path.append(".%s" % (childkey|lower)) %}
                                {% endif %}
                            {% endif %}                            
                        {% else %}
                            {% if ' ' in childkey %}
                                {% set null = ns.path.append("['%s']" % (childkey|lower)) %}
                            {% else %}
                                {% set null = ns.path.append(".%s" % (childkey|lower)) %}
                            {% endif %}
                        {% endif %}                        

                        {% if child is mapping and (childkey|string != 'config' or stop_configfile != 1) and ( childkey|string != 'settings' or stop_configfile != 2 ) %}
                            { loop(child.items()) }
                        {% else %}
                            {% if ((childkey|string == 'config') and (stop_configfile == 1 )) %}
                                {% if not only_gcode_macros_description %}
                                    {% set ns.flag = 1 %}
                                    { action_respond_info("%s:" % (ns.path|join)) }
                                    #{ action_respond_info("You are here 3") }    
                                {% endif %}                                
                            {% elif ((childkey|string == 'settings') and (stop_configfile == 2 )) %}
                                {% if not only_gcode_macros_description %}
                                    {% set ns.flag = 1 %}
                                    { action_respond_info("%s:" % (ns.path|join)) }
                                    #{ action_respond_info("You are here 4") }  
                                {% endif %}                            
                            {% elif ((childkey|string == 'description') and (only_gcode_macros_description == 1 )) %}
                                # [printer.configfile.config['gcode_macro _CHECK_CONSITENT'].description
                                {% set ns.gcode_description = ns.gcode_description + 1 %}
                                {% set name_length = (ns.path|join|length) %} 
                                {% set full_path = ns.path|join %}
                                {% set ns.flag = 1 %}
                                { action_respond_info("%s : %s" % ( full_path, child)) }
                                #{ action_respond_info("%s renamed existing to %s" % ( full_path[13:name_length], child)) }
                                #{ action_respond_info("You are here 5-2") }          
                            {% elif ((childkey|string == 'gcode') and (stop_gcode == 0 ) and not(only_gcode_macros_description)) %}
                                {% set ns.flag = 1 %}
                                { action_respond_info("%s:" % (ns.path|join)) } 
                                #{ action_respond_info("You are here 6") }          
                            {% else %}
                                {% if only_gcode_macros_description == 1 %}
                                 # do nothing
                                {% else %}
                                    {% set ns.flag = 1 %}
                                    { action_respond_info("%s : %s" % (ns.path|join, child)) }  
                                    #{ action_respond_info("You are here 7") }                                          
                                {% endif %}
                           {% endif %}
                        {% endif %} 
                    {% endfor %}
                {% else %}                                             # if only_gcode_macros_description == 1 ELSE part
                    {% for childkey, child in printer[item].items() recursive %}
                        #printer.configfile.config['gcode_macro status_cleaning'].gcode:
                        {% set ns.path = ns.path[:loop.depth|int + 1] %}
                    
                        {%if only_rename_existing == 1 %}
                            {% if childkey in ['config','settings'] %}
                               #do nothing
                                    {% set null = ns.path.append("") %}
                            {% else %}
                                {% if ' ' in childkey %}
                                    {% set null = ns.path.append("['%s']" % (childkey)) %}
                                {% else %}
                                    {% set null = ns.path.append(".%s" % (childkey)) %}
                                {% endif %}
                            {% endif %}                            
                        {% else %}
                            {% if ' ' in childkey %}
                                {% set null = ns.path.append("['%s']" % (childkey)) %}
                            {% else %}
                                {% set null = ns.path.append(".%s" % (childkey)) %}
                            {% endif %}
                        {% endif %}                        

                        {% if child is mapping and (childkey|string != 'config' or stop_configfile != 1) and ( childkey|string != 'settings' or stop_configfile != 2 ) %}
                            { loop(child.items()) }
                        {% else %}
                            {% if ((childkey|string == 'mesh_matrix' or childkey|string == 'probed_matrix') and (stop_bed_mesh == 0 or stop_bed_mesh == 1 )) %}
                                {% set ns.flag = 1 %}
                                { action_respond_info("%s:" % (ns.path|join)) } 
                                #{ action_respond_info("You are here 1") }          
                            {% elif ((childkey|string == 'points') and (stop_bed_mesh == 1 )) %}
                                {% set ns.flag = 1 %}
                                { action_respond_info("%s:" % (ns.path|join)) }
                                #{ action_respond_info("You are here 2") }          
                            {% elif ((childkey|string == 'config') and (stop_configfile == 1 )) %}
                                {% if not only_rename_existing %}
                                    {% set ns.flag = 1 %}
                                    { action_respond_info("%s:" % (ns.path|join)) }
                                    #{ action_respond_info("You are here 3") }    
                                {% endif %}                                
                            {% elif ((childkey|string == 'settings') and (stop_configfile == 2 )) %}
                                {% if not only_rename_existing %}
                                    {% set ns.flag = 1 %}
                                    { action_respond_info("%s:" % (ns.path|join)) }
                                    #{ action_respond_info("You are here 4") }  
                                {% endif %}                            
                            {% elif ((childkey|string == 'rename_existing') and (only_rename_existing == 1 )) %}
                                # ['gcode_macro PROBE_CALIBRATE'].rename_existing renamed existing to _PROBE_CALIBRATE
                                {% set ns.rename_existing = ns.rename_existing + 1 %}
                                {% set name_length = (ns.path|join|length) - 18 %} 
                                {% set full_path = ns.path|join %}
                                {% set ns.flag = 1 %}
                                #{ action_respond_info("%s renamed existing to %s" % ( full_path, child)) }
                                { action_respond_info("%s renamed existing to %s" % ( full_path[13:name_length], child)) }
                                #{ action_respond_info("You are here 5") }          
                            {% elif ((childkey|string == 'gcode') and (stop_gcode == 0 ) and not(only_rename_existing)) %}
                                {% set ns.flag = 1 %}
                                { action_respond_info("%s:" % (ns.path|join)) } 
                                #{ action_respond_info("You are here 6") }          
                            {% else %}
                                {% if only_rename_existing == 1 %}
                                 # do nothing
                                {% else %}
                                    {% set ns.flag = 1 %}
                                    { action_respond_info("%s : %s" % (ns.path|join, child)) }  
                                    #{ action_respond_info("You are here 7") }                                          
                                {% endif %}
                           {% endif %}
                        {% endif %} 
                    {% endfor %}
                {% endif %} 
            {% endif %}
        {% endif %}    
      {% endfor %}
    {% endif %}
    {% if ns.flag == 0 %}
       {action_respond_info("Nothing found for \"DUMP_DICTIONARY %s\"" % rawparams)} 
    {% elif ns.rename_existing > 0 %}
       {action_respond_info("")} 
       {action_respond_info("DUMP_DICTIONARY found a TOTAL of %d renamed macro(s)" % ns.rename_existing)} 
    {% elif ns.gcode_description > 0 %}
       {action_respond_info("")} 
       {action_respond_info("DUMP_DICTIONARY found a TOTAL of %d macro description(s) " % ns.gcode_description)} 
    {% endif %}    