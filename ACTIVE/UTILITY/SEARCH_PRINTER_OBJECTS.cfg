# SEARCH_PRINTER_OBJECTS combines a mutlitple of different methods into one macro routine:
#    SEARCH_PRINTER_OBJECTS performs the same job as DUMP_VARIABLES macro from AndrewEllis93's Print-Tuning-Guide at https://ellis3dp.com/Print-Tuning-Guide/articles/useful_macros/dump_variables.html
#    SEARCH_PRINTER_OBJECTS performs the same job as DUMP_PARAMETER macro form zellneralex at https://github.com/zellneralex/klipper_config/blob/master/debug_macro.cfg
#    SEARCH_PRINTER_OBJECTS performs the same job as GadgetAngel's SEARCH_GCODE_ROUTINES macro published on Voron Discord at https://discord.com/channels/460117602945990666/1024487409129373796/1049832743334314064
#   
#  SEARCH_PRINTER_OBJECTS will not crash your printer and will display a message indicating it did not find a match for your search.
#.................................................................................................................
# SEARCH_PRINTER_OBJECTS - optional parameters: 
#    (parameter appears by itself) ................................ P={'parameter_group'} - search in printer[*] -> Filter results based on the name of the first key (only show varables with exact matches to this string)
#    (parameter appears by itself) ................................ C={'name_of_item_in_config'} - search in printer[configfile].config.{C} -> Filter results based on name (only show varables with exact matches to this string)
#    (parameter appears by itself) ................................ S={'name_of_item_in_settings'} - search in printer[configfile].settings.{S} -> Filter results based on name (nly show varables with exact matches to this string)
#    (parameter can appear by itself or only with VALUE parameter)..NAME=('string') - search in printer[NAME] or print[*].NAME -> Filter results based on name (only show varables with names containing this string)
#    (parameter can appear by itself or only with NAME parameter)...VALUE=('string') - search in printer[*][*].VALUE -> Filter results based on value (only show values containing this value) 
#    (parameter can only appear with NAME or VALUE parameters)......CFG=1 - it will allow the printer[configfile] section to be searched and if matches found those results in printer[configfile].config and printer[coonfigfile].settings will be inclued in the printed out.
#    (parameter appears by itself) ................................ COMMAND=('string') - lists all your user defined g-code macros that use a command string that you specify in the parmeter COMMAND
#    (parameter appears by itself) ................................ SHOW_MESH=0 - print all parameters (printer[*]) expect for two sections configfile section and bed_mesh section
#    (parameter appears by itself) ................................ SHOW_MESH=1 - print all parameters  (printer[*]) expect for one sections configfile section 
#    (parameter appears by itself) ................................ C="-99" - print ONLY one section printer[configfile]config section
#    (parameter appears by itself) ................................ S="-99" - print ONLY one section printer[configfile]settings section
#
# / Usage: 
#        SEARCH_PRINTER_OBJECTS P='gcode_macro _Probe_Variables'            ; this search is case case sensitive
#        SEARCH_PRINTER_OBJECTS C='temperature_sensor M_Y-Axis_Frame_Temp'  ; this search is case sensitive
#        SEARCH_PRINTER_OBJECTS C='mcu EBBCan'                           ; this search is case sensitive
#        SEARCH_PRINTER_OBJECTS P='mcu EBBCan'                           ; this search is case sensitive
#        SEARCH_PRINTER_OBJECTS C='probe'                                ; this search is case sensitive
#        SEARCH_PRINTER_OBJECTS S='probe'                                ; this search is NOT case sensitive
#        SEARCH_PRINTER_OBJECTS S='306'                                  ; this search is NOT case sensitive
#        SEARCH_PRINTER_OBJECTS                                          ; print all parameters expect configfile
#        SEARCH_PRINTER_OBJECTS NAME="speed" VALUE=0.0                   ; this search is NOT case sensitive
#        SEARCH_PRINTER_OBJECTS NAME='config'                            ; this search is NOT case sensitive
#        SEARCH_PRINTER_OBJECTS VALUE=None                               ; this search is NOT case sensitive
#        SEARCH_PRINTER_OBJECTS C="-99"                                  ; print only configfile.config
#        SEARCH_PRINTER_OBJECTS S="-99"                                  ; print only configfile.settings
#
# EXAMPLES:
# SEARCH_PRINTER_OBJECTS P="tmc2209 stepper_z3"
# SEARCH_PRINTER_OBJECTS C="gcode_macro current_normal" - will not work because the gcode name in configfile.config is the actual string type in so it is = "gcode_macro CURRENT_NORMAL" 
# SEARCH_PRINTER_OBJECTS S="gcode_macro CURRENT_NORMAL" - now works because this macro forces the S= searched to be done in lower case
# SEARCH_PRINTER_OBJECTS C="gcode_macro CURRENT_NORMAL"   - when using the C= parmaeter be careful with the CASE of each character.  The C= is case sensitive!
# SEARCH_PRINTER_OBJECTS S="extruder"
# SEARCH_PRINTER_OBJECTS S="gcode_macro current_normal"
# SEARCH_PRINTER_OBJECTS C="temperature_sensor O_Electronic_Case_Temp"
# SEARCH_PRINTER_OBJECTS NAME='config' CFG=1
# SEARCH_PRINTER_OBJECTS VALUE=None
# SEARCH_PRINTER_OBJECTS NAME="mcu_phase_offset" VALUE='125' CFG=1
# SEARCH_PRINTER_OBJECTS NAME="speed" VALUE=0.0
# SEARCH_PRINTER_OBJECTS NAME="SPEED" VALUE=0.0
# SEARCH_PRINTER_OBJECTS NAME="speed" 
# SEARCH_PRINTER_OBJECTS VALUE=0.0
# SEARCH_PRINTER_OBJECTS C="gcode_macro CURRENT_NORMAL"
# SEARCH_PRINTER_OBJECTS S="gcode_macro CURRENT_NORMAL"
# SEARCH_PRINTER_OBJECTS S=EXTRUDER
# SEARCH_PRINTER_OBJECTS P="tmc2209 stepper_z3"
# SEARCH_PRINTER_OBJECTS COMMAND="m190"
# SEARCH_PRINTER_OBJECTS COMMAND=M190             ;all gcode command string are converted to lower case before the search begins and the comparision is done is lower case also, so this command will produce the same result as the previous command
# SEARCH_PRINTER_OBJECTS SHOW_MESH=0              ;print all parameters expect for two sections configfile section and bed_mesh section
# SEARCH_PRINTER_OBJECTS                          ;print all parameters expect for two sections configfile section and bed_mesh section
# SEARCH_PRINTER_OBJECTS SHOW_MESH=1              ;print all parameters expect for one sections configfile section 
# SEARCH_PRINTER_OBJECTS C="-99"                  ;print only configfile.config
# SEARCH_PRINTER_OBJECTS S="-99"                  ;print only configfile.settings
#
# CAUTION about the CASE of the characters: When using the C= or S= or P= (what I call "parameter_search") watch the case (upper or lower case) of each character.
#       Since this "parameter_search" does not cause the printer object string to all be in lower case then you MUST
#       watch the case of each letter of the string you are searching for.  So if you want "gcode_macro CURRENT_NORMAL" and the
#       gcode macro name is really "gcode_macro CURRENT_NORMAL" and you searched with C= parameter than the search will not show it because
#       C= parameter does not force the search to occur in lower case.  Try using the S= parmaeter.  I have forced the S= parameter
#       to lower case since printer[configfile].settings uses all lower case characters. 
#
#
#.................................................................................................................
# Required variable(s) to be set. Add the following to your global variable dictionary block as:
#
# ---NONE---
#.................................................................................................................
# Required external macro(s) used by this macro set.
#
# ---NONE---  {action_respond_info("printer[%s] = %s" % ())}
#.................................................................................................................
#.................................................................................................................
#
## URL Resources:  https://jinja.palletsprojects.com/en/2.11.x/templates/#for, see "Inside of a for-loop block, you can access some special variables:"
#                  https://book.pythontips.com/en/latest/for_-_else.html#else-clause
#   
#.................................................................................................................
#
# use ls -la /tmp/printer to find out which device /tmp/printer points to.
# output:
#     /tmp/printer -> /dev/pts/1
# to save the output from the UI console ssh over to pi:
# sudo cat /dev/pts/1 | tee /home/pi/UI/console.txt
#   to exit CTRL-C
#
###############################################################################
#          SEARCH_PRINTER_OBJECTS
###############################################################################
# List of name1 in printer object:
# webhooks.
# configfile
#   configfileconfig
#   configfilesettings
# mcu.
# mcu EBBCan
# mcu rpi
# mcu tinyfan
# heaters
# gcode_move
# bed_mesh
# display_status
# tmc2209 extruder
# fan
# heater_fan xxx
# temperature_fan xxx
# controller_fan xxx
# temperature_host xxx
# fan_generic xxx
# heater_bed
# idle_timeout
# neopixel xxxx
# output_pin xxxx
# pause_resume
# probe
# quad_gantry_level
# save_variables
# filament_motion_sensor xxxx
# tmc2209 xxx
# temperature_sensor xxx
# print_stats
# virtual_sdcard
# query_endstops
# z_calibration
# z_thermal_adjust
# gcode_macro xxxx
# firmware_retraction
# motion_report
# system_stats
# manual_probe
# toolhead
# extruder
#
#.................................................................................................................

[gcode_macro SEARCH_PRINTER_OBJECTS]
description: Dump all Klipper parameters located in printer object to terminal, helps find names and values of variables for use in macros
gcode:
  {% set variable_search = True if (params.NAME or params.VALUE) else False %}
  {% set parameter_search = True if (params.C or params.S or params.P) else False %}
  {% set gcode_command_search = True if params.COMMAND else False %}
  
  {% if not(variable_search and parameter_search and gcode_command_search) %}
      # none of the params have been defined so print out all parameters expect configfile 
      {% set print_printer_parameters = True %}
      {% set show_mesh = params.SHOW_MESH|default(0)|int %}  
  {% else %}    
      {% set print_printer_parameters = False %}
  {% endif %}

  {% if gcode_command_search %}
      {% set ns = namespace(num=0, delayed_num=0) %}
  {% elif variable_search %}
      {% set filter_name = params.NAME|default('')|string|lower %}                       
      {% set filter_value = params.VALUE|default('')|string|lower %}                     
      {% set show_cfg = params.CFG|default(0)|int %}  
  {% endif %}
  
  {% if parameter_search or gcode_command_search or print_printer_parameters %}
      {% if parameter_search or gcode_command_search %}
          {% set config = True if (params.C or params.S or params.COMMAND) else False %}
      {% elif print_printer_parameters %}
          {% set config = False %}
      {% endif %}
  {% endif %}
  
  {% if parameter_search %}
      {% set path = 'config' if params.C  else 'settings' if params.S %}
  {% endif %}
  
  {% if gcode_command_search %}  
      {% set gcode_cmd = params.COMMAND|default('')|string|lower %}
  {% endif %}
  
   {% if variable_search %}
        {% if params.VALUE is defined and params.NAME is defined %}
             {% set search = [params.NAME, params.VALUE]|lower %} 
        {% elif params.VALUE is not defined %}
            {% set search = filter_name %}
        {% elif params.NAME is not defined %}            
            {% set search = filter_value %} 
        {% endif %}
   {% elif parameter_search %}
        {% set search = (params.C) if (params.C) else (params.S|lower) if (params.S) else (params.P) if (params.P) %}    
   {% elif gcode_command_search %}
        {% set search = gcode_cmd if params.COMMAND %} 
   {% endif %}
    
  {% set out = [] %}
    
    {% for name1 in printer|sort %}                                                              
        {% if parameter_search or print_printer_parameters %}   
            {% if config %}                                                                     ; print the searched printer.configfile[path] parameter        
                {% if name1 is in ['configfile'] %}                                              
                    {% for name2 in printer[name1][path]|sort %}
                      {% if search != "-99" %}                    
                        {% if name2 is in [search] %}                                                                          
                            {% for name3, value in printer[name1][path][name2].items()|sort %}                                 
                                {% set _dummy = out.append("printer.configfile.%s['%s'].%s = %s" %                             
                                        (path, name2, name3, value)) %}                                                        
                            {% endfor %}                                                                                       
                        {% endif %}  
                      {% else %}
                         # print out printer.configfile branch
                         {% for name3, value in printer[name1][path][name2].items()|sort %}
                             {% set _dummy = out.append("printer.configfile.%s['%s'].%s = %s" % 
                                   (path, name2, name3, value)) %}
                         {% endfor %}
                      {% endif %}
                    {% endfor %}                                                                                               
                {% endif %} 
            {% else %}       
                {% for name2, value2 in printer[name1].items()|sort %} ; search for anything expext printer.configfile          
                    {% if search is not defined and name1 is not in ['configfile'] and show_mesh == 1 %} ; print all printer. parameters                        
                        {% set _dummy = out.append("printer['%s'].%s = %s" % (name1, name2, value2)) %}   
                    {% elif search is not defined and name1 is not in ['configfile', 'bed_mesh'] and show_mesh == 0 %} ; print all printer. parameters except bed_mesh                       
                        {% set _dummy = out.append("printer['%s'].%s = %s" % (name1, name2, value2)) %}                                               
                    {% elif search is defined and name1 is in [search] %} ; print the searched printer. parameter              
                        {% set _dummy = out.append("printer['%s'].%s = %s" % (name1, name2, value2)) %}                         
                    {% endif %}                                                                                                
                {% endfor %}                                                                                                   
            {% endif %}                      
        {% elif variable_search %}                                                               
                    {% for name2 in printer[name1] %}                                            
                        {% if (show_cfg or not(name1|lower == 'configfile' and name2|lower in ['config', 'settings'])) and (filter_name in name1|lower or filter_name in name2|lower) and filter_value in printer[name1][name2]|string|lower %}  
                            {% set _dummy = out.append("printer['%s'].%s = %s" % (name1, name2, printer[name1][name2])) %}    
                        {% endif %} 
                    {% else %}                                                                                                 
                        {% if filter_name in name1|lower and filter_value in printer[name1]|string|lower %}                    
                           {% set dummy = out.append("printer['%s'] = %s" % (name1, printer[name1])) %}                        
                        {% endif %}                                                                                            
                    {% endfor %} 
        {% elif gcode_command_search %}                                                          
                    {% for name2 in printer[name1] %}                                                       
                        {% if ( (name1|lower == 'configfile') and (name2|lower in ['config']) ) %}  
                                {% if printer[name1][name2].items() %}                           
                                    {% for name3, value3 in printer[name1][name2].items() %}      
                                        #comment : name3 = gcode_macro print_end; value3 = {'gcode': '\n_general_debug msg="   
                                        {% if "gcode_macro " in name3 or "delayed_gcode" in name3 %}                           
                                                {% for name4, value4 in value3.items() %}                                      
                                                     # comment : name4 = gcode; value4={% set message = params.msg %}          
                                                    {% if (("gcode" in name4) and ((gcode_cmd|lower) in (value4|lower))) %}    
                                                          {% if "gcode_macro " in name3 %}                                     
                                                              {% set ns.num = ns.num + 1 %}                                   
                                                              {% set _dummy = out.append('G-CODE_________name[%d]: %s' % (ns.num, name3[12:]|upper) ) %}   
                                                          {% elif "delayed_gcode" in name3 %}                                  
                                                              {% set ns.delayed_num = ns.delayed_num + 1 %}                    
                                                              {% set _dummy = out.append("DELAYED_G-CODE_name[%d]: %s" % (ns.delayed_num, name3[14:]|upper) ) %}    
                                                          {% endif %}                                                          
                                                    {% endif %}                                                                
                                                {% endfor %}                                                                   
                                        {% endif %}                                                                            
                                    {% endfor %}                                                                               
                                {% endif %}                                                                                    
                        {% endif %}                                                                                            
                    {% endfor %}                                                                                               
        {% endif %}                                                                                                                                                                                                               
    {% endfor %}                                                                                                               
  {% if ( (gcode_command_search) and ( out|length > 0 ) ) %}                                                                   
      {action_respond_info("Found a TOTAL of %d occurrances for %s command in USER MACROS." % ((ns.num + ns.delayed_num), gcode_cmd|upper)) }     
      {action_respond_info("Found %d occurrances in G-Code macros & found %d occurrances in DELAYED G-Code macros." % (ns.num, ns.delayed_num)) } 
      {action_respond_info("The following list of G-Code macros contain the command['%s']:" % gcode_cmd)}                                         
  {% endif %}                                                                                                                                     
  {% if parameter_search or variable_search or gcode_command_search or print_printer_parameters %}                                                                            
      {% if out|length > 0 %}                                                                                                                     
          {action_respond_info(out|join("\n"))}                                                                                                   
      {% else %}                                                                                                                                  
          {action_respond_info("Nothing found for \"DUMP_PARAMETER %s\"" % rawparams)}                                                            
      {% endif %}                                                                                                                                 
  {% endif %}                                                                                                                                     