#.................................................................................................................
# PRINT_END - No additional options / Usage: PRINT_END
#   Performs all needed actions upon completion of printing
#.................................................................................................................
# Required variable(s) to be set. Add the following to your global variable dictionary block as:
#
#[gcode_macro globalvariables]
#variable_NPLimitAccel: 3000 #3500      # Accel velocity limit
#variable_NPLimitDecel: 1500            # Decel velocity limit
#variable_EndRetract: 2.0               # After print has completed, how much retraction to perform
#variable_PostPrintCool: 1              # Post-Print cooling to prevent nozzle string, minutes of cooling
#variable_PostPrintParkCool: 2          # Once parks, minutes of cooling
#.................................................................................................................
# Required external macro(s) used by this macro set.
#
# _general_Debug
# TURN_OFF_HEATERS
# CURRENT_NORMAL
# _COOL_WAIT
# PARK_UpperRight
# STATUS_READY
# M117
#.................................................................................................................

#.................................................................................................................
[gcode_macro PRINT_END]
# Use PRINT_END for the slicer ending script
description: Performs all needed actions upon completion of printing
gcode:
    _general_Debug msg="PRINT_END - entering"
    SET_VELOCITY_LIMIT ACCEL={printer["gcode_macro globalvariables"].nplimitaccel|float} ACCEL_TO_DECEL={printer["gcode_macro globalvariables"].nplimitdecel|float}
    {% set EndRetract = printer["gcode_macro globalvariables"].endretract|float %}
    {% set Z_MAX = printer.configfile.config["stepper_z"]["position_max"]|float -1 %}  
    {% set X_MAX = printer.configfile.config["stepper_x"]["position_max"]|float -1 %}
    {% set Z_POS = printer.toolhead.position.z + 10 %}
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
	# disables the filament sensor
	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-{EndRetract} F3600        ; retract filament
    TURN_OFF_HEATERS
    CURRENT_NORMAL
    G91
    G0 Z5 F1000
    G90
    M400
    _COOL_WAIT MINUTES={printer["gcode_macro globalvariables"].postprintcool|float}
    PARK_UpperRight
    M18 X Y E
    M107                           ; turn off fan
    #BED_MESH_CLEAR   ;You must NOT have clear_bed_mesh in your print_end script UNLESS your print_start is either loading or measuring a new bed mesh at each print_start
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
    _COOL_WAIT MINUTES={printer["gcode_macro globalvariables"].postprintparkcool|float}
    #SET_LED LED=nozzle RED=.2 GREEN=.5 BLUE=.2
	STATUS_READY
    M117 Finished printing, check nozzle clear.
    #M118 Finished printing, check nozzle clear.
    _general_Debug msg="PRINT_END - exiting"

    