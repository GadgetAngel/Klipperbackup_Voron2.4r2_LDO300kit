#.................................................................................................................
# WAIT_Delayed - No additional options / Usage: NONE
#
# This macro is part of the WAITING_NONBLOCKING macros.
# This is a non blocking wait (for example to dalay a macro).
# This macro display the amount of time left and check to see if the wait time has expired so that another macro can be called
#
#.................................................................................................................
# Required variable(s) to be set. Add the following to your global variable dictionary block as:
#
# [gcode_macro _GLOBAL_VARS]
#  variable_wait_variable
#  variable_wait_variable.count
#  variable_wait_variable.duration
#  variable_wait_variable.waiting
#  variable_wait_variable.boot
#  variable_skip
#
#.................................................................................................................
# Required external macro(s) used by this macro.
#
# _general_Debug
# _WAIT_Loop
# LIGHTS_OFF
# PROGRESS_BAR_LEDS_OFF
# _CASELIGHT_OFF
# STATUS_OFF
# _GLOBAL_VARS
# PARK_DICT
# M117
# RESETRGB
# PROGRESS_BAR_LEDS_ON
# CASELIGHT
# STATUS_READY
#
#.................................................................................................................

#.................................................................................................................
#
## URL: https://www.klipper3d.org/Command_Templates.html?h=variables#variables
#       https://github.com/rkolbi/voron2.4/blob/main/MY_V24-350/ACTIVE/MACRO-WAITING_PREPRINT_NONBLOCKING.cfg
##     
#.................................................................................................................

[delayed_gcode WAIT_Delayed]
gcode:
    _general_Debug msg="WAIT_Delayed- entering"
    {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
    {% set wait_variable = global.wait_variable %}
    {% set count = global.wait_variable.count|float %}                  # 180 for 6 minutes #5.1 for 0.17 minutes
    {% set duration = global.wait_variable.duration|float %}            # 2
    {% set boot = global.wait_variable.boot|int %}
    {% set skip = global.skip|float %}
    {% if count <= 30 %}
        {% set minutes_left = ((duration * count) / 60)|round(2) %}
    {% elif count > 30 %}
        {% set minutes_left = ((duration * count) / 60)|round(1) %}
    {% else %}
       M118 WAIT_Delayed: count = {count}
    {% endif %}
    {% if skip > 0 and skip == minutes_left %}
        M117 Waiting... {minutes_left} minutes left.
        SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=skip VALUE={(minutes_left - 1)}
    {% elif skip < 0 and skip == minutes_left %}
        M117 Waiting... {minutes_left} minutes left.
        SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=skip VALUE={(minutes_left - 0.1)}
    {% endif %} 
    {% set _dummy = wait_variable.update({'count':(count-1.0)}) %}
    SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=wait_variable VALUE="{wait_variable}"
    {% if count > 0 %} _WAIT_Loop  {% endif %}
    {% if count <= 0 and boot == 0 %} 
        # FINAL ACION
       {% set _dummy = wait_variable.update({'waiting':False}) %}
        SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=wait_variable VALUE="{wait_variable}"
        # turn off all the lights
        LIGHTS_OFF                                          ;turn off WLED lights - lights controlled by WLED servers (ESP32 chips)
        PROGRESS_BAR_LEDS_OFF                               ;turn off progress bar lights - lights controlled by Octopus Pro board's RGB port
        _CASELIGHT_OFF                                      ;turn off 24V White lights - lights controlled by Octopus Pro board's HE1 port
        STATUS_OFF                                          ;turn off Stealthburner LEDs - lights controlled by EBB36 board
    {% elif count <= 0 and boot == 1 %}
        {% set dict_string = {"x": 150.0, "y": 20.0, "z": 50.0, "f": 4000.0} %}
        PARK_DICT LIT='{dict_string}'
        #{% set dict_string2 = {'x': 250, 'y': 50, 'z': 70, 'f': 4000} %}
        #PARK_DICT DICT="{dict_string2}"
        # turn off all the lights
        RESETRGB                                            ;turn on WLED lights - lights controlled by WLED servers (ESP32 chips)
        PROGRESS_BAR_LEDS_ON                                ;turn on progress bar lights - lights controlled by Octopus Pro board's RGB port
        CASELIGHT                                           ;turn pn 24V White lights - lights controlled by Octopus Pro board's HE1 port
        STATUS_READY                                        ;turn on Stealthburner LEDs - lights controlled by EBB36 board        
    {% endif %}
    _general_Debug msg="WAIT_Delayed- exiting"
    