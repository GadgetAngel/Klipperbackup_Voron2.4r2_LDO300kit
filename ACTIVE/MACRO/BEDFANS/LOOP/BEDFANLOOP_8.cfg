#.................................................................................................................
# BEDFANLOOP - No additional options / Usage: NONE
#
# This macro starts automatically when the heater_bed TARGET temperature is set
#
# This macro requires the following objects to be defined in the configuration of the printer object:
#    1.  a chamber temperature sensor to be defined:
#             replace all occurances of "J_Chamber_ZDragChain_PT100" with the name of your chamber temperature sensor in this file
#    2.  bed fans to be defined:
#             if you have two bed fans defined: replace all occurances of "Bedfan_Left" and "Bedfan_Right" with the names of the two bed fans you have defined
#             or
#             if you have only one bed fan defined: replace all occurances of "Bedfan_Left" with the name of the bed fan you have defined and remove "Bedfan_Right"
#.................................................................................................................
# Required variable(s) to be set. Add the following to your global variable dictionary block as:
#
#[gcode_macro globalvariables]
#variable_defaultEnclosure: 50          # The default Enclosure temperature if none is specified
#
#[gcode_macro bedfanvars]
#variable_threshold: 110		 # If bed temp target is equal to or above this threshold, fans will be enabled. If temp is set to below this threshold, fans will be disabled.
#variable_offset: 4           # Fan is off when chamber temp < (defaultenclosure-offset), if temp is falling.
#variable_flag: 0             # Bed heater reached target temp if this value > 0, Valid value: 0 (boot state), 2 (Target heater temp reached), 3 (chamber temp falling), 4 (chamber temp above defaultEnclosure temp)
#variable_lasttemp: 0.0       # previous chamber temperature reading
#
# [delayed_gcode boot_bedfans]
#  variable_flag: 0
#  variable_lasttemp: 0.0   
#
#.................................................................................................................
# Required external macro(s) used by this macro.
#
#  _general_Debug
#  _BedFansFast
#  _BedFansOff
#  _BedFansFastPlus_02
#  GLOBALVARIABLES
#  BEDFANVARS
#  BOOT_BEDFANS
#
#.................................................................................................................

#.................................................................................................................
#
## URL Resources: https://voronregistry.com/mods/ellis-bedfans
#                 https://github.com/VoronDesign/VoronUsers/tree/master/printer_mods/Ellis/Bed_Fans/Klipper_Macros
#      
#.................................................................................................................

#[delayed_gcode boot_bedfans]
# <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<   See file ~/klipper_config/ACTIVE/MACRO/PRERUN/BOOT_BEDFANS_0.5.cfg
#initial_duration: 0.5
#gcode:
#    SET_GCODE_VARIABLE MACRO=bedfanvars VARIABLE=flag VALUE=0
#    {% set chambertemp = printer["temperature_sensor J_Chamber_ZDragChain_PT100"].temperature|float %}
#    SET_GCODE_VARIABLE MACRO=bedfanvars VARIABLE=lasttemp VALUE={0.0}
#    {action_respond_info("++++++++++++++++++++++++") }
#    {action_respond_info("Heater_threshold = %d;\nChamberTEMP_threshold = %.2f;\nFLAG = %d;\nLAST_CHAMBER_TEMP = %.2f;\ncurrent_CHAMBER_TEMP = %.2f;\nOFFSET = %d;" % (printer["gcode_macro bedfanvars"].threshold|int, printer['gcode_macro globalvariables'].defaultenclosure,  printer["gcode_macro bedfanvars"].flag|int, printer["gcode_macro bedfanvars"].lasttemp, chambertemp, printer["gcode_macro bedfanvars"].offset|int)) }
#    {action_respond_info("++++++++++++++++++++++++") }
#    {action_respond_info("                        ") } 

[delayed_gcode bedfanloop]
gcode:
	# Vars
     _general_Debug msg="bedfanloop - entering"
	{% set THRESHOLD = printer["gcode_macro bedfanvars"].threshold|int %}
    {% set CHAMBER_THERSHOLD = printer['gcode_macro globalvariables'].defaultenclosure %}
    {% set CURRENT_CHAMBERTEMP = printer["temperature_sensor J_Chamber_ZDragChain_PT100"].temperature %}
    {% set LAST_CHAMBERTEMP = printer["gcode_macro bedfanvars"].lasttemp %}
    {% set OFFSET = printer["gcode_macro bedfanvars"].offset|int %}
    {% set FLAG = printer["gcode_macro bedfanvars"].flag|int %}
	
	{% if printer.heater_bed.target >= THRESHOLD %}								# Continue only if target temp greater than threshold.
		{% if printer.heater_bed.temperature|int >= (printer.heater_bed.target|int - 1) %}
            {% if FLAG == 0 %}
        			_BedFansFast			# If within 1 degree of target temp: Higher speed fans
                    SET_GCODE_VARIABLE MACRO=bedfanvars VARIABLE=lasttemp VALUE={CURRENT_CHAMBERTEMP}
                    SET_GCODE_VARIABLE MACRO=bedfanvars VARIABLE=flag VALUE=2
                    UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=8
            {% elif (FLAG != 0) %}
                        ## check chamber termpearture, if too hot, raise the bed fan speed
                        ## if chmaber temperature is too low, run bed fans slower 
                        {% if CURRENT_CHAMBERTEMP < LAST_CHAMBERTEMP  %} #  Temp is falling
                            {% if CURRENT_CHAMBERTEMP < (CHAMBER_THERSHOLD-OFFSET) %}
                                {% if FLAG != 3 %}
                                     _BedFansFastPlus_02 #  Temp is falling, increase air flow to increase chamber temperature
                                     SET_GCODE_VARIABLE MACRO=bedfanvars VARIABLE=flag VALUE=3
                                {% endif %}
                            {% endif %}
                        {% else %} #rising temp or same
                            {% if CURRENT_CHAMBERTEMP >= CHAMBER_THERSHOLD %}
                                {% if FLAG != 4 %}
                                    _BedFansOff #rising temp or same, turn off the fans to let chamber temp equalize
                                    SET_GCODE_VARIABLE MACRO=bedfanvars VARIABLE=flag VALUE=4
                                {% endif %}
                            {% endif %}
                        {% endif %}
                        SET_GCODE_VARIABLE MACRO=bedfanvars VARIABLE=lasttemp VALUE={CURRENT_CHAMBERTEMP}
                        UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=8
            {% endif %}
        {% else %}
            SET_GCODE_VARIABLE MACRO=bedfanvars VARIABLE=lasttemp VALUE={CURRENT_CHAMBERTEMP}
        	UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=8	# If temp not reached yet: loop again
		{% endif %}
    {% endif %}
    _general_Debug msg="bedfanloop - exiting"

    