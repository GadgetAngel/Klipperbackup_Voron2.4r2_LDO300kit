#.................................................................................................................
# BEDFANLOOP - No additional options / Usage: NONE
#
# This macro starts automatically when the heater_bed TARGET temperature is set
#
# This macro requires the following objects to be defined in the configuration of the printer object:
#    1.  a chamber temperature sensor to be defined:
#             replace all occurances of "J_Chamber_ZDragChain_PT100" with the name of your chamber temperature sensor in this file
#    2.  bed fans to be defined:
#             if you have two bed fans defined: replace all occurances of "Bedfan_Left" and "Bedfan_Right" with the names of the two bed fans you have defined
#             or
#             if you have only one bed fan defined: replace all occurances of "Bedfan_Left" with the name of the bed fan you have defined and remove "Bedfan_Right"
#.................................................................................................................
# Required variable(s) to be set. Add the following to your global variable dictionary block as:
#
# [gcode_macro _GLOBAL_VARS]
# variable_bedfanvars
# variable_bedfanvars.lasttemp
# variable_bedfanvars.flag
#
# [gcode_macro _USER_VARIABLE]
# variable_bedfanvars.threshold
# variable_filament.profile.defaultEnclosure
# variable_bedfanvars.offset
#
#.................................................................................................................
# Required external macro(s) used by this macro.
#
#  _general_Debug
#  _BedFansFast
#  _BedFansOff
#  _BedFansFastPlus_02
# _GLOBAL_VARS
# _USER_VARIABLE
#
#.................................................................................................................

#.................................................................................................................
#
## URL Resources: https://voronregistry.com/mods/ellis-bedfans
#                 https://github.com/VoronDesign/VoronUsers/tree/master/printer_mods/Ellis/Bed_Fans/Klipper_Macros
#      
#.................................................................................................................

[delayed_gcode bedfanloop]
gcode:
	# Vars
     _general_Debug msg="bedfanloop - entering"
    {% set user = printer['gcode_macro _USER_VARIABLE'] %}
    {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
    {% set bedfanvars = global.bedfanvars %}
    {% set THRESHOLD = user.bedfanvars.threshold|int %}                                                          ;target bed temperature you set
    {% set CHAMBER_THERSHOLD = user.filament.profile.defaultEnclosure %}                                         ;desired temperature for chamber
    {% set CURRENT_CHAMBERTEMP = printer["temperature_sensor J_Chamber_ZDragChain_PT100"].temperature %}         ;current chamber temperature
    {% set LAST_CHAMBERTEMP = global.bedfanvars.lasttemp %}                                                      ;previous chamber temperature
    {% set OFFSET = user.bedfanvars.offset|int %}                                                                ;window witdth for chamber temperature
    {% set FLAG = global.bedfanvars.flag|int %}                                                                  ;indicates the state of this macro
	
	{% if printer.heater_bed.target >= THRESHOLD %}						  # Continue only if target temp greater than threshold.
		{% if printer.heater_bed.temperature|int >= (printer.heater_bed.target|int - 1) %}
            {% if FLAG == 0 %}
        			_BedFansFast			                              # If within 1 degree of target temp: Higher speed fans                   
                    {% set _dummy = bedfanvars.update({'lasttemp':CURRENT_CHAMBERTEMP}) %}
                    {% set _dummy = bedfanvars.update({'flag':2}) %}
                    SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=bedfanvars VALUE="{bedfanvars}"
                    UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=8
            {% elif (FLAG != 0) %}
                        ## check chamber termpearture, if too hot, lower the bed fan speed
                        ## if chmaber temperature is too low, raise the bed fans speed to add more kinetic energy into the chamber air
                        {% if CURRENT_CHAMBERTEMP < LAST_CHAMBERTEMP  %}  #  Temp is falling
                            {% if CURRENT_CHAMBERTEMP < (CHAMBER_THERSHOLD-OFFSET) %}
                                {% if FLAG != 3 %}
                                     _BedFansFastPlus_02                  #  Temp is falling, increase air flow to increase chamber temperature
                                    {% set _dummy = bedfanvars.update({'flag':3}) %}
                                     SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=bedfanvars VALUE="{bedfanvars}"
                                {% endif %}
                            {% endif %}
                        {% else %} #rising temp or same
                            {% if CURRENT_CHAMBERTEMP >= CHAMBER_THERSHOLD %}
                                {% if FLAG != 4 %}
                                    _BedFansOff                             #rising temp or same, turn off the fans to let chamber temp equalize
                                    {% set _dummy = bedfanvars.update({'flag':4}) %}
                                     SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=bedfanvars VALUE="{bedfanvars}"
                                {% endif %}
                            {% endif %}
                        {% endif %}
                        {% set _dummy = bedfanvars.update({'lasttemp':CURRENT_CHAMBERTEMP}) %}
                        SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=bedfanvars VALUE="{bedfanvars}"
                        UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=8
            {% endif %}
        {% else %}
            {% set _dummy = bedfanvars.update({'lasttemp':CURRENT_CHAMBERTEMP}) %}
            SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=bedfanvars VALUE="{bedfanvars}"
        	UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=8	                # If temp not reached yet: loop again
		{% endif %}
    {% endif %}
    _general_Debug msg="bedfanloop - exiting"

    