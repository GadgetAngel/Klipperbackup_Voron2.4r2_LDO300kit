#.................................................................................................................
# PROBE_ACCURACY_LOOP - No additional options / Usage: NONE
#
# Continuously run PROBE_ACCURACY while:
#     - idling for START_IDLE_MINUTES
#     - heating the bed to BED_TEMP
#     - once at BED_TEMP, letting the bed soak for BED_SOAK_MINUTES
#     - with the bed still on, heating the extruder to EXTRUDER_TEMP
#     - once at EXTRUDER_TEMP, letting the extruder soak for EXTRUDER_SOAK_MINUTES
#     - turning off the heaters, and idling for END_IDLE_MINUTES
#
#.................................................................................................................
# Required variable(s) to be set. Add the following to your global variable dictionary block as:
#
# [gcode_macro _GLOBAL_VARS]
# variable_tmacro
# variable_tmacro.state
# variable_tmacro.next_state
# variable_tmacro.dwell_lift_z
# variable_tmacro.start_idle_minutes
# variable_tmacro.bed_temp 
# variable_tmacro.bed_soak_minutes
# variable_tmacro.extruder_temp
# variable_tmacro.extruder_soak_minutes
# variable_tmacro.end_idle_minutes
# variable_tmacro.dwell_seconds
#
#.................................................................................................................
# Required external macro(s) used by this macro.
#
# _GLOBAL_VARS
# PROBE_ACCURACY_SET_NEXT_STATE
# M140
# TURN_OFF_HEATERS
# ATTACH_PROBE_LOCK
#
#.................................................................................................................

#.................................................................................................................
#
## URL Resources: https://github.com/KiloQubit/probe_accuracy
##      
#.................................................................................................................
# PROBE_ACCURACY_LOOP
[delayed_gcode probe_accuracy_loop]
gcode:
    {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
    {% set tmacro = global.tmacro %}
    
    {% if global.tmacro.state == 'start' %}
        { action_respond_info('TEST_PROBE_ACCURACY: START') }
        {% set _dummy = tmacro.update({'state':'start_idle' }) %}
        {% set _dummy = tmacro.update({'next_state':'start_idle_done'}) %}        
        SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=tmacro VALUE="{tmacro}"      
        UPDATE_DELAYED_GCODE ID=probe_accuracy_set_next_state DURATION={ global.tmacro.start_idle_minutes|int * 60 }

    {% elif global.tmacro.state == 'start_idle_done' %}
        {% if global.tmacro.bed_temp >= 0 %}
            M140 S{ global.tmacro.bed_temp }
            { action_respond_info('TEST_PROBE_ACCURACY: BED HEATING TO %s' % global.tmacro.bed_temp) }
            {% set _dummy = tmacro.update({'state':'bed_heating' }) %}
            SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=tmacro VALUE="{tmacro}"  
        {% else %}
            # Skip heating and soaking the bed, go directly to bed_soaked state.
            {% set _dummy = tmacro.update({'state':'bed_soaked' }) %}
            SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=tmacro VALUE="{tmacro}"  
        {% endif %}

    {% elif global.tmacro.state == 'bed_heating' %}
        {% if printer.heater_bed.temperature >= global.tmacro.bed_temp %}
            { action_respond_info('TEST_PROBE_ACCURACY: BED HEATED TO %s' % global.tmacro.bed_temp) }
            {% set _dummy = tmacro.update({'state':'bed_soaking' }) %}
            {% set _dummy = tmacro.update({'next_state':'bed_soaked'}) %}        
            SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=tmacro VALUE="{tmacro}"  
            UPDATE_DELAYED_GCODE ID=probe_accuracy_set_next_state DURATION={ global.tmacro.bed_soak_minutes|int * 60 }
        {% endif %}

    {% elif global.tmacro.state == 'bed_soaked' %}
        {% if global.tmacro.bed_temp >= 0 %}
            { action_respond_info('TEST_PROBE_ACCURACY: BED SOAKED') }
        {% endif %}
        {% if global.tmacro.extruder_temp >= 0 %}
            M104 S{ global.tmacro.extruder_temp }
            { action_respond_info('TEST_PROBE_ACCURACY: EXTRUDER HEATING TO %s' % global.tmacro.extruder_temp) }
            {% set _dummy = tmacro.update({'state':'extruder_heating' }) %}
            SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=tmacro VALUE="{tmacro}"  
        {% else %}
            # Skip heating and soaking the extruder, go directly to extruder_soaked state.
            {% set _dummy = tmacro.update({'state':'extruder_soaked' }) %}
            SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=tmacro VALUE="{tmacro}"  
        {% endif %}

    {% elif global.tmacro.state == 'extruder_heating' %}
        {% if printer.extruder.temperature >= global.tmacro.extruder_temp %}
            { action_respond_info('TEST_PROBE_ACCURACY: EXTRUDER HEATED TO %s' % global.tmacro.extruder_temp) }
            {% set _dummy = tmacro.update({'state':'extruder_soaking' }) %}
            {% set _dummy = tmacro.update({'next_state':'extruder_soaked' }) %}        
            SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=tmacro VALUE="{tmacro}"  
            UPDATE_DELAYED_GCODE ID=probe_accuracy_set_next_state DURATION={ global.tmacro.extruder_soak_minutes|int * 60 }
        {% endif %}

    {% elif global.tmacro.state == 'extruder_soaked' %}
        {% if global.tmacro.extruder_temp >= 0 %}
            { action_respond_info('TEST_PROBE_ACCURACY: EXTRUDER SOAKED') }
        {% endif %}
        # TURN_OFF_HEATERS
        {% set _dummy = tmacro.update({'state':'end_idle' }) %}
        {% set _dummy = tmacro.update({'next_state':'done' }) %}        
        SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=tmacro VALUE="{tmacro}"  
        UPDATE_DELAYED_GCODE ID=probe_accuracy_set_next_state DURATION={ global.tmacro.end_idle_minutes|int * 60 }

    {% elif global.tmacro.state == 'done' %}
        { action_respond_info('TEST_PROBE_ACCURACY: DONE') }
        G90
        G1 Z30
        # DOCK_PROBE
        UPDATE_DELAYED_GCODE ID=probe_accuracy_loop DURATION=0

    {% endif %}

    {% if global.tmacro.state != 'done' %}
        M105
        #ATTACH_PROBE
        #ATTACH_PROBE_LOCK
        #_PROBE_ACCURACY 
        # PROBE_ACCURACY DOCK=0
        {% if global.tmacro.dwell_lift_z >= 0 %}
            G1 Z{ global.tmacro.dwell_lift_z }
        {% endif %}
        # M400
        UPDATE_DELAYED_GCODE ID=probe_accuracy_loop DURATION={ global.tmacro.dwell_seconds }
    {% endif %}
	