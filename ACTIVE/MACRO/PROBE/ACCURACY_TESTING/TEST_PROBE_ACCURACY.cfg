#.................................................................................................................
# TEST_PROBE_ACCURACY - required parameters: START_IDLE_MINUTES,BED_TEMP,EXTRUDER_TEMP,BED_SOAK_MINUTES,
#                                            EXTRUDER_SOAK_MINUTES,DWELL_SECONDS,DWELL_LIFT_Z,END_IDLE_MINUTES 
#
#         / Usage: TEST_PROBE_ACCURACY START_IDLE_MINUTES=5 BED_TEMP=110 EXTRUDER_TEMP=245 
#                  BED_SOAK_MINUTES=30 EXTRUDER_SOAK_MINUTES=15 DWELL_SECONDS=1 DWELL_LIFT_Z=15 END_IDLE_MINUTES=20
#
# Continuously run PROBE_ACCURACY while:
#     - idling for START_IDLE_MINUTES
#     - heating the bed to BED_TEMP
#     - once at BED_TEMP, letting the bed soak for BED_SOAK_MINUTES
#     - with the bed still on, heating the extruder to EXTRUDER_TEMP
#     - once at EXTRUDER_TEMP, letting the extruder soak for EXTRUDER_SOAK_MINUTES
#     - turning off the heaters, and idling for END_IDLE_MINUTES
#
#.................................................................................................................
# Required variable(s) to be set. Add the following to your global variable dictionary block as:
#
# [gcode_macro _GLOBAL_VARS]
# variable_tmacro
# variable_tmacro.start_idle_minutes                    ;test_probe_accuracy - params - start_idle_minutes
# variable_tmacro.bed_temp                              ;test_probe_accuracy - params - bed_temp
# variable_tmacro.extruder_temp                         ;test_probe_accuracy - params - extruder_temp
# variable_tmacro.bed_soak_minutes                      ;test_probe_accuracy - params - bed_soak_minutes
# variable_tmacro.extruder_soak_minutes                 ;test_probe_accuracy - params - extruder_soak_minutes
# variable_tmacro.dwell_seconds                         ;test_probe_accuracy - params - dwell_seconds
# variable_tmacro.dwell_lift_z                          ;test_probe_accuracy - params - dwell_lift_z
# variable_tmacro.end_idle_minutes                      ;test_probe_accuracy - params - end_idle_minutes
# variable_tmacro.state                                 ;test_probe_accuracy - params - state
# variable_tmacro.next_state                            ;test_probe_accuracy - params - next_state
#
#.................................................................................................................
# Required external macro(s) used by this macro.
#
# probe_accuracy_loop
# _GLOBAL_VARS
#
#.................................................................................................................

#.................................................................................................................
#
## URL Resources: https://github.com/KiloQubit/probe_accuracy
##      
#.................................................................................................................

[gcode_macro TEST_PROBE_ACCURACY]
#
# URL: https://github.com/KiloQubit/probe_accuracy
#
# Continuously run PROBE_ACCURACY while:
#     - idling for START_IDLE_MINUTES
#     - heating the bed to BED_TEMP
#     - once at BED_TEMP, letting the bed soak for BED_SOAK_MINUTES
#     - with the bed still on, heating the extruder to EXTRUDER_TEMP
#     - once at EXTRUDER_TEMP, letting the extruder soak for EXTRUDER_SOAK_MINUTES
#     - turning off the heaters, and idling for END_IDLE_MINUTES
#

description: Helper: TEST_PROBE_ACCURACY macro; setup variables and calls probe_accuracy_loop macro
gcode:
    {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
    {% set tmacro = global.tmacro %}
    # Copy parameters into gcode variables.
    {% set _dummy = tmacro.update({'start_idle_minutes':params.START_IDLE_MINUTES|default(5)|int }) %}
    {% set _dummy = tmacro.update({'bed_temp':params.BED_TEMP|default(110)|int }) %}
    {% set _dummy = tmacro.update({'extruder_temp':params.EXTRUDER_TEMP|default(150)|int }) %}
    {% set _dummy = tmacro.update({'bed_soak_minutes':params.BED_SOAK_MINUTES|default(30)|int }) %}
    {% set _dummy = tmacro.update({'extruder_soak_minutes':params.EXTRUDER_SOAK_MINUTES|default(15)|int }) %}
    {% set _dummy = tmacro.update({'dwell_seconds':params.DWELL_SECONDS|default(1)|int }) %}
    {% set _dummy = tmacro.update({'dwell_lift_z':params.DWELL_LIFT_Z|default(-1)|int }) %}
    {% set _dummy = tmacro.update({'end_idle_minutes':params.END_IDLE_MINUTES|default(10)|int }) %}

    # Initialize state variables in case they have old values from last run.
    {% set _dummy = tmacro.update({'state':'start' }) %}
    {% set _dummy = tmacro.update({'next_state':'none' }) %}
    SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=tmacro VALUE="{tmacro}"      

    # Schedule main loop.
    UPDATE_DELAYED_GCODE ID=probe_accuracy_loop DURATION=1
	