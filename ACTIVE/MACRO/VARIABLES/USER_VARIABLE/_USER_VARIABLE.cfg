#.................................................................................................................
# _USER_VARIABLE - No additional options/ Usage: NONE
#
#    This macro holds all the global user variable for this printer
#.................................................................................................................
# Required variable(s) to be set. Add the following to your global variable dictionary block as:
#
# [gcode_macro _GLOBAL_VARS]
#  variable_z_endstop_x
#  variable_z_endstop_y   
#
#.................................................................................................................
# Required external macro(s) used by this macro.
#
# _general_Debug
# _GLOBAL_VARS
#
#.................................................................................................................

#.................................................................................................................
#
## URL Resources: https://github.com/zellneralex/klipper_config/blob/master/printer.cfg#L170
#                 https://github.com/jlas1/Klicky-Probe/tree/main/Klipper_macros
#                 https://github.com/VoronDesign/VoronUsers/tree/master/abandoned_mods/printer_mods/edwardyeeks/Decontaminator_Purge_Bucket_%26_Nozzle_Scrubber
#                 https://voronregistry.com/mods/ellis-bedfans
#                 https://ellis3dp.com/Print-Tuning-Guide/articles/useful_macros/hotend_fan_monitoring.html#hotend-fan-rpm-monitoring
#        
#                 https://github.com/zellneralex/klipper_config#use-dictionaries-for-_user_variable
#                 
#
#.................................................................................................................

[gcode_macro _USER_VARIABLE]
description: Helper: Contains User defined printer variables
variable_current_control           : {}                      ;current control user global variables
variable_filament                  : {}                      ;different user user variables used for differnet filaments - all values are in mm
variable_respond                   : {}                      ;enable or disable the default of outputs to the console
variable_bedfanvars                : {}                      ;bedfanvars user gloabal variables
variable_status_presets            : {}                      ;status_presets user global variables
variable_sb_vars                   : {}                      ;sb_vars user global variables
variable_peripheral                : {}                      ;values needed for different hardware
variable_speed                     : {}                      ;all speeds are defined in [mm/s] - user defined variables that effect speed
variable_hw                        : {}                      ;enables or disables extra hardware
variable_park                      : {}                      ;different park positions
variable_purge                     : {}                      ;all user variables needed to for the purge bucket and brush
variable_var                       : {}                      ;PRINT_START variables
variable_homing                    : {}                      ;user variables pertaining to homing
variable_z_hop                     :  0                      ;minimal z height for all movment
variable_probe                     : {}                      ;these are only needed if you use a magnetic probe like klicky
variable_print_start               : {}                      ;different user variables used in PRINT_START
variable_unload_sd                 : False                   ;unload sd file at PRINT_END or CANCEL_PRINT. Set this to False if you often reprint the same file
variable_prime                     : {}                      ;user variables that pretain to printing the prime line
variable_mag_probe                 : {}                      ;mag probe variables
variable_run                       : False                   ;used internal to detect that the _USER_VARIABLE was executed
gcode:
   _general_Debug msg="_USER_VARIABLE - entering"
  ###################################################################
  ##                     start of user defines                     ##
  ## this needs to be changed for your printer                     ##
  ###################################################################
  ##### KLICKY_PROBE_MACROS (_User_Variables) SECTION #####
  # the current home for this version is https://github.com/jlas1/Klicky-Probe
  # the 1000 values below is to give an error instead of doing something wrong, hopefully, this won't be used is a printer larger than 1 meter
  #
  #
  #                               X->--------------------------------- 
  #                                  |X0 Y306   X50 Y306           * | Home Y/X (X306,Y306)            
  #                                  |Dock(GM)  Dock Side            | TO ATTACH:
  #                                  |                               |X50        Y306
  #                                  | X0 Y286                       |X0         Y306
  #                                  | Dock Exit Position            |X50        Y306
  #                                  |                               | TO DOCK:
  #                                  |                               |X50        Y306
  #                                  |                               |X0         Y306                  
  #                                  |                               |X0         Y286 
  #                                  |             Home              |
  #                                  |            Z X150 Y150        |^
  #                                  |                               ||
  #                                  ---------------------------------Y
  #                                               Front
  #
  #
  ##### KLICKY_PROBE_MACROS (_User_Variables) SECTION #####
  # if a separate Z endstop switch is in
  # use, specify the coordinates of the switch here (Voron).
  # Set to 0 to have the probe move to center of bed
  {% set user_klicky_z_endstop_x                   = 202.60 %}                             ; the location of the X position for the sexbolt z endstop
  {% set user_klicky_z_endstop_y                   = 303.5 %}                              ; the location of the Y position for the sexbolt z endstop
  {% set user_klicky_safe_z                        = 16 %}                                 ; Minimum Z for attach/dock and homing functions
  #Check the printer specific documentation on klipper Dock/Undock configuration, these are dummy values
  #dock location
  {% set user_klicky_docklocation_x                = 0 %}                                  ; X Dock position
  {% set user_klicky_docklocation_y                = 306 %}                                ; Y Dock position
  #Attach move. final toolhead movement to attach the probe on the mount
   #it's a relative move
  {% set user_klicky_attachmove_x                   = -50 %}                               ;attach movement for the MAG probe
  #Dock move, final toolhead movement to release the probe on the dock
  #it's a relative move  
  {% set user_klicky_dockmove_y                    = -20 %}                                ;dock movement for the MAG probe
  {% set user_klicky_dock_speed                    = 50 %}                                 ; how fast should the toolhead move when docking the probe for the final movement
  {% set user_klicky_z_drop_speed                  = 20 %}                                 ; how fast the z will lower when moving to the z location to clear the probe  
  {% set user_klicky_move_accel                    = 1000 %}                               ; how fast should the toolhead accelerate when moving
  ##### End of KLICKY_PROBE_MACROS (_User_Variables) SECTION #####  
  ##### SB_VARS SECTION #####
  {% set user_sb_vars_fan_led_name                   =  'sb_leds' %}                       ;defines the name in the config file for SB LEDS
  {% set user_sb_vars_fan_idx                        =  '1,2,3,4,5,6,7,8'  %}              ;defines the indexes of the SB LEDs that are apart of the Part cooling Fan 
  {% set user_sb_vars_logo_led_name                  =  'sb_leds' %}                       ;defines the name in the config file for SB LEDS
  {% set user_sb_vars_logo_idx                       =  '9,10,11,12,13,14,15,16' %}        ;defines the indexes of the SB LEDs that are apart of the Logo
  {% set user_sb_vars_nozzle_led_name                =  'sb_leds' %}                       ;defines the name in the config file for SB LEDS
  {% set user_sb_vars_nozzle_idx                     =  '17,18' %}                         ;defines the indexes of the SB LEDs that are apart of the Nozzle
  {% set user_sb_vars_bar_led_name                   =  'progress_bar_leds' %}             ;defines the name in the config file for Progress Bar LEDs
  {% set user_sb_vars_bar_idx                        =  '1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33' %}  ;defines the indexes of the Progress Bar LEDs that are apart of the Progress bar
  ##### End of SB_VARS SECTION #####
  ##### STATUS_PRESETS SECTION #####
  # This section pretains to the M117 macro
  # the 'key' word are the 'words' that the 
  # M117 macro will trigger on (i.e. send
  # the appropriate preset value to the 
  # WLED macro
  {% set user_status_presets_off                     = 2 %}                                ; preset number in WLED for the off preset
  {% set user_status_presets_lookup                  = {
                                                           'off'              : 2,         # equivalent to not set in WLED
                                                           'ready'            : 9,         # if you see the word "ready" apply preset 9
                                                           'busy'             : 4,         # if you see the word "busy" apply preset 4
                                                           'heating'          : 11,        # if you see the word "heating" apply preset 11
                                                           'leveling'         : 7,         # etc... add more states/presets to match your WLED setup
                                                           'homing'           : 13,
                                                           'cleaning'         : 5,
                                                           'meshing'          : 8,
                                                           'calibrating_z'    : 6,
                                                           'printing'         : 14,
                                                           'complete'         : 10,
                                                           'cooling'          : 12
                                                       }
  %}
  ##### End of STATUS_PRESETS SECTION #####
  ##### BEDFANVARS SECTION #####
  {% set user_bedfanvars_threshold                   = 110  %}                            ; If bed temp target is equal to or above this threshold, fans will be enabled. If temp is set to below this threshold, fans will be disabled.
  {% set user_bedfanvars_fast                        = 0.4 %}                             ; Fan speed once bed temp is reached
  {% set user_bedfanvars_slow                        = 0.2 %}                             ; Fan speed while bed is heating
  {% set user_bedfanvars_offset                      = 5 %}                               ; Fan is off when chamber temp < (defaultenclosure-offset), if temp is falling.
  {% set user_bedfanvars_chamber_fast                = 0.60 %}                            ; fan speed to use when trying to keep chamber enclosure at defaultEnclosure temperature (set point chamber temperature)
  ##### End of BEDFANVARS SECTION #####
  ##### CURRENT CONTROL SECTION #####
  {% set user_current_control_PrintCurrentXY         = 1.1 %}                             ; Steppermotor current to be used while printing
  {% set user_current_control_PrintCurrentZ          = 0.8 %}                             ; Steppermotor current to be used while printing
  ##### End of CURRENT CONTROL SECTION #####
  # ##### Z Endstop SECTION #####
  {% set user_z_endstop_xy                           = [user_klicky_z_endstop_x,user_klicky_z_endstop_y,user_klicky_safe_z] %}     ; z Endstop position insight left profile
  {% set user_z_endstop_hop                          = user_klicky_safe_z %}                                                       ; z hop for moves e.g homimg
  {% set user_z_home_current                         = 0.3 %}                                                                      ; reduced homing curent for z
  {% set user_home_accel                             = user_klicky_move_accel %}                                                   ; reduced ACCEL for homing
  {% set user_bed_y_offset                           = 6 %}                                                                        ; Endstop offset to bed max y #was 5
  # ##### End of Z Endstop SECTION #####
  ##### Mag Probe SECTION #####
  {% set user_probe_dock_pos                         = [user_klicky_docklocation_x,user_klicky_docklocation_y] %}   ; position of the dock
  {% set user_probe_delta_x                          = ( -1 * user_klicky_attachmove_x) %}                          ; x offset for position before dock
  {% set user_probe_delta_y                          = user_klicky_dockmove_y %}                                    ; y offset to move probe out of dock
  {% set user_z_probe_hop                            = user_klicky_safe_z %}                                        ; z minimum height to avoid crash
  ##### End of Mag Probe SECTION #####
  ##### Park Position SECTION #####
  {% set user_park_ParkHeightPercentage              = 0.50 %}                              ; The percentage of Z height to park the nozzle, expressed as 0.2 to 1.0
                                                                                            ; If the printed object is taller then the expressed Z-axis percent height,
                                                                                            ; the toolhead will then park 10mm above the object.
  {% set user_park_xy_delta                          = 25 %}                                ; distance for x or y from the edge
  {% set user_park_z_max_delta                       = 40 %}                                ; insure to do not hit cam in front
  {% set user_park_z_min                             = 30 %}                                ; minimal z from bed
  {% set user_park_pause_z_delta                     = 2.0 %}                               ; distance to increase head while PAUSE/CANCEL_PRINT
  {% set user_park_at_cancel                         = False %}                             ; park head at CANCEL_PRINT if not paused [False/True]
  ##### End of Park Position SECTION #####
  ##### Filament SECTION #####
  {% set user_filament_current_profile               = 'ABS' %}                          ; the profile you wanted loaded when Klipper starts up ("ABS"or "PETG")
  ##### ABS Filament #####
  {% set user_filament_ABS_LimitAccel                = 3501 %}                           ; PRINT ABS ACCEL LIMITS - ACCEL velocity limit
  {% set user_filament_ABS_LimitDecel                = 1751 %}                           ; PRINT ABS ACCEL LIMITS - DECEL velocity limit
  {% set user_filament_ABS_defaultTempNozzle         = 245 %}                            ; DEFAULT ABS TEMPERATURES - NOZZLE EXTRUDING temperature if none is specified
  {% set user_filament_ABS_defaultReadyNozzle        = 210 %}                            ; DEFAULT ABS TEMPERATURES - NOZZLE READY temperature if none is specified
  {% set user_filament_ABS_defaultWarmNozzle         = 160 %}                            ; DEFAULT ABS TEMPERATURES - NOZZLE WARMING temperature if none is specified
  {% set user_filament_ABS_defaultTempBed            = 110 %}                            ; DEFAULT ABS TEMPERATURES - BED temperature if none is specified
  {% set user_filament_ABS_defaultEnclosure          = 40 %}                             ; DEFAULT ABS TEMPERATURES - ENCLOSURE temperature if none is specified
  {% set user_filament_ABS_MeshToApply               = 'INSITU' %}                       ; ABS MESH :
                                                                                         #The saved mesh to apply, mesh name must be enclosed with "". The bundled HOTMESH
                                                                                         # macro will save it's results as the value entered here.
                                                                                         # *!* To perform a fresh in-situation mesh calibration, instead of loading a saved
                                                                                         # mesh, use "INSITU" for MeshToApply. This will be applied after Z Comp probing.
                                                                                         # *!* to use the default bedmsesh set the field to "DEFAULT"
                                                                                         # *!* To completely skip applying mesh, use "NONE" for MeshToApply
  {% set user_filament_ABS_QGLbeforeSoakMesh         = True %}                           ; ABS HEATSOAK & COOLING - (True/False) Perfrom QGL before applying heat soak for HOTMESH
  {% set user_filament_ABS_QGLbeforeSoakPrint        = True %}                           ; ABS HEATSOAK & COOLING - (True/False) Perfrom QGL before applying heat soak for PRINT
  {% set user_filament_ABS_HotmeshSoakMinutes        = 30 %}                             ; ABS HEATSOAK & COOLING - Minutes to heat-soak prior to running mesh
  {% set user_filament_ABS_PrePrintSoakMinutes       = 25 %}                             ; ABS HEATSOAK & COOLING - Minutes to heat-soak prior to printing
  {% set user_filament_ABS_InsituMeshSoakMinutes     = 01 %}                             ; ABS HEATSOAK & COOLING - Minutes to heat-soak prior to performing an insitu mesh (in addition to PrePrintSoak)
  {% set user_filament_ABS_PostPrintCool             = 1 %}                              ; ABS HEATSOAK & COOLING - Post-Print cooling to prevent nozzle string, minutes of cooling
  {% set user_filament_ABS_PostPrintParkCool         = 2  %}                             ; ABS HEATSOAK & COOLING - Once parks, minutes of cooling
  {% set user_filament_ABS_purgeRetract              = 0.3 %}                            ; ABS OTHER RETRACTIONS - After completing purgeline, how much retraction to perform (Not normally needed)
  {% set user_filament_ABS_EndRetract                = 2.0 %}                            ; ABS OTHER RETRACTIONS - After print has completed, how much retraction to perform
  ##### PETG Filament #####
  {% set user_filament_PETG_LimitAccel               = 3501 %}                           ; PRINT PETG ACCEL LIMITS - ACCEL velocity limit
  {% set user_filament_PETG_LimitDecel               = 1751 %}                           ; PRINT PETG ACCEL LIMITS - DECEL velocity limit
  {% set user_filament_PETG_defaultTempNozzle        = 240 %}                            ; DEFAULT PETG TEMPERATURES - NOZZLE EXTRUDING temperature if none is specified
  {% set user_filament_PETG_defaultReadyNozzle       = 210 %}                            ; DEFAULT PETG TEMPERATURES - NOZZLE READY temperature if none is specified
  {% set user_filament_PETG_defaultWarmNozzle        = 160 %}                            ; DEFAULT PETG TEMPERATURES - NOZZLE WARMING temperature if none is specified
  {% set user_filament_PETG_defaultTempBed           = 80 %}                             ; DEFAULT PETG TEMPERATURES - BED temperature if none is specified
  {% set user_filament_PETG_defaultEnclosure         = 40 %}                             ; DEFAULT PETG TEMPERATURES - ENCLOSURE temperature if none is specified
  {% set user_filament_PETG_MeshToApply              = 'MESH110' %}                      ; PETG MESH :
                                                                                           #The saved mesh to apply, mesh name must be enclosed with "". The bundled HOTMESH
                                                                                           # macro will save it's results as the value entered here.
                                                                                           # *!* To perform a fresh in-situation mesh calibration, instead of loading a saved
                                                                                           # mesh, use "INSITU" for MeshToApply. This will be applied after Z Comp probing.
                                                                                           # *!* to use the default bedmsesh set the field to "DEFAULT"
                                                                                           # *!* To completely skip applying mesh, use "NONE" for MeshToApply
  {% set user_filament_PETG_QGLbeforeSoakMesh        = True %}                           ; PETG HEATSOAK & COOLING - (True/False) Perfrom QGL before applying heat soak for HOTMESH
  {% set user_filament_PETG_QGLbeforeSoakPrint       = True %}                           ; PETG HEATSOAK & COOLING - (True/False) Perfrom QGL before applying heat soak for PRINT
  {% set user_filament_PETG_HotmeshSoakMinutes       = 25 %}                             ; PETG HEATSOAK & COOLING - Minutes to heat-soak prior to running mesh
  {% set user_filament_PETG_PrePrintSoakMinutes      = 15 %}                             ; PETG HEATSOAK & COOLING - Minutes to heat-soak prior to printing
  {% set user_filament_PETG_InsituMeshSoakMinutes    = 01 %}                             ; PETG HEATSOAK & COOLING - Minutes to heat-soak prior to performing an insitu mesh (in addition to PrePrintSoak)
  {% set user_filament_PETG_PostPrintCool            = 1 %}                              ; PETG HEATSOAK & COOLING - Post-Print cooling to prevent nozzle string, minutes of cooling
  {% set user_filament_PETG_PostPrintParkCool        = 2  %}                             ; PETG HEATSOAK & COOLING - Once parks, minutes of cooling
  {% set user_filament_PETG_purgeRetract             = 0.1 %}                            ; PETG OTHER RETRACTIONS - After completing purgeline, how much retraction to perform (Not normally needed)
  {% set user_filament_PETG_EndRetract               = 2.0 %}                            ; PETG OTHER RETRACTIONS - After print has completed, how much retraction to perform

  {% set user_extruder_min_add                       = 30 %}                             ; Temperature add to min Extruder temp
  {% set user_load_distance                          = 90 %}                             ; load distance while load filament
  {% set user_load_extrude                           = 50 %}                             ; extrude distance while load filament
  {% set user_unload_distance                        = 75 %}                             ; unload distance while unload filament
  {% set user_retract_end                            = 2 %}                              ; retract distance at PRINT_END or CANCEL_PRINT
  {% set user_retract_pause                          = 0.5 %}   #1                       ; retract/extrude distance while PAUSE or RESUME
  ##### End of Filament SECTION #####
  ##### Purge & Brush SECTION #####
  # If you are putting your purge bucket at the rear left of the bed as per default installation, enable True on your location_bucket_rear 
  # variable. If you want to put your purge bucket elsewhere (perhaps the front), then set it to False. See diagrams and description 
  # further below on how to set your XY position.
  # {% set user_cn_location_bucket_rear               = False %}
  # If you want the purging routine in your bucket enabled, set to True (and vice versa).
  {% set user_cn_enable_purge                       = False %}                            ; enables(True) or disables(False) heating up the extruder during nozzle clean
  # These parameters define your filament purging. The retract variable is used to retract right after purging to prevent unnecessary
  # oozing. Some filament are particularly oozy and may continue to ooze out of the nozzle for a second or two after retracting. The
  # ooze dwell variable makes allowance for this. Update as necessary. If you decided to not enable purge, you can ignore this section.  
  {% set user_cn_purge_len                          = 10 %}	                             ; Amount of filament, in mm, to purge.
  {% set user_cn_purge_spd                          = 150 %}	                         ; Speed, in mm/min, of the purge.
  {% set user_cn_purge_temp_min                     = 240 %}	                         ; Minimum nozzle temperature to permit a purge. Otherwise, purge will not occur.
  {% set user_cn_purge_ret                          = 2 %}                               ; Retract length, in mm, after purging to prevent slight oozing. Adjust as necessary.
  {% set user_cn_ooze_dwell                         = 2 %}                               ; Dwell/wait time, in seconds, after purging and retracting.
  # Adjust this so that your nozzle scrubs within the brush. Currently defaulted to be a lot higher for safety. Be careful not to go too low!
  {% set user_cn_brush_top                          = 3 %}
  # These parameters define your scrubbing, travel speeds, safe z clearance and how many times you want to wipe. Update as necessary. Wipe 
  # direction is randomized based off whether the left or right bucket is randomly selected in the purge & scrubbing routine.
  {% set user_cn_clearance_z                        = 15 %}	                             ; When traveling, but not cleaning, the clearance along the z-axis between nozzle and brush.
  {% set user_cn_wipe_qty                           = 3 %}	                             ; Number of complete (A complete wipe: left, right, left OR right, left, right) wipes.
  {% set user_cn_prep_spd_xy                        = 3000 %}	                         ; Travel (not cleaning) speed along x and y-axis in mm/min.
  {% set user_cn_prep_spd_z                         = 1500 %}	                         ; Travel (not cleaning) speed along z axis in mm/min.
  {% set user_cn_wipe_spd_xy                        = 5000 %}	                         ; Nozzle wipe speed in mm/min.

  # These parameters define the size of the brush. Update as necessary. A visual reference is provided below. Note that orientation of 
  # parameters remain the same whether bucket is at rear or front.
  # 
  # __________________________________________________________
  #                     PRINTER BACK =305.5
  #
  #                  ←   brush_width   →                            
  #                   _________________                                                          ↑
  #                  |                 |  ↑                     If you chose location_bucket_rear = True, Y position is acquired
  #  brush_start (x) |                 | brush_depth            from your stepper_y position_max. Adjust your brush physically in
  #                  |_________________|  ↓                               Y so that the nozzle scrubs within the brush.       
  #                          (y) = 302.5                                                              ↓
  #                      brush_front
  # __________________________________________________________
  #                     PRINTER FRONT
  # 
  # Brush start = X58
  # Center of Bristles = Y304
  # Z height for scrubbing = X3
  # Brush Width = X88-X58= 31
  #

  {% set user_cn_brush_start                        = 58 %}
  # This value is defaulted from brush location in CAD (rear left). Change if your brush width is different.
  {% set user_cn_brush_width                        = 30 %}
  ## These are only used if location_bucket_rear is False. You specify a custom location in y axis for your brush - see diagram above. ##
  {% set user_cn_brush_front                        = 302.5 %}
  # {% set user_cn_brush_depth                        = 5 %}
  
  # These parameters define the size of your purge bucket. Update as necessary. If you decided to not enable purge, you can ignore 
  # this section. A visual reference is provided below. Note that orientation of parameters remain the same whether bucket is at rear 
  # or front.
  # 
  #                                  57 bucket_gap 93
  #                                      ← ---- →
  #                    30________________50_____101_______________119
  #                    |                 |      |                 |      
  #                    |                 |      |                 |
  #  bucket_start (x)  |                 |______|                 |
  #                    |                 |      |                 |
  #                    |                 |      |                 |
  #                    |_________________|. . . |_________________|
  #                     ← ------------- →        ← ------------- →
  #                     bucket_left_width        bucket_right_width
  #  _______________________________________________________________________________________
  #                                    PRINTER FRONT
  #
  {% set user_cn_bucket_left_width                  = 20 %}
  # These values are defaulted from bucket geometry in CAD (rear left location). Change only if you're using a custom bucket.
  {% set user_cn_bucket_right_width                 = 38 %}
  {% set user_cn_bucket_gap                         = 41 %}
  # For V1.8, you may need to measure where your bucket start is and input into bucket_start. Otherwise, a value of 0 is for a default
  # installation of purge bucket at rear left.
  {% set user_cn_bucket_start                       = 30 %}
  # {% set user_brush_pos                             = 'left' %}                                            ; left/right profile used
  # {% set user_brush_x_middle                        = (user_cn_brush_start+(user_cn_brush_width/2.0)) %}   ; mid point of brush at left profile
  # {% set user_brush_x_middle                        = 224 %}                                               ; mid point of brush at right profile
  # {% set user_brush_x_width                         = user_cn_brush_width %}                               ; width of brush
  {% set user_brush_y_start                         = user_cn_brush_front %}                               ; start point at y
  {% set user_wipe_z                                = user_cn_brush_top %}                                 ; z for wipe moves
  {% set user_wipe_cnt                              = user_cn_wipe_qty %}                                  ; number of full wipes
  {% set user_z_purge                               = 5 %}                                                 ; z above purge bucket
  ##### End of Purge & Brush SECTION #####
  ##### all user defined speeds [mm/min] SECTION #####
  {% set user_nonprinting_speed_NPLimitAccel         = 3000 %}                                    ; NON-PRINT ACCEL LIMITS - Accel velocity limit
  {% set user_nonprinting_speed_NPLimitDecel         = 1500 %}                                    ; NON-PRINT ACCEL LIMITS - Decel velocity limit
  ##### all user defined speeds [mm/sec] SECTION #####
  {% set user_nonprinting_speed_travel_speed         = 200 %}                                     ; NON-PRINT ACCEL LIMITS - how fast all other travel moves will be performed when running macros
  {% set user_ZprobeSpeed                            = 5.0 %}                                     ; [Z-Probe before print] Probing speed for Z Measurements
  {% set user_ZprobeSamples                          = 7 %}                                       ; [Z-Probe before print] Samples probed per position, yeilding as calculated median
  {% set user_ZprobeTolerance                        = 0.050 %}                                   ; [Z-Probe before print] Sample Tolerance per Z Point
  {% set user_ZprobeRetract                          = 1.5 %}                                     ; [Z-Probe before print] Retract from each probing for a D2F-5 1.2 should be good      
  {% set user_z_hop_speed                            = user_klicky_z_drop_speed %}                ; default z_hop speed
  {% set user_retract_speed                          = 30 %}                                      ; default retract/extrude speed
  {% set user_travel_speed                           = user_nonprinting_speed_travel_speed %}     ; travel speed e.g park, dock ...
  {% set user_probe_dock_speed                       = user_klicky_dock_speed %}                  ; dock speed for attach/dock
  {% set user_filament_load_speed                    = 50 %}                                      ; load/unload speed
  {% set user_wipe_speed                             = (user_cn_wipe_spd_xy / 60) %}              ; wipe move #60 
  {% set user_prime_speed                            = 25 %}                                      ; prime line speed
  ##### End of all user defined speeds [mm/sec] SECTION #####
  ##### MAG_PROBE_MACROS DEBUG SECTION #####
  {% set user_mag_probe_debug                        = False %}                           ; Enable Debug output
  ##### End of MAG_PROBE_MACROS DEBUG SECTION #####
  ##### PRINT_START/STOP ROUTINE SECTION #####
  {% set user_print_start_bed_up                     = 10 %}                              ; bed temp raise for faster heat soak
  {% set user_print_start_ival                       = 1 %}                               ; wait time per call in sec
  {% set user_print_start_extruder_time              = 3 %}                               ; time in minutes before soak end to start extruder heating
  {% set user_print_start_bed_time                   = 3 %}                               ; time in minutes before soak end to set bed target temp
  {% set user_print_start_prime_mult                 = 2 %}                               ; multiplier for prime line hight
  {% set user_unload_sd                              = True %}                            ; unload sd file at PRINT_END or CANCEL_PRINT [True,False]
  ##### End of PRINT_START/STOP ROUTINE SECTION #####
  ##### Prime Line SECTION #####
  {% set user_prime_start_xy                         = [5.0,30.0] %}                      ; x&y start coordinates of prime line
  {% set user_prime_z                                = 0.34 %}                            ; default prime layer hight
  {% set user_prime_dir                              = 'Y+' %}                            ; direction of prime line (X+, X-, Y+, Y-)
  {% set user_prime_spacing                          = 0.4 %}                             ; distance between line, move will allways positive
  {% set user_prime_length                           = 220 %}                             ; length of prime line
  {% set user_prime_seg                              = 11 %}                              ; segments in that the prime line is splitted
  {% set user_prime_extrude_per_seg                  = 2 %}                               ; amount of filament extruded per segment
  ##### End of Prime Line SECTION #####
  ##### Respond defaults SECTION #####
  {% set user_respond_debug                         = False %}                            ; All macros that contain the external macro _general_Debug - Enable Debug output (True,False)
  {% set user_respond_maintaince_on_toolhead        = False %}                            ; Flag to indicate to override the _C28 and toolhead park when the SHUTDOWN macro is called during printer shutdown
  {% set user_respond_display_info                  = True  %}                            ; Flag that decides if INFO_ modules are run automatically at boot and displayed every hour with Temperature info
  {% set user_respond_set_status_off_on_at_boot     = True  %}                            ; Flag that enables the STATUS_OFF to be used during boot up - True means do a STATUS_OFF at boot; False means do not do a STATUS_OFF at boot
  # Default behaivior for output messages of the macro 0: no output 1: console output
  {% set user_respond_set_z_current                 = 0 %}                               ; Macro: _SET_Z_CURRENT
  {% set user_respond_set_acc                       = 0 %}                               ; Macro: _SET_ACC
  {% set user_respond_probe_action                  = 1 %}                               ; Macro: _PROBE_ACTION
  {% set user_respond_layer                         = 0 %}                               ; Macro: _LAYER
  ##### End of Respond defaults SECTION #####
  ##### Peripheral SECTION #####
  {% set user_ADXLsoakMinutes                       = 30 %}                              ; Minutes to heat-soak prior to ADXL measurements
  {% set user_filter_on                             = 0.5 %}                             ; filter on value
  {% set user_filter_use_time                       = 80 %}                              ; Nevermore change warning limit in hours
  {% set user_vent_on                               = 15 %}                              ; chamber fan on temperature
  {% set user_caselight_on                          = 0.4 %}                             ; caselight on value
  {% set user_fan_run_after_print                   = 30 %}                              ; time in min to run filter and chamber exhaust after print finsih
  ##### End of Peripheral SECTION #####
  ###################################################################
  ##                      end of user defines                      ##
  ###################################################################
  
  ##########################################################################
  ##                     start of gloabl defines                          ##
  ##                                                                      ##
  ## do not touch these variable they are used internally by other macros ##
  ##                                                                      ##
  ##   this area is needed due to the way Klipper does macro expansion    ##
  ##                                                                      ##
  ##########################################################################
  ##### MAG_PROBE_MACROS SECTION (_MAG_PROBE variables) #####  
  {% set user_mag_probe_state                       = 'unknown' %}                      ;MAG_PROBE variables in _MAG_PROBE global variables - state - possible probe states are UNKNOWN, ATTACHED and DOCKED 
  ##### End of MAG_PROBE_MACROS SECTION (_MAG_PROBE variables) #####
  #####################################################################
  ##                      end of global defines                      ##
  #####################################################################  
  
  # get printer limits & cfg value
  #printer.toolhead.axis_minimum : Coord(x=0.0, y=0.0, z=-6.8, e=0.0)
  {% set min = printer.toolhead.axis_minimum %}
  #printer.toolhead.axis_maximum : Coord(x=300.0, y=306.0, z=260.0, e=0.0)
  {% set max = printer.toolhead.axis_maximum %}
  #printer.configfile.settings.stepper_z.position_endstop : 2.28
  {% set cfg_endstop_z_offset = printer.configfile.settings.stepper_z.position_endstop|default(0.0)|float %}
  # detect additional hardware
  {% set hw_dic = {
                   'display'       : {'ena' : True if 'neopixel neo_display' in printer.configfile.settings
                                         else False},
                   'chamber'       : {'type': 'sensor' if 'temperature_sensor chamber' in printer.configfile.settings
                                         else 'fan'    if 'temperature_fan chamber'    in printer.configfile.settings
                                         else 'none'},
                   'caselight'     : {'ena' : True if 'output_pin caselight' in printer.configfile.settings
                                         else False},
                   'filter'        : {'ena' : True if 'fan_generic filter' in printer.configfile.settings
                                         else False},
                   'runout'        : {'type': 'switch' if 'filament_switch_sensor filament_sensor' in printer.configfile.settings
                                         else 'motion' if 'filament_motion_sensor filament_sensor' in printer.configfile.settings
                                         else 'file'   if 'save_variables'                in printer and filament_loaded in printer.save_variables.variables
                                         else 'none'},
                   'relay'         : {'ena' : True if 'output_pin extruder_relay'   in printer.configfile.settings and
                                                      'output_pin heater_bed_relay' in printer.configfile.settings
                                         else False},
                   'auto_z_offset' : {'type': 'z_calib+flexplate' if 'z_calibration'  in printer and 'save_variables' in printer and 'plates' in printer.save_variables.variables
                                         else 'z_calib'           if 'z_calibration'  in printer
                                         else 'flexplate'         if 'save_variables' in printer and 'plates' in printer.save_variables.variables
                                         else 'none'},
                   'mag_probe'     : {'ena' : True if printer['gcode_macro _MAG_PROBE'] is defined or 'dockable_probe' in printer
                                         else False},
                   'endstop_temp'  : {'ena' : True if 'temperature_sensor endstop' in printer.configfile.settings
                                         else False}
                   }
  %}
  {% set _dummy = hw_dic.chamber.update(
                                        {'ena': True if hw_dic.chamber.type != 'none' else False}
                                        )
  %}
  {% set _dummy = hw_dic.chamber.update(
                                        {'fan': True if hw_dic.chamber.type == 'fan' else False}
                                        )
  %}
  {% set _dummy = hw_dic.runout.update(
                                       {'ena': True if hw_dic.runout.type != 'none' else False}
                                       )
  %}
  {% set _dummy = hw_dic.runout.update(
                                       {'sensor': True if hw_dic.runout.type == 'switch' or hw_dic.runout.type == 'motion'
                                            else False}
                                       )
  %}
  {% set _dummy = hw_dic.auto_z_offset.update(
                                             {'ena': True if hw_dic.auto_z_offset.type != 'none' else False}
                                             )
  %}
  {% set _dummy = hw_dic.auto_z_offset.update(
                                             {'auto': True if hw_dic.auto_z_offset.type == 'z_calib+flexplate' or
                                                              hw_dic.auto_z_offset.type == 'z_calib'
                                                 else False}
                                              )
  %}
  {% set _dummy = hw_dic.auto_z_offset.update(
                                             {'manu': True if hw_dic.auto_z_offset.type == 'z_calib+flexplate' or
                                                              hw_dic.auto_z_offset.type == 'flexplate'
                                                 else False}
                                              )
  %}
  {% set _dummy = hw_dic.mag_probe.update(
                                             {'klicky': True if printer['gcode_macro _ATTACH_KLICKY_PROBE'] is defined and
                                                                printer['gcode_macro _DOCK_KLICKY_PROBE'] is defined and
                                                                hw_dic.mag_probe.ena == True
                                                 else False}
                                              )
  %}  
  {% set _dummy = hw_dic.mag_probe.update(
                                             {'euclid':True if printer['gcode_macro _ATTACH_EUCLID_PROBE'] is defined and
                                                               printer['gcode_macro _DOCK_EUCLID_PROBE'] is defined and
                                                               hw_dic.mag_probe.ena == True
                                                 else False}
                                              )
  %}  
  {% set _dummy = hw_dic.mag_probe.update(
                                             {'klicky':False if hw_dic.mag_probe.ena == True and 
                                                                hw_dic.mag_probe.klicky == True and 
                                                                hw_dic.mag_probe.euclid == True
                                             }
                                         )
  %} 
  #printer.toolhead.axis_minimum : Coord(x=0.0, y=0.0, z=-6.8, e=0.0)
  #printer.toolhead.axis_maximum : Coord(x=300.0, y=306.0, z=260.0, e=0.0)
  
  # calc needed values
  
  # Bed min:
  # X: 0
  # Y: 0
  # Z: 0
  # Bed max:
  # X: 300
  # Y: 306 - 6 = 300
  # Z: 260
  {% set bed = {
                'min': {'x': min.x, 'y': min.y                    , 'z': 0    },
                'max': {'x': max.x, 'y': max.y - user_bed_y_offset, 'z': max.z}
               }
  %}
  # calc_center:
  # X: 300 - 0 = 300 / 2 = 150
  # Y: 300 - 0 = 300 / 2 = 150
  # Z: 260 - 0 = 260 / 2 = 130
  {% set calc_center = {
                        'x': (bed.max.x - bed.min.x) / 2,
                        'y': (bed.max.y - bed.min.y) / 2,
                        'z': (bed.max.z - bed.min.z) / 2
                       }
  %}
  # calc_park:
  #     MIN:
  #        X: 0 + 25 = 25
  #        Y: 0 + 25 = 25
  #        Z: 0 + 30 = 30
  #     MAX:
  #        X: 300 - 25 = 275
  #        Y: 300 - 25 = 275
  #        Z: 260 - 40 = 220
  {% set calc_park = {
                      'min': {'x': bed.min.x + user_park_xy_delta,
                              'y': bed.min.y + user_park_xy_delta,
                              'z': bed.min.z + user_park_z_min},
                      'max': {'x': bed.max.x - user_park_xy_delta,
                              'y': bed.max.y - user_park_xy_delta,
                              'z': bed.max.z - user_park_z_max_delta}
                      }
  %}
  #  calc_mid:
  #         X: 300 - 0 = 300 / 2 = 150
  #         Y: 306 - 0 = 306 / 2 = 153
  {% set calc_mid = {
                     'x': ((max.x - min.x)/2.0)|float,
                     'y': ((max.y - min.y)/2.0)|float
                    } 
  %}
  # calc_z_endstop_z = 2.28+1=3.38|round(0, "ceil")= 4
  # calc_z_hop = 16
  {% set calc_z_endstop_z = cfg_endstop_z_offset|round(0, 'ceil') + 1.0 if cfg_endstop_z_offset > 0 else 1.0 %}
  {% set calc_z_hop = user_z_probe_hop if hw_dic.mag_probe.ena and user_z_probe_hop > user_z_endstop_hop
                 else user_z_endstop_hop 
  %}
  # start: 59
  # end:   59+30=89
  {% set calc_brush = {
                       'start': user_cn_brush_start,
                       'end'  : user_cn_brush_start + user_cn_brush_width
                      }
  %}
  #printer.toolhead.axis_minimum : Coord(x=0.0, y=0.0, z=-6.8, e=0.0)
  #printer.toolhead.axis_maximum : Coord(x=300.0, y=306.0, z=260.0, e=0.0)
  # X[0] X_Position for bucket_pos = 0; 27+(45/2) + (0)+(0) = 49.5
  # X[1] X_Position for bucket_pos = 1; 27+(45/(2-{0,1}))+({0,1}*36)+({0,1}*(40/2)) = 128
  # Y: 302+(5/2) = 153.5
  {% set calc_purge = {
                       'x': [
                            (user_cn_bucket_start + (user_cn_bucket_left_width / (2 - 0)) + (0 * user_cn_bucket_gap)+(0 * (user_cn_bucket_right_width / 2))),
                            (user_cn_bucket_start + (user_cn_bucket_left_width/ (2 - 1)) + (1 * user_cn_bucket_gap) +(1 * (user_cn_bucket_right_width / 2)))
                            ],
                       'y': max.y
                      }
  %}
  # calc_wipe: 
  #    start   X: 89
  #            Y: 302
  #    end     X: 59
  #            Y: 306
  {% set calc_wipe = {
                      'start': {'x': [(4 + user_cn_brush_start + (user_cn_brush_width * (1-0))),(4 + user_cn_brush_start + (user_cn_brush_width * (1-1)))],
                                'y': user_brush_y_start},
                      'end'  : {'x': [(4 + user_cn_brush_start + (user_cn_brush_width * (0))),(4 + user_cn_brush_start + (user_cn_brush_width * (1)))],
                                'y': max.y}
                      }
  %}
  # prepare dictonaries 
  {% set sb_vars_dic = {
                        'fan_led_name'    : user_sb_vars_fan_led_name,
                        'fan_idx'         : user_sb_vars_fan_idx,
                        'logo_led_name'   : user_sb_vars_logo_led_name,
                        'logo_idx'        : user_sb_vars_logo_idx,
                        'nozzle_led_name' : user_sb_vars_nozzle_led_name,
                        'nozzle_idx'      : user_sb_vars_nozzle_idx,
                        'bar_led_name'    : user_sb_vars_bar_led_name,
                        'bar_idx'         : user_sb_vars_bar_idx
                       }
  %}
  {% set status_presets_dic = {
                               'off'                : user_status_presets_off,
                               'lookup'             : {'off'                 : user_status_presets_lookup.off,
                                                       'ready'               : user_status_presets_lookup.ready,
                                                       'busy'                : user_status_presets_lookup.busy,
                                                       'heating'             : user_status_presets_lookup.heating,
                                                       'leveling'            : user_status_presets_lookup.leveling,
                                                       'homing'              : user_status_presets_lookup.homing,
                                                       'cleaning'            : user_status_presets_lookup.cleaning,
                                                       'meshing'             : user_status_presets_lookup.meshing,
                                                       'calibrating_z'       : user_status_presets_lookup.calibrating_z,
                                                       'auto_calibrating_z'  : user_status_presets_lookup.calibrating_z,
                                                       'printing'            : user_status_presets_lookup.printing,
                                                       'complete'            : user_status_presets_lookup.complete,
                                                       'cooling'             : user_status_presets_lookup.cooling
                                                      }
                              }
  %}
  {% set current_control_dic = {
                                'PrintCurrentXY'   : user_current_control_PrintCurrentXY,
                                'PrintCurrentZ'    : user_current_control_PrintCurrentZ
                               }
  %}
  {% set bedfanvars_dic = {
                           'threshold'     : user_bedfanvars_threshold,
                           'fast'          : user_bedfanvars_fast,
                           'slow'          : user_bedfanvars_slow,
                           'offset'        : user_bedfanvars_offset,
                           'chamber_fast'  : user_bedfanvars_chamber_fast
                          }
  %}
  {% set homing_dic = {
                       'z_endstop': {'x':user_z_endstop_xy[0], 'y':user_z_endstop_xy[1], 'z':calc_z_endstop_z, 'hop':user_z_endstop_hop},
                       'z_current': user_z_home_current,
                       'accel'    : user_home_accel
                      }
  %}
  ## purge 
  #       X: 29.5
  #       Y: 306
  #       Z: 2.5
  #  start:
  #       X: 59
  #       Y: 302
  #       Z: 3
  #   end:
  #       X: 89
  #       Y: 306
  #       Z: 3
  # offset: 306 - 302 / 2.5 = 4/2.5 = 1.6
  #    cnt: 2.5
  {% set purge_dic = {
                      'purge'                 : {'x':[calc_purge.x[0],calc_purge.x[1]], 'y':calc_purge.y, 'z':(user_z_purge + user_wipe_z)},
                      'wipe'                  : {'start'  : {'x': [calc_wipe.start.x[0],calc_wipe.start.x[1]], 'y': calc_wipe.start.y, 'z':user_wipe_z},
                                                 'end'    : {'x': [calc_wipe.end.x[0]  ,calc_wipe.end.x[1]  ], 'y': calc_wipe.end.y,   'z':(user_wipe_z+ + user_cn_clearance_z)},
                                                 'travel' : {'z': (user_wipe_z + user_cn_clearance_z)},
                                                 'offset' : ((calc_wipe.end.y - calc_wipe.start.y) / user_wipe_cnt),
                                                 'cnt'    : user_wipe_cnt},
                      # 'location_bucket_rear'  : user_cn_location_bucket_rear,
                      'enable_purge'          : user_cn_enable_purge,
                      'purge_len'             : user_cn_purge_len,
                      'purge_spd'             : user_cn_purge_spd,
                      'purge_temp_min'        : user_cn_purge_temp_min,
                      'purge_ret'             : user_cn_purge_ret,
                      'ooze_dwell'            : user_cn_ooze_dwell,
                      # 'brush_top'             : user_cn_brush_top,
                      # 'clearance_z'           : user_cn_clearance_z,
                      # 'wipe_qty'              : user_cn_wipe_qty,
                      # 'prep_spd_xy'           : user_cn_prep_spd_xy,
                      # 'prep_spd_z'            : user_cn_prep_spd_z,
                      # 'wipe_spd_xy'           : user_cn_wipe_spd_xy,
                      # 'brush_start'           : user_cn_brush_start,
                      # 'brush_width'           : user_cn_brush_width,
                      # 'brush_front'           : user_cn_brush_front,
                      # 'brush_depth'           : user_cn_brush_depth,
                      # 'bucket_left_width'     : user_cn_bucket_left_width,
                      # 'bucket_right_width'    : user_cn_bucket_right_width,
                      # 'bucket_gap'            : user_cn_bucket_gap,
                      # 'bucket_start'          : user_cn_bucket_start
                      }
  %}
  ## dock.x = 0
  ## dock.y = 306-20 = 286
  ## store.x = 0+50 = 50
  ## store.y = 306
  {% set probe_dic = {
                      'dock'        : {'x'    : user_probe_dock_pos[0],             
                                       'y'    : user_probe_dock_pos[1] + user_probe_delta_y},
                      'store'       : {'x'    : user_probe_dock_pos[0] + user_probe_delta_x,
                                       'y'    : user_probe_dock_pos[1]}
                      }
  %}
  {% set speed_dic = {
                      'z_hop'           : (user_z_hop_speed * 60),
                      'retract'         : (user_retract_speed * 60),
                      'travel'          : (user_travel_speed * 60),
                      'dock'            : (user_probe_dock_speed * 60),
                      'load'            : (user_filament_load_speed * 60),
                      'wipe'            : (user_wipe_speed * 60),
                      'prime'           : (user_prime_speed * 60),
                      'NPLimitAccel'    : user_nonprinting_speed_NPLimitAccel,
                      'NPLimitDecel'    : user_nonprinting_speed_NPLimitDecel,
                      'travel_speed'    : user_nonprinting_speed_travel_speed,
                      'ZprobeSpeed'     : user_ZprobeSpeed,
                      'ZprobeSamples'   : user_ZprobeSamples,
                      'ZprobeTolerance' : user_ZprobeTolerance,
                      'ZprobeRetract'   : user_ZprobeRetract
                      }
  %}
  # park:
  # bed:
  #        X: 150
  #        Y: 150
  #        Z: 30
  # center:
  #        X: 150
  #        Y: 150
  #        Z: 130
  # front:
  #        X: 150
  #        Y: 25
  #        Z: 220
  # frontlow:
  #        X: 150
  #        Y: 25
  #        Z: 30
  # rear: 
  #        X: 25
  #        Y: 275
  #        Z: 220
  #   pause:
  #        X: 29.5
  #        Y: 306
  #        Z: 2
  # park_at_cancel: False
  # parkHeigthPercentage: 50% or 0.50
  #    mid:
  #        X: 150
  #        Y: 153
  {% set park_dic = {
                     'bed'                   : {'x': calc_center.x,   'y': calc_center.y,   'z': calc_park.min.z},
                     'center'                : {'x': calc_center.x,   'y': calc_center.y,   'z': calc_center.z},
                     'front'                 : {'x': calc_center.x,   'y': calc_park.min.y, 'z': calc_park.max.z},
                     'frontlow'              : {'x': calc_center.x,   'y': calc_park.min.y, 'z': calc_park.min.z},
                     'rear'                  : {'x': calc_park.min.x, 'y': calc_park.max.y, 'z': calc_park.max.z},
                     'pause'                 : {'x': calc_purge.x[1],    'y': calc_purge.y,   'dz': user_park_pause_z_delta},
                     'park_at_cancel'        : user_park_at_cancel,
                     'ParkHeightPercentage'  : user_park_ParkHeightPercentage,
                     'mid'                   : {'x': calc_mid.x,      'y': calc_mid.y}
                     }
  %}
 {% set filament_dic = {
                            'load_distance'   : user_load_distance,
                            'load_extrude'    : user_load_extrude,
                            'unload_distance' : user_unload_distance,
                            'retract'         : {'end'   : user_filament_ABS_EndRetract if user_filament_current_profile == "ABS"
                                                      else user_filament_PETG_EndRetract if user_filament_current_profile == "PETG",
                                                 'pause' : user_retract_pause,
                                                 'cancel': user_retract_end - user_retract_pause},
                            'profile'         : {'name'                  : user_filament_current_profile,
                                                 'LimitAccel'            : user_filament_ABS_LimitAccel if user_filament_current_profile == "ABS"
                                                                      else user_filament_PETG_LimitAccel if user_filament_current_profile == "PETG",                                                                      
                                                 'LimitDecel'            : user_filament_ABS_LimitDecel if user_filament_current_profile == "ABS"
                                                                      else user_filament_PETG_LimitDecel if user_filament_current_profile == "PETG",                                                                      
                                                 'defaultTempNozzle'     : user_filament_ABS_defaultTempNozzle if user_filament_current_profile == "ABS"
                                                                      else user_filament_PETG_defaultTempNozzle if user_filament_current_profile == "PETG",                                                                      
                                                 'defaultReadyNozzle'    : user_filament_ABS_defaultReadyNozzle if user_filament_current_profile == "ABS"
                                                                      else user_filament_PETG_defaultReadyNozzle if user_filament_current_profile == "PETG",                                                                      
                                                 'defaultWarmNozzle'     : user_filament_ABS_defaultWarmNozzle if user_filament_current_profile == "ABS"
                                                                      else user_filament_PETG_defaultWarmNozzle if user_filament_current_profile == "PETG",                                                                      
                                                 'defaultTempBed'        : user_filament_ABS_defaultTempBed if user_filament_current_profile == "ABS"
                                                                      else user_filament_PETG_defaultTempBed if user_filament_current_profile == "PETG",                                                                      
                                                 'defaultEnclosure'      : user_filament_ABS_defaultEnclosure if user_filament_current_profile == "ABS"
                                                                      else user_filament_PETG_defaultEnclosure if user_filament_current_profile == "PETG",                                                                      
                                                 'MeshToApply'           : user_filament_ABS_MeshToApply if user_filament_current_profile == "ABS"
                                                                      else user_filament_PETG_MeshToApply if user_filament_current_profile == "PETG",                                                                     
                                                 'QGLbeforeSoakMesh'     : user_filament_ABS_QGLbeforeSoakMesh if user_filament_current_profile == "ABS"
                                                                      else user_filament_PETG_QGLbeforeSoakMesh if user_filament_current_profile == "PETG",                                                                      
                                                 'QGLbeforeSoakPrint'    : user_filament_ABS_QGLbeforeSoakPrint if user_filament_current_profile == "ABS"
                                                                      else user_filament_PETG_QGLbeforeSoakPrint if user_filament_current_profile == "PETG",                                                                      
                                                 'HotmeshSoakMinutes'    : user_filament_ABS_HotmeshSoakMinutes if user_filament_current_profile == "ABS"
                                                                      else user_filament_PETG_HotmeshSoakMinutes if user_filament_current_profile == "PETG",                                                                      
                                                 'PrePrintSoakMinutes'   : user_filament_ABS_PrePrintSoakMinutes if user_filament_current_profile == "ABS"
                                                                      else user_filament_PETG_PrePrintSoakMinutes if user_filament_current_profile == "PETG",                                                                      
                                                 'InsituMeshSoakMinutes' : user_filament_ABS_InsituMeshSoakMinutes if user_filament_current_profile == "ABS"
                                                                      else user_filament_PETG_InsituMeshSoakMinutes if user_filament_current_profile == "PETG",                                                                      
                                                 'PostPrintCool'         : user_filament_ABS_PostPrintCool if user_filament_current_profile == "ABS"
                                                                      else user_filament_PETG_PostPrintCool if user_filament_current_profile == "PETG",                                                                     
                                                 'PostPrintParkCool'     : user_filament_ABS_PostPrintParkCool if user_filament_current_profile == "ABS"
                                                                      else user_filament_PETG_PostPrintParkCool if user_filament_current_profile == "PETG",                                                                      
                                                 'purgeRetract'          : user_filament_ABS_purgeRetract if user_filament_current_profile == "ABS"
                                                                      else user_filament_PETG_purgeRetract if user_filament_current_profile == "PETG",
                                                 'EndRetract'            : user_filament_ABS_EndRetract if user_filament_current_profile == "ABS"
                                                                      else user_filament_PETG_EndRetract if user_filament_current_profile == "PETG"
                                             }
                        }
  %}
  # prime:
  #   pos:
  #       X: 5
  #       Y: 30
  #       Z: 0.34
  # dir: Y+
  # spacing: 0.4
  # length_per_seg: 220 / 11 = 20
  # seg: 11
  # extrude_per_seg: 2
  {% set prime_dic = {
                      'pos'             : {'x':user_prime_start_xy[0], 'y':user_prime_start_xy[1], 'z':user_prime_z},
                      'dir'             : user_prime_dir,
                      'spacing'         : user_prime_spacing,
                      'length_per_seg'  : user_prime_length / user_prime_seg,
                      'seg'             : user_prime_seg,
                      'extrude_per_seg' : user_prime_extrude_per_seg
                      }
  %}
  # print_start:
  #   bed_up:                10
  #   ival:                   1
  #   time: 
  #      extruder: 3 * 60 = 180
  #      bed: 3 * 60 =      180
  #  prime_mult:             2
  {% set print_start_dic = {
                            'bed_up'     : user_print_start_bed_up|float|round(1),
                            'ival'       : user_print_start_ival|int,
                            'time'       : {'extruder' : (user_print_start_extruder_time * 60)|int,
                                            'bed'      : (user_print_start_bed_time * 60)|int},
                            'prime_mult' : user_print_start_prime_mult|float
                           }
  %}
  {% set respond_dic = {
                        'z_current'                  : user_respond_set_z_current,
                        'acc'                        : user_respond_set_acc,
                        'probe_action'               : user_respond_probe_action,
                        'layer'                      : user_respond_layer,
                        'debug'                      : user_respond_debug,
                        'maintaince_on_toolhead'     : user_respond_maintaince_on_toolhead,
                        'display_info'               : user_respond_display_info,
                        'set_status_off_on_at_boot'  : user_respond_set_status_off_on_at_boot
                       }
  %}
  {% set peripheral_dic =  {
                            'filter'            : {'on_val'           : user_filter_on,
                                                   'warning'          : user_filter_use_time,
                                                   'run_after_print'  : (user_fan_run_after_print * 60)},
                            'vent'               : {'on_val'          : user_vent_on,
                                                    'run_after_print' : ((user_fan_run_after_print * 60) + 5)},
                            'caselight'          : {'on_val'          : user_caselight_on},
                            'ADXLsoakMinutes'    : user_ADXLsoakMinutes
                            }
  %}
  {% set var_dic = {
                    'temp'        : {
                                     'extruder': user_filament_ABS_defaultTempNozzle if user_filament_current_profile == "ABS"
                                            else user_filament_PETG_defaultTempNozzle if user_filament_current_profile == "PETG",  
                                     'bed': user_filament_ABS_defaultTempBed if user_filament_current_profile == "ABS"
                                       else user_filament_PETG_defaultTempBed if user_filament_current_profile == "PETG", 
                                     'chamber': user_filament_ABS_defaultEnclosure if user_filament_current_profile == "ABS"
                                           else user_filament_PETG_defaultEnclosure if user_filament_current_profile == "PETG", 
                                     'endstop': 0.0
                                     },
                    'delta'       : {
                                     'chamber': user_bedfanvars_offset, 
                                     'bed': 10
                                     },
                    'time'        : {
                                     'soak' : (user_filament_ABS_PrePrintSoakMinutes * 60.0) if user_filament_current_profile == "ABS"
                                         else (user_filament_PETG_PrePrintSoakMinutes * 60.0) if user_filament_current_profile == "PETG", 
                                     'soak_extra': 900
                                     },
                    'redo_qgl'    : True,
                    'prime_height': 0.0,
                    'z_adjust'    : 0.0,
                    'filter'      : True
                   } 
  %}
  {% set mag_probe_dic = {
                           'debug'               : user_mag_probe_debug,
                           'state'               : user_mag_probe_state
                         }
  %}
  {% set user_use_default_probe = True if not user_use_settling_probe else False  %}
  #/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ##### KLICKY_PROBE_MACROS (_User_Variables) GCODE SECTION #####
  {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
  {% set probe_variables = global.probe_variables %}
  {% set Mx = printer.configfile.config.stepper_x.position_max|float %}
  {% set My = printer.configfile.config.stepper_y.position_max|float %}
  {% set Ox = printer.configfile.config.probe.x_offset|float %}
  {% set Oy = printer.configfile.config.probe.y_offset|float %}
  {% set Oz = printer.configfile.config.probe.z_offset|float %}

  # If x, y coordinates are set for z endstop, assign them
  {% if user_klicky_z_endstop_x != 0 or user_klicky_z_endstop_y != 0 %}
      {% set _dummy = probe_variables.update({'z_endstop_x':user_klicky_z_endstop_x}) %}  
      {% set _dummy = probe_variables.update({'z_endstop_y':user_klicky_z_endstop_y}) %}    
      SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=probe_variables VALUE="{probe_variables}" 

  # if no x, y coordinates for z endstop, assume probe is endstop and move toolhead to center of bed
  {% else %}
      {% set _dummy = probe_variables.update({'z_endstop_x': ((Mx * 0.5) - Ox) }) %}  
      {% set _dummy = probe_variables.update({'z_endstop_y': ((My * 0.5) - Oy) }) %}    
      SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=probe_variables VALUE="{probe_variables}" 
  {% endif %}
  ##### End of KLICKY_PROBE_MACROS (_User_Variables) GCODE SECTION #####
  #/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  # store results in variable
  SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=current_control     VALUE="{current_control_dic}"
  SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=bedfanvars          VALUE="{bedfanvars_dic}"
  SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=hw                  VALUE="{hw_dic}"
  SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=homing              VALUE="{homing_dic}"
  SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=z_hop               VALUE={calc_z_hop}
  SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=speed               VALUE="{speed_dic}"
  SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=probe               VALUE="{probe_dic}"
  SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=park                VALUE="{park_dic}"
  SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=filament            VALUE="{filament_dic}"
  SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=purge               VALUE="{purge_dic}"
  SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=print_start         VALUE="{print_start_dic}"
  SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=unload_sd           VALUE={user_unload_sd}
  SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=prime               VALUE="{prime_dic}"
  SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=respond             VALUE="{respond_dic}"
  SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=peripheral          VALUE="{peripheral_dic}"
  SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=status_presets      VALUE="{status_presets_dic}"
  SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=sb_vars             VALUE="{sb_vars_dic}"
  SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=var                 VALUE="{var_dic}"
  SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=mag_probe           VALUE="{mag_probe_dic}"
  SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=run                 VALUE=True
  _general_Debug msg="_USER_VARIABLE - exiting"