############### Config options ##################
## URL: https://voronregistry.com/mods/ellis-bedfans
##      https://github.com/VoronDesign/VoronUsers/tree/master/printer_mods/Ellis/Bed_Fans/Klipper_Macros
#.................................................................................................................
# This macro requires the following objects to be defined in the configuration of the printer object:
#    1.  a chamber temperature sensor to be defined:
#             replace all occurances of "J_Chamber_ZDragChain_PT100" with the name of your chamber temperature sensor in this file
#.................................................................................................................
# Included macro commands in this bundle
#.................................................................................................................
# _SET_HEATER_TEMPERATURE - HEATER={"extruder"|"heater_bed"} TARGET={target_temperature} / Usage: _SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=110
#  if the HEATER is the "extruder" is passes the TARGET temperature on to M104 S{TARGET} command
#  if the HEATER is the "heater_bed" and the TARTGET temperature is equal to or greater than variable_threshold in gcode_macro bedfansvars,
#     it sets the TARTGET temperature via M99140 S{TARGET} and triggers the bedfanloop macro
#  if the HEATER is the "heater_bed" and the TARTGET temperature is less than variable_threshold in gcode_macro bedfansvars,
#     it sets the TARTGET temperature via M99140 S{TARGET} and stops the bedfans from blowing and disables the bedfanloop macro

############ Command overrides ############

# Override, set fan speeds to low and start monitoring loop.
[gcode_macro SET_HEATER_TEMPERATURE]
rename_existing: _SET_HEATER_TEMPERATURE
gcode:
    _general_Debug msg="SET_HEATER_TEMPERATURE - entering"
	# Parameters
	{% set HEATER = params.HEATER|default("None") %}
	{% set TARGET = params.TARGET|default(0)|int %}
	# Vars
	{% set THRESHOLD = printer["gcode_macro bedfanvars"].threshold|int %}
    {% set CURRENT_CHAMBERTEMP = printer["temperature_sensor J_Chamber_ZDragChain_PT100"].temperature|float %}
	
	{% if HEATER|lower == "extruder" %}
		M104 S{TARGET}
	{% elif HEATER|lower == "heater_bed" %}
		M99140 S{TARGET}
	{% else %}
		{action_respond_info("Heater %s not supported" % HEATER)}
	{% endif %}

	# Set fans to low if heater_bed temp is requested above threshold temp, and kick off monitoring loop.
	{% if HEATER|lower == "heater_bed" %}
		{% if TARGET >= THRESHOLD %}
			_BedFansSlow
            SET_GCODE_VARIABLE MACRO=bedfanvars VARIABLE=lasttemp VALUE={CURRENT_CHAMBERTEMP}
            SET_GCODE_VARIABLE MACRO=bedfanvars VARIABLE=flag VALUE=0
			UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=5
		{% else %}
			_BedFansOff
            SET_GCODE_VARIABLE MACRO=bedfanvars VARIABLE=lasttemp VALUE={CURRENT_CHAMBERTEMP}
            SET_GCODE_VARIABLE MACRO=bedfanvars VARIABLE=flag VALUE=0
			UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=0 #	Cancel bed fan loop if it's running
		{% endif %}
	{% endif %}
    _general_Debug msg="SET_HEATER_TEMPERATURE -exiting"
