#.................................................................................................................
# BED_MESH_STORE - required parameters: PARK{true,false} SAVE{'now','later','none'}
#
#      / Usage: 
#              BED_MESH_STORE            --> generate MESH and park in the middle
#              BED_MESH_STORE PARK=true  --> generate MESH and park in the middle
#              BED_MESH_STORE SAVE=now   --> generate MESH and park in the middle and save immediately 
#              BED_MESH_STORE PARK=false --> generate MESH
#              BED_MESH_STORE SAVE=later --> generate MESH and park in the middle and save it later 
#
#  Generate a mesh, name it and run save_config if requested
#
#.................................................................................................................
# Required variable(s) to be set. Add the following to your global variable dictionary block as:
#
# [gcode_macro _USER_VARIABLE]
#  variable_speed.z_hop
#  variable_park.bed.z
#  variable_park.bed.x
#  variable_park.bed.y
#  variable_speed.travel
#
# [gcode_macro _GLOBAL_VARS]
#  variable_bed_mesh_store
#
# the file: /home/pi/klipper_config/.variables.stb via the [save_variables] function
#
#.................................................................................................................
# Required external macro(s) used by this macro.
#
# _Mag_Probe_Debug
# _PRINT_AR
# BED_MESH_CALIBRATE
# G0
# _GLOBAL_VARS
# _USER_VARIABLE
#
#.................................................................................................................

#.................................................................................................................
#
## URL Resources: https://github.com/zellneralex/klipper_config/blob/master/bed_mesh.cfg#L83
#      
#.................................................................................................................

## use BED_MESH_STORE                       -> generate MESH and park in the middle
## use BED_MESH_STORE SAVE=now              -> generate MESH and park in the middle and save immediately 
## use BED_MESH_STORE PARK=false            -> generate MESH
## use BED_MESH_STORE SAVE=later            -> generate MESH and park in the middle and save it later 

[gcode_macro BED_MESH_STORE]
description : Helper: Mag Probe; Generate a mesh, name it and run save_config if requested
gcode:
  _Mag_Probe_Debug msg="BED_MESH_STORE - entering"
  {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
  {% set bed_mesh_store = global.bed_mesh_store %}
  
  {% set user = printer['gcode_macro _USER_VARIABLE'] %}
  {% set name = '' if printer.save_variables.variables.plates is not defined 
           else printer.save_variables.variables.plates.array[printer.save_variables.variables.plates.index].name + '-' %}
  {% set mesh_name = name + "Bed_Temp-" + printer.heater_bed.target|int|string + "C" %}
  {action_respond_info("BED_MESH: Generate \"%s\"" % mesh_name)}
  BED_MESH_CALIBRATE PROFILE={mesh_name}
  {% if params.PARK|default('true')|lower == 'true' %}
    G90                                                                   ; set absolute
    G0 Z{user.park.bed.z} F{user.speed.z_hop}                             ; lift first
    G0 X{user.park.bed.x} Y{user.park.bed.y} F{user.speed.travel}         ; park toolhead
    {% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}  ; set it back to relative
  {% endif %}
  {% if params.SAVE|default('none')|lower == 'now' %}
    _PRINT_AR T="BED_MESH: Save Config!"
    SAVE_CONFIG
  {% elif params.SAVE|default('none')|lower == 'later' %}
    _PRINT_AR T="BED_MESH: Save Config after print done"
    {% set _dummy = bed_mesh_store.update({'save_at_end': True }) %}        
    SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=bed_mesh_store VALUE="{bed_mesh_store}"
  {% endif %}
  _Mag_Probe_Debug msg="BED_MESH_STORE - exiting"
