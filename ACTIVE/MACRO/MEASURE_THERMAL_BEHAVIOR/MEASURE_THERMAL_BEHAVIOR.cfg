 # See the following URL: https://github.com/alchemyEngine/measure_thermal_behavior
 
 # Here is my setup of the script measure_thermal_behavior.py:
 
# ######### META DATA #################
# # For data collection organizational purposes only. Useful when sharing dataset.
# USER_ID = 'GadgetAngel#8701'            # e.g. Discord handle
# PRINTER_MODEL = 'voron_v2r2_300'      # e.g. 'voron_v2_350'
# HOME_TYPE = 'microswitch_probe'          # e.g. 'nozzle_pin', 'microswitch_probe', etc.
# PROBE_TYPE = 'euclid'         # e.g. 'klicky', 'omron', 'bltouch', etc.
# X_RAILS = '1x_mgn12_front'            # e.g. '1x_mgn12_front', '2x_mgn9'
# BACKERS = 'Ti_x-steel_y'            # e.g. 'steel_x_y', 'Ti_x-steel_y', 'mgn9_y'
# NOTES = 'using Kailh GM 4.0 on both Euclid probe and Z-sexbolt endstop'              # anything note-worthy about this particular run,
                        # #     no "=" characters
# #####################################

# ######### CONFIGURATION #############
# BASE_URL = 'http://127.0.0.1:7125'  # Printer URL (e.g. http://192.168.1.15)
                                    # # leave default if running locally on Pi.

# BED_TEMPERATURE = 110               # Bed target temperature for measurements.

# HE_TEMPERATURE = 245                # Extruder temperature for measurements.

# MEASURE_INTERVAL = 1                # Interval between Z measurements [minutes]

# N_SAMPLES = 3                       # Number of repeated measurements of Z
                                    # # taken at each MEASURE_INTERVAL.

# HOT_DURATION = 3                    # time after bed temp reached to continue
                                    # # measuring [hours]

# COOL_DURATION = 0                   # Time to continue measuring after heaters
                                    # # are disabled [hours].

# SOAK_TIME = 30                       # Time to wait for bed to heatsoak after
                                    # # reaching BED_TEMPERATURE [minutes].

# MEASURE_GCODE = 'G28 Z'             # G-code called on repeated Z measurements,
                                    # # single line command or macro only.

# TRAMMING_METHOD = "quad_gantry_level" # One of: "quad_gantry_level", "z_tilt", or None

# TRAMMING_CMD = "QUAD_GANTRY_LEVEL"  # Command for QGL/Z-tilt adjustments.
                                    # # e.g. "QUAD_GANTRY_LEVEL", "Z_TILT_ADJUST",
                                    # # "CUSTOM_MACRO", or None.

# MESH_CMD = "BED_MESH_CALIBRATE"     # Command to measure bed mesh for gantry/bed
                                    # # bowing/deformation measurements.

# # If using the Z_THERMAL_ADJUST module. [True/False]
# Z_THERMAL_ADJUST = True

# # Full config section name of the frame temperature sensor (if any). E.g:
# # CHAMBER_SENSOR = "temperature_sensor chamber"
# CHAMBER_SENSOR = "temperature_sensor J_Chamber_ZDragChain_PT100"

# # Extra temperature sensors to collect. E.g:
# # EXTRA_SENSORS = {"ambient": "temperature_sensor ambient",
# #                  "mug1": "temperature_sensor coffee"}
# # can be left empty if none to define.
# EXTRA_SENSORS = {"frame-X-Axis": "temperature_sensor L_X-Axis_Frame_Temp",
                 # "frame-Y-Axis": "temperature_sensor M_Y-Axis_Frame_Temp",
                 # "frame-Z-Axis": "z_thermal_adjust",
                 # "chamber-Toolhead": "temperature_sensor K_Chamber_Toolhead_PT100",
                 # "edge-Bed2": "temperature_sensor I_Bed_Temp2",
                 # "exteranl-Air": "temperature_sensor P_External_Ambient_Temp",
                 # "electronic-Case": "temperature_sensor O_Electronic_Case_Temp",
                 # "Rpi": "temperature_fan Out-take_Left_Side_Controller",
                 # "Octopus Pro": "temperature_fan Octopus_Driver_XYEZ_Fans",
                 # "EBB36": "temperature_fan Fan_EBB36_TH"}
# #####################################


# For full results of testing see folder ~klipper_config/Thermal_Profiling_Test_Results/