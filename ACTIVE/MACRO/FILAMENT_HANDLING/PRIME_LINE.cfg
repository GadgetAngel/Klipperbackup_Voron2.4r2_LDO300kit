#.................................................................................................................
# PRIME_LINE - required parameters: PRIME_HEIGHT{float_number} / Usage: PRIME_LINE PRIME_HEIGHT=0.4
#
#  Purge nozzle at defined position
#
#.................................................................................................................
# Required variable(s) to be set. Add the following to your global variable dictionary block as:
#
# [gcode_macro _USER_VARIABLE]
# variable_prime
# variable_z_hop  
# variable_speed.prime
# variable_speed.z_hop
# variable_speed.travel
# variable_prime.dir
# variable_prime.pos.z
# variable_prime.length_per_seg
# variable_prime.extrude_per_seg
# variable_prime.spacing
# variable_hw.display.ena
#
#.................................................................................................................
# Required external macro(s) used by this macro.
#
# _general_Debug
# _USER_VARIABLE
# _PRINT_AR
# _CG28
# G1
#
#.................................................................................................................

#.................................................................................................................
#
## URL Resources: https://github.com/zellneralex/klipper_config/blob/master/filament.cfg#L132
#      
#.................................................................................................................

[gcode_macro PRIME_LINE]
description: Helper: Purge nozzle at defined position
gcode:
   _general_Debug msg="PRIME_LINE - entering"
  {% set user     = printer['gcode_macro _USER_VARIABLE'] %}
  {% set prime        = user.prime %}
  {% set prime_height = params.PRIME_HEIGHT|default(prime.pos.z) %}     ; get parameter or set default
  {% set move_z       = [user.z_hop,printer.toolhead.position.z]|max %} ; calc movement high
  {% if prime.dir|string == 'X+' %}
    {% set first_line   = 'X%s E%s F%s'  % (prime.length_per_seg, prime.extrude_per_seg, user.speed.prime) %}
    {% set second_line  = 'X-%s E%s F%s' % (prime.length_per_seg, prime.extrude_per_seg, user.speed.prime) %}
    {% set move_to_side = 'Y%s' % prime.spacing %}
  {% elif prime.dir|string == 'X-' %}
    {% set first_line   = 'X-%s E%s F%s' % (prime.length_per_seg, prime.extrude_per_seg, user.speed.prime) %}
    {% set second_line  = 'X%s E%s F%s'  % (prime.length_per_seg, prime.extrude_per_seg, user.speed.prime) %}
    {% set move_to_side = 'Y%s' % prime.spacing %}
  {% elif prime.dir|string == 'Y+' %}
    {% set first_line   = 'Y%s E%s F%s'  % (prime.length_per_seg, prime.extrude_per_seg, user.speed.prime) %}
    {% set second_line  = 'Y-%s E%s F%s' % (prime.length_per_seg, prime.extrude_per_seg, user.speed.prime) %}
    {% set move_to_side = 'X%s' % prime.spacing %}
  {% elif prime.dir|string == 'Y-' %}
    {% set first_line   = 'Y-%s E%s F%s' % (prime.length_per_seg, prime.extrude_per_seg, user.speed.prime) %}
    {% set second_line  = 'Y%s E%s F%s'  % (prime.length_per_seg, prime.extrude_per_seg, user.speed.prime) %}
    {% set move_to_side = 'X%s' % prime.spacing %}
  {% else %}
    {action_raise_error("_USER_VARIABLE.prime.dir is not spezified as X+, X-, Y+ or Y-")}
  {% endif %} 
  {% if user.hw.display.ena %}
       _PRINT_AR T="Prime Line" SHOW_LCD=true
  {% else %}
       _PRINT_AR T="Prime Line" 
  {% endif %}
  _CG28                                                 ; home if not already homed
  G92 E0                                                ; reset Extruder
  G90                                                   ; absolute positioning
  G1 Z{move_z} F{user.speed.z_hop}                      ; move head up
  G1 X{prime.pos.x} Y{prime.pos.y} F{user.speed.travel} ; move to start position
  G1 Z{prime_height} F{user.speed.z_hop}                ; move Z Axis down
  G91                                                   ; relative positioning
  {% for segment in range(prime.seg|int) %}             ; draw the first line
    G1 {first_line}
  {% endfor %}    
  G1 {move_to_side}                                     ; move to side
  {% for segment in range(prime.seg|int) %}             ; draw the second line
    G1 {second_line}
  {% endfor %}
  G92 E0                                                ; reset Extruder
  {% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %} ; set it back to relative
  {% if printer.gcode_move.absolute_extrude %}         M82 {% endif %} ; set it back to absolute
  {% if user.hw.display.ena %} UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=1 {% endif %}
   _general_Debug msg="PRIME_LINE - exiting"

