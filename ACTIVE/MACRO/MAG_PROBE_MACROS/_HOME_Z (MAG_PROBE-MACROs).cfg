#.................................................................................................................
# _HOME_Z - No additional options / Usage: _HOME_Z
#
#  Z homing
#
#.................................................................................................................
# Required variable(s) to be set. Add the following to your global variable dictionary block as:
#
# [gcode_macro _USER_VARIABLE]
# variable_hw.mag_probe.ena
# variable_homing.z_endstop
# variable_homing.z_endstop.x
# variable_homing.z_endstop.y
# variable_homing.z_endstop.z
# variable_speed.z_hop
# variable_speed.travel
# variable_mag_probe.state
#
# [gcode_macro _GLOBAL_VARS]
# variable__home_z
# variable__home_z.calibrate_z_next
#
#.................................................................................................................
# Required external macro(s) used by this macro.
#
# _Mag_Probe_Debug
# _USER_VARIABLE
# _GLOBAL_VARS
# DETACH_PROBE
# G0
# _SET_Z_CURRENT
#
#.................................................................................................................

#.................................................................................................................
#
## URL Resources: https://github.com/zellneralex/klipper_config/blob/master/homing.cfg#L29
#      
#.................................................................................................................
[gcode_macro _HOME_Z]
description: Helper: z homing
gcode:
  _Mag_Probe_Debug msg="_HOME_Z - entering"
  {% set user = printer['gcode_macro _USER_VARIABLE'] %}
  {% set global = printer['gcode_macro _GLOBAL_VARS'] %}
  {% set _home_z = global._home_z %}
  ; use -10 as default to insure it error out in case the variable is not existing
  {% set z_endstop = user.homing.z_endstop|default({'x':-10,'y':-10,'z':0, 'hop':0}) %}
  {% if user.hw.mag_probe.ena %}
    {% set probe = user.mag_probe.state|default('unknown')|lower %} ; get probe state
    #{% set probe = printer['gcode_macro _MAG_PROBE'].state|default('unknown')|lower %} ; get probe state
    {% set error = "run \"_MAG_PROBE ACTION=GET_STATUS\"" if probe == 'unknown' 
              else "last dock or undock failed"           if probe == 'error'
              else "not valid"                            if probe is not in ['docked','attached']
              else "" %}
    {% if error|length > 0 %} 
      {action_raise_error("Home&Probe: MagProbe state %s %s" % (error,probe|upper))}
    {% endif %}
  {% endif %}
  {% if user.hw.mag_probe.ena and probe == 'attached' %}
    {action_respond_info("Home&Probe: Probe docked, remove probe first")}
    DETACH_PROBE                                          ; detach probe
  {% endif %}
  _SET_Z_CURRENT VAL=HOME                                 ; reduce Z current
  G90                                                     ; absolute position
  G0 X{z_endstop.x} Y{z_endstop.y} F{user.speed.travel}   ; move to endstop position
  G28 Z                                                   ; home Z
  G0 Z{z_endstop.z} F{user.speed.z_hop/3}                 ; lift toolhead to stop pressing on the pin
  {% if _home_z.calibrate_z_next %}
    {% set _dummy = _home_z.update({'calibrate_z_next': False }) %}        
    SET_GCODE_VARIABLE MACRO=_GLOBAL_VARS VARIABLE=_home_z VALUE="{_home_z}"
  {% else %}
    _SET_Z_CURRENT                                        ; set Z current back to cfg value
    G0 Z{user.z_hop} F{user.speed.z_hop}                  
  {% endif %}
  {% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %} ; set it back to relative
  _Mag_Probe_Debug msg="_HOME_Z - exiting"