#.................................................................................................................
# _Z_MOVE_CHECK - required parameters: CALLER{'G0','G1'} 
#
#              / Usage: 
#                     _Z_MOVE_CHECK CALLER=G0 params
#                     _Z_MOVE_CHECK CALLER=G1 params
#
#  Check limit and perform move
#
#.................................................................................................................
# Required variable(s) to be set. Add the following to your global variable dictionary block as:
#
# [gcode_macro _USER_VARIABLE]
#  variable_z_hop
#
#.................................................................................................................
# Required external macro(s) used by this macro.
#
# _Mag_Probe_Debug
# _USER_VARIABLE
#
#.................................................................................................................

#.................................................................................................................
#
## URL Resources: https://github.com/zellneralex/klipper_config/blob/master/magprobe.cfg#L185
#      
## Used the same names as in <https://github.com/KevinOConnor/klipper/pull/4328>
## to make the switch easier after the PR is merged
#
#.................................................................................................................

#####################################################################
#
# If your probe needs a Z move for attach/detach use either
#   G0 .... FORCE
#   G1 .... FORCE
#
#####################################################################
[gcode_macro _Z_MOVE_CHECK]
description : Helper: Mag Probe; Check limit and perform move
gcode:
  _Mag_Probe_Debug msg="_Z_MOVE_CHECK - entering"
  {% set user = printer['gcode_macro _USER_VARIABLE'] %}
  {% set param = [] %} 
  {% for key in params %} ; generate base macro call
    {% if key == 'Z' %}
      {% set z_target = params.Z|float if printer.gcode_move.absolute_coordinates
                   else params.Z|float + printer.gcode_move.gcode_position.z %}
      {% set z_move_ok = True if z_target >= user.z_hop or 
                                 z_target >= printer.gcode_move.gcode_position.z 
                    else False %}
      {% if z_move_ok %}
        {% set _dummy = param.append(key + params[key]) %}
      {% else %}
        {action_respond_info("%s: Z Move (%.3f mm -> %.3f mm) not allowed" % 
                             (params.CALLER, printer.gcode_move.gcode_position.z, z_target))}
      {% endif %}
    {% elif key != 'CALLER' %}
      {% set _dummy = param.append(key + params[key]) %}
    {% endif %}
  {% endfor %}
  {params.CALLER}.1 {param|join(" ")} ; call G0 or G1 base macro with all parameters
  _Mag_Probe_Debug msg="_Z_MOVE_CHECK - exiting"
