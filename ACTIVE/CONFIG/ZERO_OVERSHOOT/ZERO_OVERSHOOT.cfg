#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
# ZERO_OVERSHOOT Setup 
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

# Define the [zero_overshoot heater_bed] and/or [zero_overshoot extruder] section and \
# define the option parameter 'zero_overshoot'. 
#  When option parmaeter 'zero_overshoot' is set to True then the printer will automatically change
#  the pid_Kp, pid_Ki, and pid_Kd classical values by the formula you specify to produce a better
#  PID Tune for the specified heater.  There are two heaters this extension will work with 
#  'heater_bed' and 'extruder'
#
#  When the option parameter 'zero_overshoot' is set to False then the printer will NOT automatically 
#  adjust the pid_Kp, pid_Ki,and pid_Kd values and Classic PID control will be used.
#
# Kp_multiplier default value is 3.3333333333, Ki_multiplier default value is 3.3333333333 and Kd_multiplier
# default value is 0.8800
#
# The following formulas will be used:
# Kp = Kp_classic * Kp_multiplier
# Ki = Ki_classic * Ki_multiplier
# Kd = Kd_classic * Kd_multiplier
# NOTE: if you need to divide, remember that 1/x = 1 * reciprocal of the number; 
# The reciprocal is simply: 1/number. To get the reciprocal of a number, we divide 1 by the number. Example: the reciprocal of 2 is Â½
#
# So in the example below 3.3333333333 is really 1.0 divide by 3.0 
# Since the number will only be calculated to the first 3 significant digits only 4 decimal places are used.
#
# NOTE2: for the zero_overshoot calculated values to be done automatically, you must have the following in you printer.cfg file:
# (they can be commented out and located at bottom of the printer.cfg file in the 
#*# <---------------------- SAVE_CONFIG ----------------------> section.)
# File printer.cfg:
# [heater_bed]
# control = pid
# pid_Kp = 41.135
# pid_Ki = 1.187
# pid_Kd = 356.328
#
# [extruder]
# control = pid
# pid_Kp = 37.787
# pid_Ki = 5.360
# pid_Kd = 66.601
#
# If the above pid_Kp, pid_Ki, and pid_Kd values are located in a seperate include file, the software will not 
# know where to look to find the classic PID values for Kp, Ki and Kd.
# 
# Run a the following to get this extension to redo a PID calibration and recalculate the pid_K values:
#      PID_CALIBRATE HEATER=heater_bed TARGET=110
#      PID_CALIBRATE HEATER=extruder TARGET=240
#
# After the Classic PID calibration is done, the extension will display the classic PID values and also display
# the zero_overshoot PID pid_K values but ONLY SAVE the zero_overshoot PID recaluculated values to the printer.cfg
#
# This way when you heat up your desired heater the 3D printer will use the zero_overshoot PID values instead.
#
# With this extension installed you will no longer have to redo this calculation by hand and manually 
# replace the pid_Kp, pid_Ki, and pid_Kp values.

[zero_overshoot heater_bed]
zero_overshoot: True
# Kp_multiplier: 3.3333333333
# Ki_multiplier: 3.3333333333
# Kd_multiplier: 0.8800

[zero_overshoot extruder]
zero_overshoot: True
# Kp_multiplier: 3.3333333333
# Ki_multiplier: 3.3333333333
# Kd_multiplier: 0.8800

