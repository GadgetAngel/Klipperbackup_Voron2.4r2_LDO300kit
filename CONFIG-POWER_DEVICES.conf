#.................................................................................................................
# Power Devices for moonraker
#   Definitions to moonraker for Tasmoto power plugs and the Klipper device so that moonraker can control the relay to reset the RP2040 on the TinyFAN PCB
#.................................................................................................................
# Required variable(s) to be set. Add the following to your global variable dictionary block as:
#
## ---NONE---
#.................................................................................................................
# Required external macro(s) used by this macro.
#
## ---NONE---
#.................................................................................................................

#.................................................................................................................
#
## URL Resources: 
#  URL: https://moonraker.readthedocs.io/en/latest/configuration/#power
#  URL: https://tasmota.github.io/docs/devices/Sonoff-S31/
##      
#.................................................................................................................

[power tasmota_plug_RGB]
# 
# Sonoff 31:
#  RGB 15Amp PWR Supply (sonoff_7)
#
type: tasmota
#   The type of device.  Can be either gpio, klipper_device, rf,
#   tplink_smartplug, tasmota, shelly, homeseer, homeassistant, loxonev1,
#   smartthings, mqtt or hue.
#   This parameter must be provided.
address: 192.168.1.166
#   A valid ip address or hostname for the tasmota device.  This parameter
#   must be provided.
output_id: 1
#   The output_id (or relay id) to use if the Tasmota device supports
#   more than one output.  Default is 1.
off_when_shutdown: True
#   If set to True the device will be powered off when Klipper enters
#   the "shutdown" state.  This option applies to all device types.
#   The default is False.
off_when_shutdown_delay: 2
#   If "off_when_shutdown" is set, this option specifies the amount of time
#   (in seconds) to wait before turning the device off. Default is 0 seconds.
on_when_job_queued: False
#   If set to True the device will power on if a job is queued while the
#   device is off.  This allows for an automated "upload, power on, and
#   print" approach directly from the slicer, see the configuration example
#   below for details. The default is False.
locked_while_printing: False
#   If True, locks the device so that the power cannot be changed while the
#   printer is printing. This is useful to avert an accidental shutdown to
#   the printer's power.  The default is False.
restart_klipper_when_powered: False
#   If set to True, Moonraker will schedule a "FIRMWARE_RESTART" to command
#   after the device has been powered on. If it isn't possible to immediately
#   schedule a firmware restart (ie: Klippy is disconnected), the restart
#   will be postponed until Klippy reconnects and reports that startup is
#   complete.  Prior to scheduling the restart command the power device will
#   always check Klippy's state.  If Klippy reports that it is "ready", the
#   FIRMWARE_RESTART will be aborted as unnecessary.
#   The default is False.
#restart_delay: 1.
#   If "restart_klipper_when_powered" is set, this option specifies the amount
#   of time (in seconds) to delay the restart.  Default is 1 second.
#bound_service:
#   Can be set to any service Moonraker is authorized to manage with the
#   exception of the moonraker service itself. See the tip below this section
#   for details on what services are authorized.  When a bound service has
#   been set the service will be started when the device powers on and stopped
#   when the device powers off.  The default is no service is bound to the
#   device.

[power tasmota_plug_RGB2]
# 
# Sonoff 31:
#  RGB2 10Amp PWR Supply (sonoff_8)
#
type: tasmota
address: 192.168.1.167
output_id: 1
off_when_shutdown: True
off_when_shutdown_delay: 3
on_when_job_queued: False
locked_while_printing: False
restart_klipper_when_powered: False
#restart_delay: 1
#bound_service:

[power tasmota_plug_ESP]
# 
# Sonoff SWB1 Power strip:
#  S1-Pi_S2-HUB_S3-ESP_S4-ESP2
#
type: tasmota
address: 192.168.1.148
output_id: 3
off_when_shutdown: True
off_when_shutdown_delay: 4
on_when_job_queued: False
locked_while_printing: False
restart_klipper_when_powered: False
#restart_delay: 1
#bound_service:

[power tasmota_plug_ESP2]
# 
# Sonoff SWB1 Power strip:
#  S1-Pi_S2-HUB_S3-ESP_S4-ESP2
#
type: tasmota
address: 192.168.1.148
output_id: 4
off_when_shutdown: True
off_when_shutdown_delay: 5
on_when_job_queued: False
locked_while_printing: False
restart_klipper_when_powered: False
#restart_delay: 1
#bound_service:

[power tasmota_plug_Pi]
# 
# Sonoff SWB1 Power strip:
#  S1-Pi_S2-HUB_S3-ESP_S4-ESP2
#
type: tasmota
address: 192.168.1.148
output_id: 1
off_when_shutdown: True
off_when_shutdown_delay: 15
on_when_job_queued: False
locked_while_printing: False
restart_klipper_when_powered: False
#restart_delay: 1
#bound_service:

[power tasmota_plug_EMPTY_HUB]
# 
# Sonoff SWB1 Power strip:
#  S1-Pi_S2-EMPTY_S3-ESP_S4-ESP2
#
type: tasmota
address: 192.168.1.148
output_id: 2
off_when_shutdown: True
off_when_shutdown_delay: 30
on_when_job_queued: False
locked_while_printing: False
restart_klipper_when_powered: False
#restart_delay: 1
#bound_service:

[power rp2040]
#
# Defne a Klipper device so that moonraker can control the relay to reset the RP2040 on the TinyFAN PCB 
# See URL: https://moonraker.readthedocs.io/en/latest/configuration/#klipper-device-configuration
#
# The TinyFAN PCB uses a RP2040-zero as the MCU.  This MCU looses USB communications
# after the Raspberry Pi Reboots or Shutsdown.  To regain access to the USB coms
# the RP2040 has to be forced to go through the USB enumeration process and this can
# only be done via a RESET of the MCU by momentarily removing the 5V line on the USB connector
# (unplugging the USB cable) or by physically hit the "RESET" button on the RP2040 module.
# my hope is that by using a Relay to momentarily remove 5V on the USB connector I will
# RESET the USB communications with Klipper
type: klipper_device
object_name: output_pin reset_line_RP2040
#    The Klipper object_name (as defined in your Klipper config).  Valid examples:
#      output_pin my_pin
#      gcode_macro MY_MACRO
#    Currently, only `output_pin` and `gcode_macro` Klipper devices are
#    supported.  See the note below for macro restrictions. Keep in mind that
#    the object name is case sensitive.  This parameter must be provided.
timer: 0.5
#    A time (in seconds) after which the device will power off after being.
#    switched on. This effectively turns the device into a  momentary switch.
#    This option is available for gpio, klipper_device, tplink_smartplug,
#    shelly, and tasmota devices.  The timer may be a floating point value
#    for gpio types, it should be an integer for all other types.  The
#    default is no timer is set.
